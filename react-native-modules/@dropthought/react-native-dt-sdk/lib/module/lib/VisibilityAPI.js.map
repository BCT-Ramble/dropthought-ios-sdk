{"version":3,"names":["fetcherInstance","VISIBILITY_PATH","visibilityId","apiGetVisibilityById","requestConfig","fetcher","params","method","authRequired","request","then","response","data","result"],"sources":["VisibilityAPI.js"],"sourcesContent":["import { fetcherInstance } from './APIClient';\n\nconst VISIBILITY_PATH = (visibilityId) => `/api/sdk/visibility/${visibilityId}`;\n\n/**\n * get single visibility data\n * @param {string} visibilityId\n * @param {RequestConfig} requestConfig\n * @param {Fetcher=} fetcher\n * @returns {Promise<Visibility>}\n */\nexport async function apiGetVisibilityById(\n  visibilityId,\n  requestConfig = {},\n  fetcher = fetcherInstance\n) {\n  /** @type {RequestConfig} */\n  const params = {\n    method: 'GET',\n    authRequired: true,\n    ...requestConfig,\n  };\n\n  return fetcher\n    .request(VISIBILITY_PATH(visibilityId), params)\n    .then((response) => {\n      return response.data.result;\n    });\n}\n\n/**\n * @typedef {import('./Fetcher').RequestConfig} RequestConfig\n * @typedef {import('./Fetcher').Fetcher} Fetcher\n * @typedef {import('../data').Visibility} Visibility\n */\n"],"mappings":"AAAA,SAASA,eAAe,QAAQ,aAAa;AAE7C,MAAMC,eAAe,GAAIC,YAAY,IAAM,uBAAsBA,YAAa,EAAC;;AAE/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,eAAeC,oBAAoBA,CACxCD,YAAY,EACZE,aAAa,GAAG,CAAC,CAAC,EAClBC,OAAO,GAAGL,eAAe,EACzB;EACA;EACA,MAAMM,MAAM,GAAG;IACbC,MAAM,EAAE,KAAK;IACbC,YAAY,EAAE,IAAI;IAClB,GAAGJ;EACL,CAAC;EAED,OAAOC,OAAO,CACXI,OAAO,CAACR,eAAe,CAACC,YAAY,CAAC,EAAEI,MAAM,CAAC,CAC9CI,IAAI,CAAEC,QAAQ,IAAK;IAClB,OAAOA,QAAQ,CAACC,IAAI,CAACC,MAAM;EAC7B,CAAC,CAAC;AACN;;AAEA;AACA;AACA;AACA;AACA"}