{"version":3,"names":["React","StartScreenLayout","PlaceholderImageTypes","PlaceholderScreen","i18n","ErrorHintScreen","useSurveyContext","fromAPIDateStrToJS","checkSurveyStatus","surveyState","surveyStartDate","surveyEndDate","imageType","ProgramExpired","ProgramScheduled","ProgramDeactivated","ProgramUnavailable","now","Date","StartScreen","props","onStart","onClose","survey","changeLanguage","state","surveyEndDateStr","surveyStartDateStr","onLanguageSelectHandler","useCallback","language","createElement","message","t","onLanguageSelect"],"sources":["StartScreen.js"],"sourcesContent":["import React from 'react';\nimport {\n  StartScreenLayout,\n  PlaceholderImageTypes,\n  PlaceholderScreen,\n  i18n,\n} from '@dropthought/react-native-ui/src';\nimport ErrorHintScreen from './ErrorHintScreen';\nimport { useSurveyContext } from '../contexts/survey';\nimport { fromAPIDateStrToJS } from '../../lib/DateTimerParser';\n\n/**\n *\n * @param {import('../../data').ProgramStateType} surveyState\n * @param {Date} surveyStartDate\n * @param {Date} surveyEndDate\n */\nconst checkSurveyStatus = (surveyState, surveyStartDate, surveyEndDate) => {\n  let imageType;\n  switch (surveyState) {\n    case 'active':\n      imageType = null;\n      break;\n    case 'expired':\n      imageType = PlaceholderImageTypes.ProgramExpired;\n      break;\n    case 'scheduled':\n      imageType = PlaceholderImageTypes.ProgramScheduled;\n      break;\n    case 'inactive':\n      imageType = PlaceholderImageTypes.ProgramDeactivated;\n      break;\n    case 'drafts':\n    default:\n      imageType = PlaceholderImageTypes.ProgramUnavailable;\n  }\n  // still need to check the start-end time\n  if (!imageType) {\n    const now = new Date();\n    if (now < surveyStartDate) {\n      imageType = PlaceholderImageTypes.ProgramScheduled;\n    } else if (now > surveyEndDate) {\n      imageType = PlaceholderImageTypes.ProgramExpired;\n    }\n  }\n  return imageType;\n};\n\n/**\n * @type {React.FunctionComponent<ScreenProps>}\n * @param {ScreenProps} props\n */\nconst StartScreen = (props) => {\n  const { onStart, onClose } = props;\n  const { survey, changeLanguage } = useSurveyContext();\n  const {\n    state: surveyState,\n    surveyEndDate: surveyEndDateStr,\n    surveyStartDate: surveyStartDateStr,\n  } = survey;\n  const surveyStartDate = fromAPIDateStrToJS(surveyStartDateStr);\n  const surveyEndDate = fromAPIDateStrToJS(surveyEndDateStr);\n\n  const onLanguageSelectHandler = React.useCallback(\n    (language) => {\n      changeLanguage(language);\n    },\n    [changeLanguage]\n  );\n\n  // render placeholder\n  const imageType = checkSurveyStatus(\n    surveyState,\n    surveyStartDate,\n    surveyEndDate\n  );\n  if (imageType) {\n    // need to render placeholder\n    return (\n      <ErrorHintScreen onClose={onClose}>\n        <PlaceholderScreen\n          imageType={imageType}\n          message={i18n.t('start-survey:placeholder-message')}\n        />\n      </ErrorHintScreen>\n    );\n  }\n\n  return (\n    <StartScreenLayout\n      survey={survey}\n      onClose={onClose}\n      onStart={onStart}\n      onLanguageSelect={onLanguageSelectHandler}\n    />\n  );\n};\n\nexport default StartScreen;\n\n/**\n * @typedef {Object} ScreenProps\n * @property {() => void} onStart\n * @property {() => void} onClose\n */\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,iBAAiB,EACjBC,qBAAqB,EACrBC,iBAAiB,EACjBC,IAAI,QACC,kCAAkC;AACzC,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,SAASC,gBAAgB,QAAQ,oBAAoB;AACrD,SAASC,kBAAkB,QAAQ,2BAA2B;;AAE9D;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,iBAAiB,GAAGA,CAACC,WAAW,EAAEC,eAAe,EAAEC,aAAa,KAAK;EACzE,IAAIC,SAAS;EACb,QAAQH,WAAW;IACjB,KAAK,QAAQ;MACXG,SAAS,GAAG,IAAI;MAChB;IACF,KAAK,SAAS;MACZA,SAAS,GAAGV,qBAAqB,CAACW,cAAc;MAChD;IACF,KAAK,WAAW;MACdD,SAAS,GAAGV,qBAAqB,CAACY,gBAAgB;MAClD;IACF,KAAK,UAAU;MACbF,SAAS,GAAGV,qBAAqB,CAACa,kBAAkB;MACpD;IACF,KAAK,QAAQ;IACb;MACEH,SAAS,GAAGV,qBAAqB,CAACc,kBAAkB;EACxD;EACA;EACA,IAAI,CAACJ,SAAS,EAAE;IACd,MAAMK,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC;IACtB,IAAID,GAAG,GAAGP,eAAe,EAAE;MACzBE,SAAS,GAAGV,qBAAqB,CAACY,gBAAgB;IACpD,CAAC,MAAM,IAAIG,GAAG,GAAGN,aAAa,EAAE;MAC9BC,SAAS,GAAGV,qBAAqB,CAACW,cAAc;IAClD;EACF;EACA,OAAOD,SAAS;AAClB,CAAC;;AAED;AACA;AACA;AACA;AACA,MAAMO,WAAW,GAAIC,KAAK,IAAK;EAC7B,MAAM;IAAEC,OAAO;IAAEC;EAAQ,CAAC,GAAGF,KAAK;EAClC,MAAM;IAAEG,MAAM;IAAEC;EAAe,CAAC,GAAGlB,gBAAgB,CAAC,CAAC;EACrD,MAAM;IACJmB,KAAK,EAAEhB,WAAW;IAClBE,aAAa,EAAEe,gBAAgB;IAC/BhB,eAAe,EAAEiB;EACnB,CAAC,GAAGJ,MAAM;EACV,MAAMb,eAAe,GAAGH,kBAAkB,CAACoB,kBAAkB,CAAC;EAC9D,MAAMhB,aAAa,GAAGJ,kBAAkB,CAACmB,gBAAgB,CAAC;EAE1D,MAAME,uBAAuB,GAAG5B,KAAK,CAAC6B,WAAW,CAC9CC,QAAQ,IAAK;IACZN,cAAc,CAACM,QAAQ,CAAC;EAC1B,CAAC,EACD,CAACN,cAAc,CACjB,CAAC;;EAED;EACA,MAAMZ,SAAS,GAAGJ,iBAAiB,CACjCC,WAAW,EACXC,eAAe,EACfC,aACF,CAAC;EACD,IAAIC,SAAS,EAAE;IACb;IACA,oBACEZ,KAAA,CAAA+B,aAAA,CAAC1B,eAAe;MAACiB,OAAO,EAAEA;IAAQ,gBAChCtB,KAAA,CAAA+B,aAAA,CAAC5B,iBAAiB;MAChBS,SAAS,EAAEA,SAAU;MACrBoB,OAAO,EAAE5B,IAAI,CAAC6B,CAAC,CAAC,kCAAkC;IAAE,CACrD,CACc,CAAC;EAEtB;EAEA,oBACEjC,KAAA,CAAA+B,aAAA,CAAC9B,iBAAiB;IAChBsB,MAAM,EAAEA,MAAO;IACfD,OAAO,EAAEA,OAAQ;IACjBD,OAAO,EAAEA,OAAQ;IACjBa,gBAAgB,EAAEN;EAAwB,CAC3C,CAAC;AAEN,CAAC;AAED,eAAeT,WAAW;;AAE1B;AACA;AACA;AACA;AACA"}