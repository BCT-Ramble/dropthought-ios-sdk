{"version":3,"sources":["SurveyModal.js"],"names":["React","View","Modal","Dimensions","pick","omit","GlobalStyle","Colors","SDKEntry","ModalProps","height","get","width","SurveyModal","props","sdkProps","modalProps","backgroundColor","appearance","dummyBackgroundColor","white","backgroundColorDark","containerStyle","flex1","SurveyModalOpenSurveyContext","createContext","undefined","useOpenSurvey","context","useContext","Error","SurveyModalContainer","children","onClose","visible","setVisible","useState","openSurveyProps","setOpenSurveyProps","openSurvey","useCallback","inputProps","onCloseSurveyHandler"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { View, Modal, Dimensions } from 'react-native';\nimport { pick, omit } from 'ramda';\nimport { GlobalStyle, Colors } from '@dropthought/react-native-ui';\nimport SDKEntry from './SDKEntry';\n\nconst ModalProps = [\n  'animated',\n  'animationType',\n  'transparent',\n  'visible',\n  'onRequestClose',\n  'onShow',\n  'presentationStyle',\n  'supportedOrientations',\n  'onDismiss',\n  'onOrientationChange',\n  'hardwareAccelerated',\n];\n\nconst height = Dimensions.get('window').height;\nconst width = Dimensions.get('window').width;\n/**\n * @param {SurveyModalProps & SDKEntryProps & ModalProps } props\n */\nexport function SurveyModal(props) {\n  const sdkProps = omit(ModalProps, props);\n  const modalProps = pick(ModalProps, props);\n  //[DK-3764] add backgroundColor to prevent the broken ui issue\n  const { backgroundColor, appearance } = props;\n  let dummyBackgroundColor = Colors.white;\n  if (backgroundColor) {\n    dummyBackgroundColor = backgroundColor;\n  } else if (appearance === 'dark') {\n    dummyBackgroundColor = Colors.backgroundColorDark;\n  }\n  const containerStyle = {\n    height,\n    width,\n    backgroundColor: dummyBackgroundColor,\n  };\n  return (\n    <>\n      <View style={containerStyle} />\n      <Modal presentationStyle=\"overFullScreen\" transparent {...modalProps}>\n        <View style={GlobalStyle.flex1}>\n          <SDKEntry {...sdkProps} />\n        </View>\n      </Modal>\n    </>\n  );\n}\n\n/** @type {React.Context<(param: OpenSurveyProps=) => void>} */\nexport const SurveyModalOpenSurveyContext = React.createContext(\n  () => undefined\n);\n\nexport const useOpenSurvey = () => {\n  const context = React.useContext(SurveyModalOpenSurveyContext);\n  if (context === undefined) {\n    throw new Error('useOpenSurvey must be used within a SurveyModalContainer');\n  }\n\n  return context;\n};\n\n/**\n * @param {SurveyModalProps & SDKEntryProps & ModalProps } param0\n */\nexport const SurveyModalContainer = ({ children, onClose, ...props }) => {\n  const [visible, setVisible] = React.useState(false);\n\n  const [openSurveyProps, setOpenSurveyProps] = React.useState();\n\n  const openSurvey = React.useCallback(\n    (/** @type {SDKEntryProps} */ inputProps) => {\n      setOpenSurveyProps(inputProps);\n      setVisible(true);\n    },\n    []\n  );\n\n  const onCloseSurveyHandler = React.useCallback(() => {\n    onClose && onClose();\n    setVisible(false);\n  }, [onClose]);\n\n  return (\n    <SurveyModalOpenSurveyContext.Provider value={openSurvey}>\n      {children}\n      {visible ? (\n        <SurveyModal\n          {...props}\n          {...openSurveyProps}\n          visible={visible}\n          onClose={onCloseSurveyHandler}\n        />\n      ) : null}\n    </SurveyModalOpenSurveyContext.Provider>\n  );\n};\n\n/**\n * @typedef {import('./SDKEntry').SDKEntryProps} SDKEntryProps\n * @typedef {import('react-native').ModalProps} ModalProps\n */\n/**\n * @typedef {object} SurveyModalProps\n * @property {boolean} visible\n */\n/**\n * @typedef {SDKEntryProps & ModalProps} OpenSurveyProps\n */\n"]}