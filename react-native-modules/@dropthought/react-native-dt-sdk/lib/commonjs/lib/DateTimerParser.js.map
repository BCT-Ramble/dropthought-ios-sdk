{"version":3,"names":["fromAPIDateStrToJS","dateStr","yyyy_MM_dd","HH_mm_ss","split","yyyy","MM","dd","map","Number","HH","mm","ss","Date","exports","fromJSToAPIDateStr","timestamp","undefined","date","padStartWithZero","getFullYear","toString","getMonth","getDate","getHours","getMinutes","getSeconds","join","targetString","maxLength","length","Array","_"],"sources":["DateTimerParser.js"],"sourcesContent":["/**\n * parse api date string to JS\n * @param {string} dateStr 'yyyy-MM-dd HH:mm:ss' ex. \"2019-11-06 07:24:05\"\n * @returns {Date}\n */\n export const fromAPIDateStrToJS = (dateStr) => {\n  const [yyyy_MM_dd, HH_mm_ss] = dateStr.split(' ');\n  const [yyyy, MM, dd] = yyyy_MM_dd.split('-').map(Number);\n  const [HH, mm, ss] = HH_mm_ss.split(':').map(Number);\n  return new Date(yyyy, MM - 1, dd, HH, mm, ss);\n};\n\n/**\n * parse api date number to JS Date\n * @param {number|undefined} timestamp\n * @returns {string|undefined} 'yyyy-MM-dd HH:mm:ss' ex. \"2019-11-06 07:24:05\"\n */\nexport const fromJSToAPIDateStr = (timestamp) => {\n  if (typeof timestamp !== 'number') {\n    return undefined\n  }\n\n  const date = new Date(timestamp)\n  const yyyy = padStartWithZero(date.getFullYear().toString(), 4)\n  const MM = padStartWithZero((date.getMonth()+1).toString(), 2)\n  const dd = padStartWithZero(date.getDate().toString(), 2)\n  const HH = padStartWithZero(date.getHours().toString(), 2)\n  const mm = padStartWithZero(date.getMinutes().toString(), 2)\n  const ss = padStartWithZero(date.getSeconds().toString(), 2)\n\n  return `${[yyyy,MM,dd].join('-')} ${[HH,mm,ss].join(':')}`\n}\n\n/**\n * padStart string with 0\n * @param {string} targetString\n * @param {number} maxLength\n * @returns {string}\n */\nconst padStartWithZero = (targetString, maxLength) => {\n  if(targetString.length >= maxLength) {\n    return targetString\n  }\n  return `${[...Array(maxLength - targetString.length)].map(_ => '0').join('')}${targetString}`\n}\n"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACQ,MAAMA,kBAAkB,GAAIC,OAAO,IAAK;EAC9C,MAAM,CAACC,UAAU,EAAEC,QAAQ,CAAC,GAAGF,OAAO,CAACG,KAAK,CAAC,GAAG,CAAC;EACjD,MAAM,CAACC,IAAI,EAAEC,EAAE,EAAEC,EAAE,CAAC,GAAGL,UAAU,CAACE,KAAK,CAAC,GAAG,CAAC,CAACI,GAAG,CAACC,MAAM,CAAC;EACxD,MAAM,CAACC,EAAE,EAAEC,EAAE,EAAEC,EAAE,CAAC,GAAGT,QAAQ,CAACC,KAAK,CAAC,GAAG,CAAC,CAACI,GAAG,CAACC,MAAM,CAAC;EACpD,OAAO,IAAII,IAAI,CAACR,IAAI,EAAEC,EAAE,GAAG,CAAC,EAAEC,EAAE,EAAEG,EAAE,EAAEC,EAAE,EAAEC,EAAE,CAAC;AAC/C,CAAC;;AAED;AACA;AACA;AACA;AACA;AAJAE,OAAA,CAAAd,kBAAA,GAAAA,kBAAA;AAKO,MAAMe,kBAAkB,GAAIC,SAAS,IAAK;EAC/C,IAAI,OAAOA,SAAS,KAAK,QAAQ,EAAE;IACjC,OAAOC,SAAS;EAClB;EAEA,MAAMC,IAAI,GAAG,IAAIL,IAAI,CAACG,SAAS,CAAC;EAChC,MAAMX,IAAI,GAAGc,gBAAgB,CAACD,IAAI,CAACE,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;EAC/D,MAAMf,EAAE,GAAGa,gBAAgB,CAAC,CAACD,IAAI,CAACI,QAAQ,CAAC,CAAC,GAAC,CAAC,EAAED,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;EAC9D,MAAMd,EAAE,GAAGY,gBAAgB,CAACD,IAAI,CAACK,OAAO,CAAC,CAAC,CAACF,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;EACzD,MAAMX,EAAE,GAAGS,gBAAgB,CAACD,IAAI,CAACM,QAAQ,CAAC,CAAC,CAACH,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;EAC1D,MAAMV,EAAE,GAAGQ,gBAAgB,CAACD,IAAI,CAACO,UAAU,CAAC,CAAC,CAACJ,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;EAC5D,MAAMT,EAAE,GAAGO,gBAAgB,CAACD,IAAI,CAACQ,UAAU,CAAC,CAAC,CAACL,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;EAE5D,OAAQ,GAAE,CAAChB,IAAI,EAACC,EAAE,EAACC,EAAE,CAAC,CAACoB,IAAI,CAAC,GAAG,CAAE,IAAG,CAACjB,EAAE,EAACC,EAAE,EAACC,EAAE,CAAC,CAACe,IAAI,CAAC,GAAG,CAAE,EAAC;AAC5D,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AALAb,OAAA,CAAAC,kBAAA,GAAAA,kBAAA;AAMA,MAAMI,gBAAgB,GAAGA,CAACS,YAAY,EAAEC,SAAS,KAAK;EACpD,IAAGD,YAAY,CAACE,MAAM,IAAID,SAAS,EAAE;IACnC,OAAOD,YAAY;EACrB;EACA,OAAQ,GAAE,CAAC,GAAGG,KAAK,CAACF,SAAS,GAAGD,YAAY,CAACE,MAAM,CAAC,CAAC,CAACtB,GAAG,CAACwB,CAAC,IAAI,GAAG,CAAC,CAACL,IAAI,CAAC,EAAE,CAAE,GAAEC,YAAa,EAAC;AAC/F,CAAC"}