{"version":3,"sources":["VisibilityAPI.js"],"names":["VISIBILITY_PATH","visibilityId","apiGetVisibilityById","requestConfig","fetcher","fetcherInstance","params","method","authRequired","request","then","response","data","result"],"mappings":";;;;;;;AAAA;;AAEA,MAAMA,eAAe,GAAIC,YAAD,IAAmB,uBAAsBA,YAAa,EAA9E;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACO,eAAeC,oBAAf,CACLD,YADK,EAELE,aAAa,GAAG,EAFX,EAGLC,OAAO,GAAGC,0BAHL,EAIL;AACA;AACA,QAAMC,MAAM,GAAG;AACbC,IAAAA,MAAM,EAAE,KADK;AAEbC,IAAAA,YAAY,EAAE,IAFD;AAGb,OAAGL;AAHU,GAAf;AAMA,SAAOC,OAAO,CACXK,OADI,CACIT,eAAe,CAACC,YAAD,CADnB,EACmCK,MADnC,EAEJI,IAFI,CAEEC,QAAD,IAAc;AAClB,WAAOA,QAAQ,CAACC,IAAT,CAAcC,MAArB;AACD,GAJI,CAAP;AAKD;AAED;AACA;AACA;AACA;AACA","sourcesContent":["import { fetcherInstance } from './APIClient';\n\nconst VISIBILITY_PATH = (visibilityId) => `/api/sdk/visibility/${visibilityId}`;\n\n/**\n * get single visibility data\n * @param {string} visibilityId\n * @param {RequestConfig} requestConfig\n * @param {Fetcher=} fetcher\n * @returns {Promise<Visibility>}\n */\nexport async function apiGetVisibilityById(\n  visibilityId,\n  requestConfig = {},\n  fetcher = fetcherInstance\n) {\n  /** @type {RequestConfig} */\n  const params = {\n    method: 'GET',\n    authRequired: true,\n    ...requestConfig,\n  };\n\n  return fetcher\n    .request(VISIBILITY_PATH(visibilityId), params)\n    .then((response) => {\n      return response.data.result;\n    });\n}\n\n/**\n * @typedef {import('./Fetcher').RequestConfig} RequestConfig\n * @typedef {import('./Fetcher').Fetcher} Fetcher\n * @typedef {import('../data').Visibility} Visibility\n */\n"]}