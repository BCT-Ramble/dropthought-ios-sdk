{"version":3,"sources":["UploadFileAPI.js"],"names":["UPLOAD_PATH","uploadFile","file","axiosConfig","fetcher","fetcherInstance","formData","FormData","append","params","method","authRequired","headers","questionType","body","request","then","response","data","success"],"mappings":";;;;;;;AAAA;;AAEA;;AACA;;AAEA,MAAMA,WAAW,GAAG,yBAApB;AAEA;AACA;AACA;AACA;AACA;AACA;;AACO,eAAeC,UAAf,CACLC,IADK,EAELC,WAAW,GAAG,EAFT,EAGLC,OAAO,GAAGC,0BAHL,EAIL;AACA,MAAIC,QAAQ,GAAG,IAAIC,QAAJ,EAAf,CADA,CAEA;;AACAD,EAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBN,IAAxB;AAEA;;AACA,QAAMO,MAAM,GAAG;AACbC,IAAAA,MAAM,EAAE,MADK;AAEbC,IAAAA,YAAY,EAAE,IAFD;AAGbC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAHI;AAMbH,IAAAA,MAAM,EAAE;AACNI,MAAAA,YAAY,EAAE;AADR,KANK;AASbC,IAAAA,IAAI,EAAER,QATO;AAUb,OAAGH;AAVU,GAAf;AAaA,SAAOC,OAAO,CAACW,OAAR,CAAgBf,WAAhB,EAA6BS,MAA7B,EAAqCO,IAArC,CAA2CC,QAAD,IAAc;AAC7D,QAAIA,QAAQ,CAACC,IAAT,CAAcC,OAAd,KAA0B,KAA9B,EAAqC;AACnC,sCAAkBF,QAAlB;AACA;AACD;;AACD,WAAOA,QAAQ,CAACC,IAAhB;AACD,GANM,CAAP;AAOD;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { isNil, isEmpty } from 'ramda';\n\nimport { fetcherInstance } from './APIClient';\nimport { throwRequestError } from './Fetcher';\n\nconst UPLOAD_PATH = '/api/event/storage/file';\n\n/**\n * @param {ImageFormData} file\n * @param {AxiosRequestConfig} axiosConfig\n * @param {Fetcher=} fetcher\n * @returns {Promise<UploadFileResult>}\n */\nexport async function uploadFile(\n  file,\n  axiosConfig = {},\n  fetcher = fetcherInstance\n) {\n  let formData = new FormData();\n  // @ts-ignore\n  formData.append('file', file);\n\n  /** @type {AxiosRequestConfig} */\n  const params = {\n    method: 'POST',\n    authRequired: true,\n    headers: {\n      'Content-Type': 'multipart/form-data',\n    },\n    params: {\n      questionType: 'pictureChoice',\n    },\n    body: formData,\n    ...axiosConfig,\n  };\n\n  return fetcher.request(UPLOAD_PATH, params).then((response) => {\n    if (response.data.success === false) {\n      throwRequestError(response);\n      return;\n    }\n    return response.data;\n  });\n}\n\n/**\n * @typedef {Object} ImageFormData\n * @property {string} uri\n * @property {string} name\n * @property {string} type\n */\n\n/**\n * @typedef {Object} UploadFileResult\n * @property {number} sizeInMB\n * @property {boolean} success\n * @property {string} url\n */\n"]}