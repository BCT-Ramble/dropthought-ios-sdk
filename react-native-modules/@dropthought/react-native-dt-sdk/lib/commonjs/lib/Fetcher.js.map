{"version":3,"names":["_reactNative","require","_jwtDecode","_interopRequireDefault","_ramda","obj","__esModule","default","_defineProperty","key","value","_toPropertyKey","Object","defineProperty","enumerable","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","call","TypeError","Number","RENEW_ENDPOINT","DT_API_KEY_HEADER","DEFAULT_TIMEOUT","throwRequestError","mockAxiosResponse","response","name","message","data","error","status","exports","isRequestTimeoutError","isNoInternetError","isTokenValid","jwtToken","jwtPayload","jwtDecode","Date","now","exp","e","console","log","setRequestHeader","requestConfig","header","headers","restRequestConfig","Fetcher","constructor","param","baseURL","timeout","Promise","resolve","url","init","authToken","apiKey","refreshToken","storeTokens","loadCache","saveCache","defaultRequestConfig","isNil","fetchWithTimeout","abortController","AbortController","cancelTimeout","timeoutId","setTimeout","abort","params","keys","filter","map","encodeURIComponent","join","fetchURL","fetch","method","body","JSON","stringify","signal","then","r","isJSONContent","get","indexOf","entries","json","text","statusText","toString","catch","err","finally","clearTimeout","authorizeConfig","token","Authorization","tokenRenew","renewTokenIfNeeded","accessToken","request","_requestConfig$header","_requestConfig$header2","authRequired","cache","result","pick"],"sources":["Fetcher.js"],"sourcesContent":["import { NativeModule } from 'react-native';\nimport jwtDecode from 'jwt-decode';\nimport { isNil, pick } from 'ramda';\n\nconst RENEW_ENDPOINT = '/api/token/renew';\nconst DT_API_KEY_HEADER = 'X-DT-API-KEY';\n\nconst DEFAULT_TIMEOUT = 30000; // default timeout: 30 seconds\n\n/**\n * @param {import('axios').AxiosResponse<any>} mockAxiosResponse\n */\nexport const throwRequestError = (mockAxiosResponse) => {\n  throw {\n    response: mockAxiosResponse,\n    name: 'RequestError',\n    message:\n      mockAxiosResponse.data.error ||\n      `Request failed with status code ${mockAxiosResponse.status}`,\n  };\n};\n\n/**\n * @param {Error} error\n */\nexport const isRequestTimeoutError = (error) => error.name === 'RequestTimeout';\n\n/**\n * @param {Error} error\n */\nexport const isNoInternetError = (error) =>\n  error.message === 'Network request failed';\n\nconst isTokenValid = (jwtToken) => {\n  let jwtPayload;\n\n  // decode token\n  try {\n    jwtPayload = jwtDecode(jwtToken);\n\n    // check expiration date\n    if (Date.now() >= jwtPayload.exp * 1000) {\n      return false;\n    } else {\n      return jwtPayload;\n    }\n  } catch (e) {\n    console.log('decode jwt failed', e);\n    return false;\n  }\n};\n\n/**\n * @param {RequestConfig} requestConfig\n * @param {object} header\n * @returns {RequestConfig}\n */\nconst setRequestHeader = (requestConfig, header = {}) => {\n  const { headers = {}, ...restRequestConfig } = requestConfig;\n  return {\n    headers: {\n      ...headers,\n      ...header,\n    },\n    ...restRequestConfig,\n  };\n};\n\n/**\n * @typedef {object}  InitializeParams\n * @property {string=} baseURL optional, if want to overwrite the baseURL\n * @property {number=} timeout optional, if want to overwrite the default timeout\n * @property {()=>Promise<string>=} authToken - optional, a function that returns the auth token or api-key\n * @property {()=>Promise<string>=} refreshToken - optional, a function that returns the refresh token\n * @property {(authTokens: AuthToken)=>Promise<any>=} storeTokens - optional, a function that tells the engine how to store tokens\n * @property {(url: string)=>Promise<any>=} loadCache - optional, a function that tells the engine how to load cache from this url\n * @property {(url: string, response: {data: any, status: number, statusText: string, headers: object})=>Promise<any>=} saveCache - optional, a function that tells the engine how to save cache\n * @property {string=} apiKey - or simply given the apiKey, optional\n */\nexport class Fetcher {\n  defaultRequestConfig = {\n    baseURL: '',\n    timeout: DEFAULT_TIMEOUT,\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n    },\n  };\n\n  /** @type {() => Promise<string>} */\n  authToken = () => Promise.resolve(undefined);\n\n  /** @type {string | undefined} this is for api key version2 */\n  apiKey = undefined;\n\n  /** @type {() => Promise<string>} */\n  refreshToken = () => Promise.resolve(undefined);\n\n  /** @type {(authTokens: AuthToken) => Promise<undefined>} */\n  storeTokens = () => Promise.resolve(undefined);\n\n  /**\n   * @template T\n   * @type {(url: string) => Promise<T>}\n   */\n  loadCache = (url) => Promise.resolve(undefined);\n\n  /** @type {(url: string, response: {data: any, status: number, statusText: string}) => Promise<undefined>} */\n  saveCache = (url, response) => Promise.resolve(undefined);\n\n  /**\n   * @param {InitializeParams} param\n   */\n  constructor(param = {}) {\n    this.init(param);\n  }\n\n  /**\n   * @param {InitializeParams} param\n   */\n  init(param = {}) {\n    const {\n      baseURL,\n      timeout,\n      authToken,\n      apiKey,\n      refreshToken,\n      storeTokens,\n      loadCache,\n      saveCache,\n    } = param;\n\n    if (baseURL) {\n      this.defaultRequestConfig.baseURL = baseURL;\n    }\n    if (!isNil(timeout)) {\n      this.defaultRequestConfig.timeout = timeout;\n    }\n\n    if (authToken) {\n      this.authToken = authToken;\n    } else if (apiKey) {\n      this.apiKey = apiKey;\n      this.authToken = () => Promise.resolve(undefined);\n    }\n\n    if (refreshToken) {\n      this.refreshToken = refreshToken;\n    }\n\n    if (storeTokens) {\n      this.storeTokens = storeTokens;\n    }\n\n    if (loadCache) {\n      this.loadCache = loadCache;\n    }\n\n    if (saveCache) {\n      this.saveCache = saveCache;\n    }\n  }\n\n  /**\n   * @template T\n   * @param {string} url\n   * @param {RequestConfig} requestConfig\n   * @returns {import('axios').AxiosPromise<T>}\n   */\n  async fetchWithTimeout(url, requestConfig) {\n    // setting fetch abort (it is supported after RN 0.60)\n    // eslint-disable-next-line no-undef\n    const abortController = new AbortController();\n    const cancelTimeout =\n      requestConfig.timeout ||\n      this.defaultRequestConfig.timeout ||\n      DEFAULT_TIMEOUT;\n    const timeoutId = setTimeout(() => {\n      abortController.abort();\n    }, cancelTimeout);\n\n    // compose fetch params\n    const params = Object.keys(requestConfig.params || {})\n      .filter((key) => !isNil(requestConfig.params[key]))\n      .map((key) => `${key}=${encodeURIComponent(requestConfig.params[key])}`)\n      .join('&');\n    // compose fetch full URL\n    const fetchURL =\n      (requestConfig.baseURL || this.defaultRequestConfig.baseURL) +\n      url +\n      `?${params}`;\n\n    return await fetch(fetchURL, {\n      method: requestConfig.method || 'GET',\n      headers: {\n        ...this.defaultRequestConfig.headers,\n        ...requestConfig.headers,\n      },\n      body: requestConfig.body || JSON.stringify(requestConfig.data),\n      signal: abortController.signal,\n    })\n      .then(async (r) => {\n        const isJSONContent =\n          r.headers.get('content-type').indexOf('application/json') !== -1;\n\n        const headers = {};\n        if (r.headers) {\n          for (const [key, value] of r.headers.entries()) {\n            headers[key] = value;\n          }\n        }\n\n        /** @type {import('axios').AxiosResponse<any>} */\n        let mockAxiosResponse = {};\n        mockAxiosResponse.status = r.status;\n        mockAxiosResponse.data = isJSONContent\n          ? await r.json()\n          : await r.text();\n        mockAxiosResponse.headers = headers;\n        mockAxiosResponse.statusText = r.status.toString();\n\n        if (r.status >= 200 && r.status < 300) {\n          return mockAxiosResponse;\n        }\n        throwRequestError(mockAxiosResponse);\n      })\n      .catch((err) => {\n        if (err.name === 'AbortError' || err.message === 'Aborted') {\n          throw {\n            name: 'RequestTimeout',\n            message: `Request Timeout of ${cancelTimeout}ms.`,\n          };\n        }\n        throw err;\n      })\n      .finally(() => {\n        // clear timeout when request is final, success or failed\n        clearTimeout(timeoutId);\n      });\n  }\n\n  /**\n   * set the auth token to config\n   * @private\n   * @param {RequestConfig} requestConfig\n   * @returns {Promise<RequestConfig>}\n   */\n  async authorizeConfig(requestConfig) {\n    if (this.apiKey) {\n      return setRequestHeader(requestConfig, {\n        [DT_API_KEY_HEADER]: this.apiKey,\n      });\n    }\n    const token = await this.authToken();\n    if (!token) return requestConfig;\n\n    return setRequestHeader(requestConfig, {\n      Authorization: `Bearer ${token}`,\n    });\n  }\n\n  /** @returns {Promise<any>} */\n  async tokenRenew(timeout = DEFAULT_TIMEOUT) {\n    const refreshToken = await this.refreshToken();\n    if (!refreshToken) return;\n\n    return this.fetchWithTimeout(RENEW_ENDPOINT, {\n      method: 'POST',\n      data: {\n        refreshToken,\n      },\n      timeout,\n    }).then((response) => {\n      return this.storeTokens(response.data);\n    });\n  }\n\n  /**\n   * it checks if the authToken(accessToken) is valid (check the expiration date)\n   * if it is invalid, renew token\n   * @private\n   * @param {number=} timeout\n   */\n  async renewTokenIfNeeded(timeout) {\n    const refreshToken = await this.refreshToken();\n    if (!refreshToken) return;\n\n    const accessToken = await this.authToken();\n    if (!accessToken) return;\n\n    if (!isTokenValid(accessToken)) {\n      try {\n        await this.tokenRenew(timeout);\n      } catch (e) {\n        console.log('token renew failed', e.message);\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * @public\n   * @template T\n   * @param {string} url\n   * @param {RequestConfig} requestConfig\n   * @returns {import('axios').AxiosPromise<T>}\n   */\n  async request(url, requestConfig) {\n    let authRequired = false;\n\n    if (requestConfig.headers?.Authorization || requestConfig.authRequired) {\n      authRequired = true;\n\n      // refresh token before sending out actual request\n      await this.renewTokenIfNeeded(requestConfig.timeout);\n      requestConfig = await this.authorizeConfig(requestConfig);\n    }\n\n    // read cached response\n    if (requestConfig.cache) {\n      const result = await this.loadCache(url);\n      if (result) return result;\n    }\n\n    // if auth is required, but there's no authorization, fail early before making a request\n    if (authRequired && !requestConfig.headers?.Authorization && !this.apiKey) {\n      return throwRequestError({\n        status: 401,\n        statusText: '401',\n        data: {},\n        headers: {},\n      });\n    }\n\n    let response = await this.fetchWithTimeout(url, requestConfig);\n\n    // if this request is authRequired and the response status is 401, try to renew token again\n    if (authRequired && response.status === 401 && !this.apiKey) {\n      await this.tokenRenew(requestConfig.timeout);\n\n      // query again with renewed token\n      requestConfig = await this.authorizeConfig(requestConfig);\n      response = await this.fetchWithTimeout(url, requestConfig);\n    }\n\n    // store response if cache is true\n    if (requestConfig.cache) {\n      await this.saveCache(\n        url,\n        pick(['data', 'status', 'statusText', 'headers'], response)\n      );\n    }\n\n    return response;\n  }\n}\n\n/**\n * @typedef {Object} AuthToken\n * @property {string} accessToken\n * @property {string} refreshToken\n */\n\n/**\n * @typedef {Object} CustomRequestConfig\n * @property {boolean} authRequired\n * @property {boolean} cache\n */\n\n/**\n * @typedef {import('axios').AxiosRequestConfig & CustomRequestConfig} RequestConfig\n */\n"],"mappings":";;;;;;AAAA,IAAAA,YAAA,GAAAC,OAAA;AACA,IAAAC,UAAA,GAAAC,sBAAA,CAAAF,OAAA;AACA,IAAAG,MAAA,GAAAH,OAAA;AAAoC,SAAAE,uBAAAE,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAAA,SAAAG,gBAAAH,GAAA,EAAAI,GAAA,EAAAC,KAAA,IAAAD,GAAA,GAAAE,cAAA,CAAAF,GAAA,OAAAA,GAAA,IAAAJ,GAAA,IAAAO,MAAA,CAAAC,cAAA,CAAAR,GAAA,EAAAI,GAAA,IAAAC,KAAA,EAAAA,KAAA,EAAAI,UAAA,QAAAC,YAAA,QAAAC,QAAA,oBAAAX,GAAA,CAAAI,GAAA,IAAAC,KAAA,WAAAL,GAAA;AAAA,SAAAM,eAAAM,GAAA,QAAAR,GAAA,GAAAS,YAAA,CAAAD,GAAA,2BAAAR,GAAA,gBAAAA,GAAA,GAAAU,MAAA,CAAAV,GAAA;AAAA,SAAAS,aAAAE,KAAA,EAAAC,IAAA,eAAAD,KAAA,iBAAAA,KAAA,kBAAAA,KAAA,MAAAE,IAAA,GAAAF,KAAA,CAAAG,MAAA,CAAAC,WAAA,OAAAF,IAAA,KAAAG,SAAA,QAAAC,GAAA,GAAAJ,IAAA,CAAAK,IAAA,CAAAP,KAAA,EAAAC,IAAA,2BAAAK,GAAA,sBAAAA,GAAA,YAAAE,SAAA,4DAAAP,IAAA,gBAAAF,MAAA,GAAAU,MAAA,EAAAT,KAAA;AAEpC,MAAMU,cAAc,GAAG,kBAAkB;AACzC,MAAMC,iBAAiB,GAAG,cAAc;AAExC,MAAMC,eAAe,GAAG,KAAK,CAAC,CAAC;;AAE/B;AACA;AACA;AACO,MAAMC,iBAAiB,GAAIC,iBAAiB,IAAK;EACtD,MAAM;IACJC,QAAQ,EAAED,iBAAiB;IAC3BE,IAAI,EAAE,cAAc;IACpBC,OAAO,EACLH,iBAAiB,CAACI,IAAI,CAACC,KAAK,IAC3B,mCAAkCL,iBAAiB,CAACM,MAAO;EAChE,CAAC;AACH,CAAC;;AAED;AACA;AACA;AAFAC,OAAA,CAAAR,iBAAA,GAAAA,iBAAA;AAGO,MAAMS,qBAAqB,GAAIH,KAAK,IAAKA,KAAK,CAACH,IAAI,KAAK,gBAAgB;;AAE/E;AACA;AACA;AAFAK,OAAA,CAAAC,qBAAA,GAAAA,qBAAA;AAGO,MAAMC,iBAAiB,GAAIJ,KAAK,IACrCA,KAAK,CAACF,OAAO,KAAK,wBAAwB;AAACI,OAAA,CAAAE,iBAAA,GAAAA,iBAAA;AAE7C,MAAMC,YAAY,GAAIC,QAAQ,IAAK;EACjC,IAAIC,UAAU;;EAEd;EACA,IAAI;IACFA,UAAU,GAAG,IAAAC,kBAAS,EAACF,QAAQ,CAAC;;IAEhC;IACA,IAAIG,IAAI,CAACC,GAAG,CAAC,CAAC,IAAIH,UAAU,CAACI,GAAG,GAAG,IAAI,EAAE;MACvC,OAAO,KAAK;IACd,CAAC,MAAM;MACL,OAAOJ,UAAU;IACnB;EACF,CAAC,CAAC,OAAOK,CAAC,EAAE;IACVC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEF,CAAC,CAAC;IACnC,OAAO,KAAK;EACd;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,MAAMG,gBAAgB,GAAGA,CAACC,aAAa,EAAEC,MAAM,GAAG,CAAC,CAAC,KAAK;EACvD,MAAM;IAAEC,OAAO,GAAG,CAAC,CAAC;IAAE,GAAGC;EAAkB,CAAC,GAAGH,aAAa;EAC5D,OAAO;IACLE,OAAO,EAAE;MACP,GAAGA,OAAO;MACV,GAAGD;IACL,CAAC;IACD,GAAGE;EACL,CAAC;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMC,OAAO,CAAC;EAUnB;;EAGA;;EAGA;;EAGA;;EAGA;AACF;AACA;AACA;;EAGE;;EAGA;AACF;AACA;EACEC,WAAWA,CAACC,KAAK,GAAG,CAAC,CAAC,EAAE;IAAArD,eAAA,+BAjCD;MACrBsD,OAAO,EAAE,EAAE;MACXC,OAAO,EAAE/B,eAAe;MACxByB,OAAO,EAAE;QACP,QAAQ,EAAE,kBAAkB;QAC5B,cAAc,EAAE;MAClB;IACF,CAAC;IAAAjD,eAAA,oBAGW,MAAMwD,OAAO,CAACC,OAAO,CAACxC,SAAS,CAAC;IAAAjB,eAAA,iBAGnCiB,SAAS;IAAAjB,eAAA,uBAGH,MAAMwD,OAAO,CAACC,OAAO,CAACxC,SAAS,CAAC;IAAAjB,eAAA,sBAGjC,MAAMwD,OAAO,CAACC,OAAO,CAACxC,SAAS,CAAC;IAAAjB,eAAA,oBAMjC0D,GAAG,IAAKF,OAAO,CAACC,OAAO,CAACxC,SAAS,CAAC;IAAAjB,eAAA,oBAGnC,CAAC0D,GAAG,EAAE/B,QAAQ,KAAK6B,OAAO,CAACC,OAAO,CAACxC,SAAS,CAAC;IAMvD,IAAI,CAAC0C,IAAI,CAACN,KAAK,CAAC;EAClB;;EAEA;AACF;AACA;EACEM,IAAIA,CAACN,KAAK,GAAG,CAAC,CAAC,EAAE;IACf,MAAM;MACJC,OAAO;MACPC,OAAO;MACPK,SAAS;MACTC,MAAM;MACNC,YAAY;MACZC,WAAW;MACXC,SAAS;MACTC;IACF,CAAC,GAAGZ,KAAK;IAET,IAAIC,OAAO,EAAE;MACX,IAAI,CAACY,oBAAoB,CAACZ,OAAO,GAAGA,OAAO;IAC7C;IACA,IAAI,CAAC,IAAAa,YAAK,EAACZ,OAAO,CAAC,EAAE;MACnB,IAAI,CAACW,oBAAoB,CAACX,OAAO,GAAGA,OAAO;IAC7C;IAEA,IAAIK,SAAS,EAAE;MACb,IAAI,CAACA,SAAS,GAAGA,SAAS;IAC5B,CAAC,MAAM,IAAIC,MAAM,EAAE;MACjB,IAAI,CAACA,MAAM,GAAGA,MAAM;MACpB,IAAI,CAACD,SAAS,GAAG,MAAMJ,OAAO,CAACC,OAAO,CAACxC,SAAS,CAAC;IACnD;IAEA,IAAI6C,YAAY,EAAE;MAChB,IAAI,CAACA,YAAY,GAAGA,YAAY;IAClC;IAEA,IAAIC,WAAW,EAAE;MACf,IAAI,CAACA,WAAW,GAAGA,WAAW;IAChC;IAEA,IAAIC,SAAS,EAAE;MACb,IAAI,CAACA,SAAS,GAAGA,SAAS;IAC5B;IAEA,IAAIC,SAAS,EAAE;MACb,IAAI,CAACA,SAAS,GAAGA,SAAS;IAC5B;EACF;;EAEA;AACF;AACA;AACA;AACA;AACA;EACE,MAAMG,gBAAgBA,CAACV,GAAG,EAAEX,aAAa,EAAE;IACzC;IACA;IACA,MAAMsB,eAAe,GAAG,IAAIC,eAAe,CAAC,CAAC;IAC7C,MAAMC,aAAa,GACjBxB,aAAa,CAACQ,OAAO,IACrB,IAAI,CAACW,oBAAoB,CAACX,OAAO,IACjC/B,eAAe;IACjB,MAAMgD,SAAS,GAAGC,UAAU,CAAC,MAAM;MACjCJ,eAAe,CAACK,KAAK,CAAC,CAAC;IACzB,CAAC,EAAEH,aAAa,CAAC;;IAEjB;IACA,MAAMI,MAAM,GAAGvE,MAAM,CAACwE,IAAI,CAAC7B,aAAa,CAAC4B,MAAM,IAAI,CAAC,CAAC,CAAC,CACnDE,MAAM,CAAE5E,GAAG,IAAK,CAAC,IAAAkE,YAAK,EAACpB,aAAa,CAAC4B,MAAM,CAAC1E,GAAG,CAAC,CAAC,CAAC,CAClD6E,GAAG,CAAE7E,GAAG,IAAM,GAAEA,GAAI,IAAG8E,kBAAkB,CAAChC,aAAa,CAAC4B,MAAM,CAAC1E,GAAG,CAAC,CAAE,EAAC,CAAC,CACvE+E,IAAI,CAAC,GAAG,CAAC;IACZ;IACA,MAAMC,QAAQ,GACZ,CAAClC,aAAa,CAACO,OAAO,IAAI,IAAI,CAACY,oBAAoB,CAACZ,OAAO,IAC3DI,GAAG,GACF,IAAGiB,MAAO,EAAC;IAEd,OAAO,MAAMO,KAAK,CAACD,QAAQ,EAAE;MAC3BE,MAAM,EAAEpC,aAAa,CAACoC,MAAM,IAAI,KAAK;MACrClC,OAAO,EAAE;QACP,GAAG,IAAI,CAACiB,oBAAoB,CAACjB,OAAO;QACpC,GAAGF,aAAa,CAACE;MACnB,CAAC;MACDmC,IAAI,EAAErC,aAAa,CAACqC,IAAI,IAAIC,IAAI,CAACC,SAAS,CAACvC,aAAa,CAACjB,IAAI,CAAC;MAC9DyD,MAAM,EAAElB,eAAe,CAACkB;IAC1B,CAAC,CAAC,CACCC,IAAI,CAAC,MAAOC,CAAC,IAAK;MACjB,MAAMC,aAAa,GACjBD,CAAC,CAACxC,OAAO,CAAC0C,GAAG,CAAC,cAAc,CAAC,CAACC,OAAO,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;MAElE,MAAM3C,OAAO,GAAG,CAAC,CAAC;MAClB,IAAIwC,CAAC,CAACxC,OAAO,EAAE;QACb,KAAK,MAAM,CAAChD,GAAG,EAAEC,KAAK,CAAC,IAAIuF,CAAC,CAACxC,OAAO,CAAC4C,OAAO,CAAC,CAAC,EAAE;UAC9C5C,OAAO,CAAChD,GAAG,CAAC,GAAGC,KAAK;QACtB;MACF;;MAEA;MACA,IAAIwB,iBAAiB,GAAG,CAAC,CAAC;MAC1BA,iBAAiB,CAACM,MAAM,GAAGyD,CAAC,CAACzD,MAAM;MACnCN,iBAAiB,CAACI,IAAI,GAAG4D,aAAa,GAClC,MAAMD,CAAC,CAACK,IAAI,CAAC,CAAC,GACd,MAAML,CAAC,CAACM,IAAI,CAAC,CAAC;MAClBrE,iBAAiB,CAACuB,OAAO,GAAGA,OAAO;MACnCvB,iBAAiB,CAACsE,UAAU,GAAGP,CAAC,CAACzD,MAAM,CAACiE,QAAQ,CAAC,CAAC;MAElD,IAAIR,CAAC,CAACzD,MAAM,IAAI,GAAG,IAAIyD,CAAC,CAACzD,MAAM,GAAG,GAAG,EAAE;QACrC,OAAON,iBAAiB;MAC1B;MACAD,iBAAiB,CAACC,iBAAiB,CAAC;IACtC,CAAC,CAAC,CACDwE,KAAK,CAAEC,GAAG,IAAK;MACd,IAAIA,GAAG,CAACvE,IAAI,KAAK,YAAY,IAAIuE,GAAG,CAACtE,OAAO,KAAK,SAAS,EAAE;QAC1D,MAAM;UACJD,IAAI,EAAE,gBAAgB;UACtBC,OAAO,EAAG,sBAAqB0C,aAAc;QAC/C,CAAC;MACH;MACA,MAAM4B,GAAG;IACX,CAAC,CAAC,CACDC,OAAO,CAAC,MAAM;MACb;MACAC,YAAY,CAAC7B,SAAS,CAAC;IACzB,CAAC,CAAC;EACN;;EAEA;AACF;AACA;AACA;AACA;AACA;EACE,MAAM8B,eAAeA,CAACvD,aAAa,EAAE;IACnC,IAAI,IAAI,CAACc,MAAM,EAAE;MACf,OAAOf,gBAAgB,CAACC,aAAa,EAAE;QACrC,CAACxB,iBAAiB,GAAG,IAAI,CAACsC;MAC5B,CAAC,CAAC;IACJ;IACA,MAAM0C,KAAK,GAAG,MAAM,IAAI,CAAC3C,SAAS,CAAC,CAAC;IACpC,IAAI,CAAC2C,KAAK,EAAE,OAAOxD,aAAa;IAEhC,OAAOD,gBAAgB,CAACC,aAAa,EAAE;MACrCyD,aAAa,EAAG,UAASD,KAAM;IACjC,CAAC,CAAC;EACJ;;EAEA;EACA,MAAME,UAAUA,CAAClD,OAAO,GAAG/B,eAAe,EAAE;IAC1C,MAAMsC,YAAY,GAAG,MAAM,IAAI,CAACA,YAAY,CAAC,CAAC;IAC9C,IAAI,CAACA,YAAY,EAAE;IAEnB,OAAO,IAAI,CAACM,gBAAgB,CAAC9C,cAAc,EAAE;MAC3C6D,MAAM,EAAE,MAAM;MACdrD,IAAI,EAAE;QACJgC;MACF,CAAC;MACDP;IACF,CAAC,CAAC,CAACiC,IAAI,CAAE7D,QAAQ,IAAK;MACpB,OAAO,IAAI,CAACoC,WAAW,CAACpC,QAAQ,CAACG,IAAI,CAAC;IACxC,CAAC,CAAC;EACJ;;EAEA;AACF;AACA;AACA;AACA;AACA;EACE,MAAM4E,kBAAkBA,CAACnD,OAAO,EAAE;IAChC,MAAMO,YAAY,GAAG,MAAM,IAAI,CAACA,YAAY,CAAC,CAAC;IAC9C,IAAI,CAACA,YAAY,EAAE;IAEnB,MAAM6C,WAAW,GAAG,MAAM,IAAI,CAAC/C,SAAS,CAAC,CAAC;IAC1C,IAAI,CAAC+C,WAAW,EAAE;IAElB,IAAI,CAACvE,YAAY,CAACuE,WAAW,CAAC,EAAE;MAC9B,IAAI;QACF,MAAM,IAAI,CAACF,UAAU,CAAClD,OAAO,CAAC;MAChC,CAAC,CAAC,OAAOZ,CAAC,EAAE;QACVC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEF,CAAC,CAACd,OAAO,CAAC;QAC5C,MAAMc,CAAC;MACT;IACF;EACF;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;EACE,MAAMiE,OAAOA,CAAClD,GAAG,EAAEX,aAAa,EAAE;IAAA,IAAA8D,qBAAA,EAAAC,sBAAA;IAChC,IAAIC,YAAY,GAAG,KAAK;IAExB,IAAI,CAAAF,qBAAA,GAAA9D,aAAa,CAACE,OAAO,cAAA4D,qBAAA,eAArBA,qBAAA,CAAuBL,aAAa,IAAIzD,aAAa,CAACgE,YAAY,EAAE;MACtEA,YAAY,GAAG,IAAI;;MAEnB;MACA,MAAM,IAAI,CAACL,kBAAkB,CAAC3D,aAAa,CAACQ,OAAO,CAAC;MACpDR,aAAa,GAAG,MAAM,IAAI,CAACuD,eAAe,CAACvD,aAAa,CAAC;IAC3D;;IAEA;IACA,IAAIA,aAAa,CAACiE,KAAK,EAAE;MACvB,MAAMC,MAAM,GAAG,MAAM,IAAI,CAACjD,SAAS,CAACN,GAAG,CAAC;MACxC,IAAIuD,MAAM,EAAE,OAAOA,MAAM;IAC3B;;IAEA;IACA,IAAIF,YAAY,IAAI,GAAAD,sBAAA,GAAC/D,aAAa,CAACE,OAAO,cAAA6D,sBAAA,eAArBA,sBAAA,CAAuBN,aAAa,KAAI,CAAC,IAAI,CAAC3C,MAAM,EAAE;MACzE,OAAOpC,iBAAiB,CAAC;QACvBO,MAAM,EAAE,GAAG;QACXgE,UAAU,EAAE,KAAK;QACjBlE,IAAI,EAAE,CAAC,CAAC;QACRmB,OAAO,EAAE,CAAC;MACZ,CAAC,CAAC;IACJ;IAEA,IAAItB,QAAQ,GAAG,MAAM,IAAI,CAACyC,gBAAgB,CAACV,GAAG,EAAEX,aAAa,CAAC;;IAE9D;IACA,IAAIgE,YAAY,IAAIpF,QAAQ,CAACK,MAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC6B,MAAM,EAAE;MAC3D,MAAM,IAAI,CAAC4C,UAAU,CAAC1D,aAAa,CAACQ,OAAO,CAAC;;MAE5C;MACAR,aAAa,GAAG,MAAM,IAAI,CAACuD,eAAe,CAACvD,aAAa,CAAC;MACzDpB,QAAQ,GAAG,MAAM,IAAI,CAACyC,gBAAgB,CAACV,GAAG,EAAEX,aAAa,CAAC;IAC5D;;IAEA;IACA,IAAIA,aAAa,CAACiE,KAAK,EAAE;MACvB,MAAM,IAAI,CAAC/C,SAAS,CAClBP,GAAG,EACH,IAAAwD,WAAI,EAAC,CAAC,MAAM,EAAE,QAAQ,EAAE,YAAY,EAAE,SAAS,CAAC,EAAEvF,QAAQ,CAC5D,CAAC;IACH;IAEA,OAAOA,QAAQ;EACjB;AACF;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAFAM,OAAA,CAAAkB,OAAA,GAAAA,OAAA"}