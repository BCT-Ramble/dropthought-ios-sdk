{"version":3,"names":[],"sources":["data.d.ts"],"sourcesContent":["export type QuestionType =\n  | 'rating'\n  | 'open'\n  | 'multiChoice'\n  | 'singleChoice'\n  | 'nps';\n\nexport type QuestionSubType = 'smiley' | 'slider';\n\nexport type QuestionBrandType = 'other';\n\nexport type QuestionMetaDataType =\n  | 'Name'\n  | 'Email'\n  | 'Phone'\n  | 'Number'\n  | 'Date'\n  | 'String';\n\nexport type ProgramStateType = 'expired' | 'drafts' | 'active' | 'scheduled';\n\nexport type EventAPISourceType = 'api' | 'kiosk' | 'qr' | 'email' | 'sms';\n\nexport interface Option {\n  isOther: boolean;\n  title: string;\n}\n\nexport interface Question {\n  questionId: string;\n  questionTitle: string;\n  questionBrand?: QuestionBrandType;\n  metaDataType?: QuestionMetaDataType;\n  mandatory: boolean;\n  options: string[];\n  type: QuestionType;\n  subType?: QuestionSubType;\n  scale?: string;\n  category: string;\n  responseErrorText: string;\n  questionTitles: string[];\n  optionsForMatrix: string[][];\n  optional: boolean;\n  phiData: boolean;\n  phiDataList: boolean[];\n  optionImages: string[];\n  otherTextLabel: string;\n}\n\nexport interface Page {\n  pageId: string;\n  pageTitle: string;\n  questions: Question[];\n}\n\nexport interface Rule {\n  id: string;\n  toPageId: string;\n  condition: string;\n  ruleIndex: number;\n  mode: string;\n}\n\nexport interface SurveyProperty {\n  image: string;\n  hexCode: string;\n  fileName?: string;\n  imageBase64?: string;\n  width?: number;\n  height?: number;\n  themeName?: string;\n}\n\nexport interface ProgramInterface {\n  anonymous: boolean;\n  surveyId: string;\n  surveyName: string;\n  language: string;\n  languages: string[];\n  pageOrder: string[];\n  pages: Page[];\n  rules: { [questionId: string]: Rule[] };\n  surveyProperty: SurveyProperty;\n  thankYouText?: string;\n  welcomeText?: string;\n  timezone: string;\n}\n\nexport declare type SurveyState =\n  | 'drafts'\n  | 'scheduled'\n  | 'active'\n  | 'expired'\n  | 'inactive';\nexport interface Survey extends ProgramInterface {\n  state: ProgramStateType;\n  qrCode: string;\n  surveyEndDate: string;\n  surveyStartDate: string;\n  status: SurveyState;\n  endDate: string;\n  startDate: string;\n  backPage: string;\n  nextPage: string;\n  submitSurvey: string;\n  surveyStatus: SurveyState;\n  mandatoryErrorMessage: string;\n  surveyType: number;\n  takeSurvey: string;\n}\n\nexport interface SurveyWithQRCode extends Survey {\n  qrCode: string;\n}\n\nexport interface SurveyLangMaps {\n  [language: string]: Survey | SurveyWithQRCode;\n}\n\n/**\n * Feedback types\n */\nexport interface Feedback {\n  questionId: string;\n  answers: [string | number];\n  type: QuestionType;\n  otherFlag?: boolean;\n}\n\nexport interface SurveyFeedback {\n  surveyId: string;\n  feedbacks: Feedback[];\n  metadata?: any;\n  createdTime: string;\n  timeZone: string;\n}\n\nexport interface Visibility {\n  visibilityId: string;\n  pageName: string;\n  elementName: string;\n  appearance: 'system' | 'light' | 'dark';\n  themeOption:\n    | 'classic'\n    | 'option1'\n    | 'option2'\n    | 'option3'\n    | 'option4'\n    | 'option6'\n    | 'bijliride';\n  fontColor: string;\n  backgroundColor: string;\n  backgroundImage: string;\n  program: VisibilityProgram;\n}\n\nexport interface VisibilityProgram {\n  programId: string;\n}\n\nexport interface ThemeData {\n  themeOption:\n    | 'classic'\n    | 'option1'\n    | 'option2'\n    | 'option3'\n    | 'option4'\n    | 'option6'\n    | 'bijliride';\n  appearance: 'system' | 'light' | 'dark';\n  fontColor: string;\n  backgroundColor: string;\n}\n"],"mappings":""}