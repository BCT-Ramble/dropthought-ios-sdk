{"version":3,"names":["React","_interopRequireWildcard","require","_reactNative","_ramda","_src","_SDKEntry","_interopRequireDefault","obj","__esModule","default","_getRequireWildcardCache","e","WeakMap","r","t","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","_extends","assign","bind","target","arguments","length","source","key","apply","ModalProps","height","Dimensions","width","SurveyModal","props","sdkProps","omit","modalProps","pick","backgroundColor","appearance","dummyBackgroundColor","Colors","white","backgroundColorDark","containerStyle","createElement","Fragment","View","style","Modal","presentationStyle","transparent","GlobalStyle","flex1","SurveyModalOpenSurveyContext","exports","createContext","undefined","useOpenSurvey","context","useContext","Error","SurveyModalContainer","children","onClose","visible","setVisible","useState","openSurveyProps","setOpenSurveyProps","openSurvey","useCallback","inputProps","onCloseSurveyHandler","Provider","value"],"sources":["SurveyModal.js"],"sourcesContent":["import * as React from 'react';\nimport { View, Modal, Dimensions } from 'react-native';\nimport { pick, omit } from 'ramda';\nimport { GlobalStyle, Colors } from '@dropthought/react-native-ui/src';\nimport SDKEntry from './SDKEntry';\n\nconst ModalProps = [\n  'animated',\n  'animationType',\n  'transparent',\n  'visible',\n  'onRequestClose',\n  'onShow',\n  'presentationStyle',\n  'supportedOrientations',\n  'onDismiss',\n  'onOrientationChange',\n  'hardwareAccelerated',\n];\n\nconst height = Dimensions.get('window').height;\nconst width = Dimensions.get('window').width;\n/**\n * @param {SurveyModalProps & SDKEntryProps & ModalProps } props\n */\nexport function SurveyModal(props) {\n  const sdkProps = omit(ModalProps, props);\n  const modalProps = pick(ModalProps, props);\n  //[DK-3764] add backgroundColor to prevent the broken ui issue\n  const { backgroundColor, appearance } = props;\n  let dummyBackgroundColor = Colors.white;\n  if (backgroundColor) {\n    dummyBackgroundColor = backgroundColor;\n  } else if (appearance === 'dark') {\n    dummyBackgroundColor = Colors.backgroundColorDark;\n  }\n  const containerStyle = {\n    height,\n    width,\n    backgroundColor: dummyBackgroundColor,\n  };\n  return (\n    <>\n      <View style={containerStyle} />\n      <Modal presentationStyle=\"overFullScreen\" transparent {...modalProps}>\n        <View style={GlobalStyle.flex1}>\n          <SDKEntry {...sdkProps} />\n        </View>\n      </Modal>\n    </>\n  );\n}\n\n/** @type {React.Context<(param: OpenSurveyProps=) => void>} */\nexport const SurveyModalOpenSurveyContext = React.createContext(\n  () => undefined\n);\n\nexport const useOpenSurvey = () => {\n  const context = React.useContext(SurveyModalOpenSurveyContext);\n  if (context === undefined) {\n    throw new Error('useOpenSurvey must be used within a SurveyModalContainer');\n  }\n\n  return context;\n};\n\n/**\n * @param {SurveyModalProps & SDKEntryProps & ModalProps } param0\n */\nexport const SurveyModalContainer = ({ children, onClose, ...props }) => {\n  const [visible, setVisible] = React.useState(false);\n\n  const [openSurveyProps, setOpenSurveyProps] = React.useState();\n\n  const openSurvey = React.useCallback(\n    (/** @type {SDKEntryProps} */ inputProps) => {\n      setOpenSurveyProps(inputProps);\n      setVisible(true);\n    },\n    []\n  );\n\n  const onCloseSurveyHandler = React.useCallback(() => {\n    onClose && onClose();\n    setVisible(false);\n  }, [onClose]);\n\n  return (\n    <SurveyModalOpenSurveyContext.Provider value={openSurvey}>\n      {children}\n      {visible ? (\n        <SurveyModal\n          {...props}\n          {...openSurveyProps}\n          visible={visible}\n          onClose={onCloseSurveyHandler}\n        />\n      ) : null}\n    </SurveyModalOpenSurveyContext.Provider>\n  );\n};\n\n/**\n * @typedef {import('./SDKEntry').SDKEntryProps} SDKEntryProps\n * @typedef {import('react-native').ModalProps} ModalProps\n */\n/**\n * @typedef {object} SurveyModalProps\n * @property {boolean} visible\n */\n/**\n * @typedef {SDKEntryProps & ModalProps} OpenSurveyProps\n */\n"],"mappings":"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"}