{"version":3,"names":["_react","_interopRequireDefault","require","_hooks","_src","_survey","_customProps","obj","__esModule","default","useBackForDismiss","onClose","useSurveyContext","backHandler","React","useCallback","useBackHandler","EndScreen","error","surveyFeedback","survey","useSurvey","onSubmitSuccessCallback","useOnSubmitSuccessCallback","onSubmitCallback","useOnSubmitCallback","useEffect","createElement","EndScreenLayout","_default","exports"],"sources":["EndScreen.js"],"sourcesContent":["import React from 'react';\nimport { useBackHandler } from '@react-native-community/hooks';\nimport { EndScreenLayout } from '@dropthought/react-native-ui/src';\nimport { useSurvey, useSurveyContext } from '../contexts/survey';\nimport {\n  useOnSubmitSuccessCallback,\n  useOnSubmitCallback,\n} from '../contexts/custom-props';\n\nconst useBackForDismiss = () => {\n  const { onClose } = useSurveyContext();\n  const backHandler = React.useCallback(() => {\n    onClose();\n    return true;\n  }, [onClose]);\n\n  useBackHandler(backHandler);\n};\n\n/**\n * @type {React.FunctionComponent<ScreenProps>}\n * @param {ScreenProps} props\n */\nconst EndScreen = ({ error, surveyFeedback, onClose }) => {\n  const survey = useSurvey();\n  const onSubmitSuccessCallback = useOnSubmitSuccessCallback();\n  const onSubmitCallback = useOnSubmitCallback();\n\n  React.useEffect(() => {\n    // passing data to native, if error is undefined, null, 0, it means success\n    if (onSubmitCallback) {\n      onSubmitCallback(surveyFeedback, error);\n      // deprecate later\n      if (!error && onSubmitSuccessCallback) {\n        onSubmitSuccessCallback(surveyFeedback);\n      }\n    }\n    // if (surveyFeedback)\n    //     SurveyNativeBridge.onFeedbackResult(surveyFeedback, error || 0)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useBackForDismiss();\n  return <EndScreenLayout survey={survey} onClose={onClose} />;\n};\n\nexport default EndScreen;\n\n/**\n * @typedef {import('../../data').SurveyFeedback} SurveyFeedback\n */\n\n/**\n * @typedef {Object} ScreenProps\n * @property {Error=} error\n * @property {SurveyFeedback=} surveyFeedback\n * @property {() => void} onClose\n */\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,MAAA,GAAAD,OAAA;AACA,IAAAE,IAAA,GAAAF,OAAA;AACA,IAAAG,OAAA,GAAAH,OAAA;AACA,IAAAI,YAAA,GAAAJ,OAAA;AAGkC,SAAAD,uBAAAM,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAElC,MAAMG,iBAAiB,GAAGA,CAAA,KAAM;EAC9B,MAAM;IAAEC;EAAQ,CAAC,GAAG,IAAAC,wBAAgB,EAAC,CAAC;EACtC,MAAMC,WAAW,GAAGC,cAAK,CAACC,WAAW,CAAC,MAAM;IAC1CJ,OAAO,CAAC,CAAC;IACT,OAAO,IAAI;EACb,CAAC,EAAE,CAACA,OAAO,CAAC,CAAC;EAEb,IAAAK,qBAAc,EAACH,WAAW,CAAC;AAC7B,CAAC;;AAED;AACA;AACA;AACA;AACA,MAAMI,SAAS,GAAGA,CAAC;EAAEC,KAAK;EAAEC,cAAc;EAAER;AAAQ,CAAC,KAAK;EACxD,MAAMS,MAAM,GAAG,IAAAC,iBAAS,EAAC,CAAC;EAC1B,MAAMC,uBAAuB,GAAG,IAAAC,uCAA0B,EAAC,CAAC;EAC5D,MAAMC,gBAAgB,GAAG,IAAAC,gCAAmB,EAAC,CAAC;EAE9CX,cAAK,CAACY,SAAS,CAAC,MAAM;IACpB;IACA,IAAIF,gBAAgB,EAAE;MACpBA,gBAAgB,CAACL,cAAc,EAAED,KAAK,CAAC;MACvC;MACA,IAAI,CAACA,KAAK,IAAII,uBAAuB,EAAE;QACrCA,uBAAuB,CAACH,cAAc,CAAC;MACzC;IACF;IACA;IACA;IACA;EACF,CAAC,EAAE,EAAE,CAAC;EAENT,iBAAiB,CAAC,CAAC;EACnB,oBAAOV,MAAA,CAAAS,OAAA,CAAAkB,aAAA,CAACvB,IAAA,CAAAwB,eAAe;IAACR,MAAM,EAAEA,MAAO;IAACT,OAAO,EAAEA;EAAQ,CAAE,CAAC;AAC9D,CAAC;AAAC,IAAAkB,QAAA,GAAAC,OAAA,CAAArB,OAAA,GAEaQ,SAAS;AAExB;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA"}