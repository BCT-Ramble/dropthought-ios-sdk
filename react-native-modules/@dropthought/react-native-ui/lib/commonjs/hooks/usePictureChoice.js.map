{"version":3,"sources":["usePictureChoice.ts"],"names":["DefaultPictureAnswer","image","value","multiplePictureChoiceValidator","question","feedback","answers","lastItem","length","undefined","mandatory","usePictureChoice","onFeedback","questionId","subType","questionBrand","optionImages","options","images","map","uri","index","option","otherPictureEnable","QuestionBrandType","Other","otherPictureAnswer","setOtherPictureAnswer","otherPictureSelected","setOtherPictureSelected","selectIndex","setSelectIndex","splice","filter","answer","isMultipleChoice","hasEdit","setHasEdit","result","type","otherFlag","resetOtherPicture","invalidMessage","setInvalidMessage","onSelectIndex","selected","prev","includes","item","replaceSelectIndex","selectedList","setOtherPictureAnswerText","text","setOtherPictureAnswerUrl","url"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\nimport { QuestionBrandType } from '../utils/data';\nimport type { Question, Feedback } from '../data';\n\nconst DefaultPictureAnswer = { image: '', value: '' };\n\nexport const multiplePictureChoiceValidator = (\n  question: Question,\n  feedback: Feedback\n) => {\n  const { answers } = feedback ?? {};\n  const lastItem =\n    answers && answers.length > 0 ? answers[answers.length - 1] : undefined;\n  if (answers && answers.length > 0) {\n    if (\n      lastItem &&\n      typeof lastItem !== 'number' &&\n      typeof lastItem !== 'string'\n    ) {\n      return lastItem.image.length > 0 && lastItem.value.length > 0;\n    } else {\n      return true;\n    }\n  } else {\n    // if mandatory return false\n    return !question.mandatory;\n  }\n};\n\nexport const usePictureChoice = (\n  question: Question,\n  onFeedback: (feedback: Feedback) => void,\n  feedback?: Feedback\n) => {\n  const { questionId, subType, questionBrand, optionImages, options } =\n    question;\n\n  const images = optionImages.map((uri, index) => {\n    return { uri, option: options?.[index] ?? '' };\n  });\n\n  const otherPictureEnable = questionBrand === QuestionBrandType.Other;\n\n  const [otherPictureAnswer, setOtherPictureAnswer] = useState(() => {\n    const { answers } = feedback ?? {};\n    const lastItem =\n      answers && answers.length > 0 ? answers[answers.length - 1] : undefined;\n    if (\n      lastItem &&\n      typeof lastItem !== 'number' &&\n      typeof lastItem !== 'string'\n    ) {\n      return { image: lastItem.image, value: lastItem.value };\n    } else {\n      return { image: '', value: '' };\n    }\n  });\n\n  const [otherPictureSelected, setOtherPictureSelected] = useState(\n    () =>\n      otherPictureAnswer.image.length > 0 || otherPictureAnswer.value.length > 0\n  );\n\n  const [selectIndex, setSelectIndex] = useState(() => {\n    const { answers } = feedback ?? {};\n    if (answers && answers.length > 0) {\n      if (otherPictureSelected) {\n        answers.splice(-1);\n        return answers.filter((answer) => typeof answer === 'number');\n      } else {\n        return answers.filter((answer) => typeof answer === 'number');\n      }\n    } else {\n      return [];\n    }\n  });\n\n  const isMultipleChoice = subType === 'multiChoice';\n\n  const [hasEdit, setHasEdit] = useState(() => {\n    return feedback !== undefined;\n  });\n\n  useEffect(() => {\n    if (hasEdit) {\n      const result = {\n        questionId,\n        answers: otherPictureSelected\n          ? [...selectIndex, otherPictureAnswer]\n          : selectIndex,\n        type: 'pictureChoice',\n        subType,\n        otherFlag: otherPictureSelected,\n      };\n      // @ts-ignore\n      onFeedback(result);\n    }\n  }, [\n    selectIndex,\n    otherPictureSelected,\n    otherPictureAnswer,\n    questionId,\n    onFeedback,\n    subType,\n    hasEdit,\n  ]);\n\n  const resetOtherPicture = () => {\n    setOtherPictureSelected(false);\n    setOtherPictureAnswer(DefaultPictureAnswer);\n  };\n\n  const [invalidMessage, setInvalidMessage] = useState<string | undefined>(\n    undefined\n  );\n\n  const onSelectIndex = (selected: number) => {\n    setHasEdit(true);\n    setSelectIndex((prev) => {\n      if (prev.includes(selected)) {\n        return prev?.filter((item) => item !== selected);\n      } else {\n        return [...prev, selected];\n      }\n    });\n  };\n\n  const replaceSelectIndex = (selectedList: number[] | []) => {\n    setHasEdit(true);\n    setSelectIndex(selectedList);\n  };\n\n  const setOtherPictureAnswerText = (text: string) => {\n    setHasEdit(true);\n    setOtherPictureAnswer((prev) => ({\n      ...prev,\n      value: text,\n    }));\n  };\n\n  const setOtherPictureAnswerUrl = (url: string) => {\n    setHasEdit(true);\n    setOtherPictureAnswer((prev) => ({\n      ...prev,\n      image: url,\n    }));\n  };\n\n  return {\n    images,\n    otherPictureEnable,\n\n    otherPictureAnswer,\n    setOtherPictureAnswerText,\n    setOtherPictureAnswerUrl,\n    otherPictureSelected,\n    setOtherPictureSelected,\n    selectIndex,\n    onSelectIndex,\n    replaceSelectIndex,\n\n    isMultipleChoice,\n\n    resetOtherPicture,\n    invalidMessage,\n    setInvalidMessage,\n  };\n};\n"]}