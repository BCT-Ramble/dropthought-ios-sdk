{"version":3,"sources":["ClassicDropdownQuestion.tsx"],"names":["windowHeight","Dimensions","get","height","radioIconSource","ic_radio_selected","require","ic_radio_unselected","ClassicDropdownQuestion","mandatoryErrorMessage","question","onFeedback","feedback","forgot","themeColor","rtl","i18n","dir","questionTitle","fontColor","backgroundColor","colorScheme","selectedOptionIndexCache","setSelectedOptionIndexCache","currentSelectedOption","invalidMessage","bottomSheetVisible","optionLabel","renderList","otherText","onChangeOtherText","onChangeSearchText","onCloseBottomSheet","onOpenBottomSheet","onConfirm","onCancel","renderItem","item","title","index","isSelected","icon","iconStyle","bottomSheetStyles","radioButton","tintColor","containerStyle","optionContainer","borderColor","undefined","color","labelStyle","styles","subTitleContainerStyle","subTitleContainer","COLOR_SCHEMES","light","Colors","contentBackground","rankingContainerBgDark","subTitleTextStyle","subTitleText","flatListContainerStyle","paddingBottom","searchInputStyle","textInput","GlobalStyle","textAlignRight","questionContainer","buttonContainer","buttonContent","isOther","placeholder","rankingBGDark","content","searchContainer","flexRowReverse","t","inputPlaceholder","_","toString","React","memo","StyleSheet","create","marginBottom","width","borderWidth","borderRadius","rankingContainerBorder","flexDirection","justifyContent","alignItems","paddingHorizontal","paddingVertical","marginRight","flex","fontSize","fontWeight","padding","marginLeft"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  View,\n  StyleSheet,\n  Text,\n  TextInput,\n  Image,\n  TouchableOpacity,\n  Dimensions,\n  FlatList,\n  ListRenderItem,\n} from 'react-native';\nimport type { TransformOptionType } from '../utils/data';\nimport GlobalStyle, { Colors, addOpacityToColor } from '../styles';\nimport ClassicMandatoryTitle from './ClassicMandatoryTitle';\nimport i18n from '../translation';\nimport type { Question, Feedback } from '../data';\nimport BottomSheet, { NavigationComponent } from './BottomSheet';\nimport ClassicDropdownOtherOptionInput from './ClassicDropdownOtherOptionInput';\nimport { useTheme, COLOR_SCHEMES } from '../contexts/theme';\nimport useDropdown from '../hooks/useDropdown';\n\nconst windowHeight = Dimensions.get('window').height * 0.8;\n\nconst radioIconSource = {\n  ic_radio_selected: require('../assets/radio-on.png'),\n  ic_radio_unselected: require('../assets/radio-off.png'),\n};\n\ntype Props = {\n  mandatoryErrorMessage: string;\n  anonymous: boolean;\n  question: Question;\n  onFeedback: (feedback: Feedback) => void;\n  feedback: Feedback;\n  forgot: boolean;\n  themeColor: string;\n};\n\nconst ClassicDropdownQuestion = ({\n  mandatoryErrorMessage,\n  question,\n  onFeedback,\n  feedback,\n  forgot,\n  themeColor,\n}: Props) => {\n  const rtl = i18n.dir() === 'rtl';\n  const { questionTitle } = question;\n  const { fontColor, backgroundColor, colorScheme } = useTheme();\n  const {\n    selectedOptionIndexCache,\n    setSelectedOptionIndexCache,\n\n    currentSelectedOption,\n    invalidMessage,\n    bottomSheetVisible,\n    optionLabel,\n    renderList,\n    otherText,\n\n    onChangeOtherText,\n    onChangeSearchText,\n\n    onCloseBottomSheet,\n    onOpenBottomSheet,\n    onConfirm,\n    onCancel,\n  } = useDropdown(question, feedback, onFeedback);\n\n  const renderItem: ListRenderItem<TransformOptionType> = ({ item }) => {\n    const { title, index } = item;\n\n    const isSelected = selectedOptionIndexCache === index;\n    const icon = isSelected ? 'ic_radio_selected' : 'ic_radio_unselected';\n    const iconStyle = [\n      bottomSheetStyles.radioButton,\n      {\n        tintColor: isSelected ? themeColor : fontColor,\n      },\n    ];\n    const containerStyle = [\n      bottomSheetStyles.optionContainer,\n      {\n        borderColor: isSelected ? themeColor : backgroundColor,\n        backgroundColor: isSelected\n          ? addOpacityToColor(themeColor, 0.1)\n          : undefined,\n      },\n    ];\n    return (\n      <TouchableOpacity onPress={() => setSelectedOptionIndexCache(index)}>\n        <View style={containerStyle}>\n          <Image style={iconStyle} source={radioIconSource[icon]} />\n          <View style={bottomSheetStyles.optionLabel}>\n            <Text style={{ color: fontColor }}>{title}</Text>\n          </View>\n        </View>\n      </TouchableOpacity>\n    );\n  };\n\n  const labelStyle = [styles.optionLabel, { color: fontColor }];\n  const subTitleContainerStyle = [\n    bottomSheetStyles.subTitleContainer,\n    {\n      backgroundColor:\n        colorScheme === COLOR_SCHEMES.light\n          ? Colors.contentBackground\n          : Colors.rankingContainerBgDark,\n    },\n  ];\n  const subTitleTextStyle = [\n    bottomSheetStyles.subTitleText,\n    {\n      color: fontColor,\n    },\n  ];\n  const flatListContainerStyle = { paddingBottom: 200 };\n  const searchInputStyle = [\n    bottomSheetStyles.textInput,\n    { color: fontColor },\n    rtl && GlobalStyle.textAlignRight,\n  ];\n\n  return (\n    <View style={GlobalStyle.questionContainer}>\n      <ClassicMandatoryTitle\n        forgot={forgot}\n        invalidMessage={invalidMessage}\n        mandatoryErrorMessage={mandatoryErrorMessage}\n        question={question}\n        style={styles.title}\n      />\n      <TouchableOpacity\n        style={styles.buttonContainer}\n        onPress={onOpenBottomSheet}\n      >\n        <View style={styles.buttonContent}>\n          <Text style={labelStyle}>{optionLabel}</Text>\n          <Image source={require('../assets/ic-expand-more-24-px.png')} />\n        </View>\n      </TouchableOpacity>\n      {currentSelectedOption ? (\n        <ClassicDropdownOtherOptionInput\n          visible={currentSelectedOption.isOther}\n          question={question}\n          placeholder={currentSelectedOption.placeholder}\n          value={otherText}\n          onChangeText={onChangeOtherText}\n          themeColor={themeColor}\n        />\n      ) : null}\n      <BottomSheet\n        coverScreen\n        navigationComponent={\n          <NavigationComponent\n            backgroundColor={\n              colorScheme === COLOR_SCHEMES.light\n                ? themeColor\n                : Colors.rankingBGDark\n            }\n            disableOnConfirm={selectedOptionIndexCache === undefined}\n            onCancel={onCancel}\n            onConfirm={onConfirm}\n          />\n        }\n        componentInside={\n          <>\n            <View style={subTitleContainerStyle}>\n              <Text style={subTitleTextStyle}>{questionTitle}</Text>\n            </View>\n            <View style={bottomSheetStyles.content}>\n              <View\n                style={[\n                  bottomSheetStyles.searchContainer,\n                  rtl && GlobalStyle.flexRowReverse,\n                ]}\n              >\n                <Image source={require('../assets/ic_search.png')} />\n                <TextInput\n                  onChangeText={onChangeSearchText}\n                  placeholder={i18n.t('survey:find-Option')}\n                  placeholderTextColor={Colors.inputPlaceholder}\n                  style={searchInputStyle}\n                />\n              </View>\n              <FlatList\n                contentContainerStyle={flatListContainerStyle}\n                data={renderList}\n                showsVerticalScrollIndicator={false}\n                renderItem={renderItem}\n                keyExtractor={(_, index) => index.toString()}\n              />\n            </View>\n          </>\n        }\n        componentHeight={windowHeight}\n        onBackdropPress={onCloseBottomSheet}\n        visible={bottomSheetVisible}\n      />\n    </View>\n  );\n};\n\nexport default React.memo(ClassicDropdownQuestion);\n\nconst styles = StyleSheet.create({\n  title: {\n    marginBottom: 16,\n  },\n  buttonContainer: {\n    width: '100%',\n    borderWidth: 1,\n    borderRadius: 4,\n    borderColor: Colors.rankingContainerBorder,\n    marginBottom: 16,\n  },\n  buttonContent: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingHorizontal: 12,\n    paddingVertical: 16,\n  },\n  optionLabel: {\n    marginRight: 10,\n    flex: 1,\n  },\n});\n\nconst bottomSheetStyles = StyleSheet.create({\n  content: {\n    paddingHorizontal: 24,\n    paddingVertical: 16,\n  },\n  subTitleContainer: {\n    paddingVertical: 10,\n    paddingHorizontal: 24,\n  },\n  subTitleText: {\n    fontSize: 16,\n    fontWeight: '500',\n  },\n  optionContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 10,\n    marginBottom: 10,\n    borderWidth: 1,\n    borderRadius: 4,\n  },\n  radioButton: {\n    tintColor: 'blue',\n  },\n  optionLabel: {\n    marginLeft: 10,\n  },\n  searchContainer: {\n    width: '100%',\n    paddingHorizontal: 12,\n    borderRadius: 6,\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 12,\n    borderColor: Colors.borderColor,\n    borderWidth: 1,\n  },\n  textInput: {\n    flex: 1,\n    paddingVertical: 10,\n    fontSize: 14,\n    fontWeight: '400',\n    marginLeft: 10,\n  },\n});\n"]}