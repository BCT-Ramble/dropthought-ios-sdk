{"version":3,"sources":["index.tsx"],"names":["Rect","height","width","x","y","containsPoint","nativeX","nativeY","trackDistanceToPoint","DEFAULT_ANIMATION_CONFIGS","spring","friction","tension","timing","duration","easing","Easing","inOut","ease","delay","normalizeValue","props","value","Array","isArray","length","maximumValue","minimumValue","getBetweenValue","inputValue","Math","max","min","map","sort","a","b","updateValues","values","newValues","index","valueToSet","Animated","Value","__getValue","setValue","indexOfLowest","lowestIndex","forEach","array","Slider","PureComponent","constructor","e","_thumbHitTest","thumbSize","state","nativeEvent","_previousLeft","trackClickable","locationX","_getThumbLeft","_getCurrentValue","_activeThumbIndex","onSlidingStart","_getRawValues","_e","gestureState","disabled","_setCurrentValue","_getValue","onValueChange","onSlidingComplete","_handleMeasure","name","layout","size","currentSize","_containerSize","_thumbSize","setState","containerSize","allMeasured","vertical","standardRatio","_getRatio","ratio","I18nManager","isRTL","step","thumbLeft","dy","dx","nonRtlRatio","minValue","maxValue","rawValues","buffer","round","thumbIndex","callback","safeIndex","animatedValue","prevState","animationType","animationConfig","toValue","useNativeDriver","start","thumbTouchSize","_getTouchOverflowSize","touchOverflowStyle","undefined","verticalMargin","marginTop","marginBottom","horizontalMargin","marginLeft","marginRight","debugTouchArea","backgroundColor","opacity","hitThumb","find","_","i","thumbTouchRect","_getThumbTouchRect","locationY","thumbDistances","_value","touchOverflowSize","positionStyle","left","top","styles","debugThumbTouchArea","thumbImage","_panResponder","PanResponder","create","onStartShouldSetPanResponder","_handleStartShouldSetPanResponder","onMoveShouldSetPanResponder","_handleMoveShouldSetPanResponder","onPanResponderGrant","_handlePanResponderGrant","onPanResponderMove","_handlePanResponderMove","onPanResponderRelease","_handlePanResponderEnd","onPanResponderTerminationRequest","_handlePanResponderRequestEnd","onPanResponderTerminate","trackMarksValues","trackMarks","getDerivedStateFromProps","newTrackMarkValues","statePatch","componentDidUpdate","animateTransitions","_setCurrentValueAnimated","render","containerStyle","maximumTrackTintColor","minimumTrackTintColor","renderAboveThumbComponent","renderBelowThumbComponent","renderTrackMarkComponent","renderThumbComponent","thumbStyle","thumbTintColor","trackStyle","minimumTrackStyle","propMinimumTrackStyle","maximumTrackStyle","propMaximumTrackStyle","startFromZero","other","_startFromZero","interpolatedThumbValues","interpolate","inputRange","outputRange","interpolatedTrackValues","interpolatedTrackMarksValues","v","valueVisibleStyle","interpolatedRawValues","minRawValue","minThumbValue","maxRawValue","maxThumbValue","sliderWidthCoefficient","abs","startPositionOnTrack","minTrackWidth","clearBorderRadius","borderBottomRightRadius","borderTopRightRadius","borderTopLeftRadius","borderBottomLeftRadius","position","add","multiply","_getTouchOverflowStyle","aboveThumbComponentsContainer","interpolationValue","addListener","bottom","transform","translateX","translateY","container","rotate","_measureContainer","track","_measureTrack","thumb","_measureThumb","_renderThumbImage","touchArea","panHandlers","_renderDebugThumbTouchRect","belowThumbComponentsContainer","SliderContainer","trackMarkStyles","onCustomValueChange","currentMarkValue","style","activeMark","inactiveMark","renderChildren","React","Children","children","child","type","cloneElement","input","customStyles","sliderContainer","sliderContent","CustomSlider","StyleSheet","flexDirection","alignItems","flex"],"mappings":";;;;;;;AAAA;;AACA;;AAcA;;;;;;;;;;AAsBA,MAAMA,IAAI,GAAG,CAAC;AACZC,EAAAA,MADY;AAEZC,EAAAA,KAFY;AAGZC,EAAAA,CAHY;AAIZC,EAAAA;AAJY,CAAD,MAUN;AACLC,EAAAA,aAAa,EAAE,CAACC,OAAD,EAAkBC,OAAlB,KACbD,OAAO,IAAIH,CAAX,IACAI,OAAO,IAAIH,CADX,IAEAE,OAAO,IAAIH,CAAC,GAAGD,KAFf,IAGAK,OAAO,IAAIH,CAAC,GAAGH,MALZ;AAMLA,EAAAA,MANK;AAOLO,EAAAA,oBAAoB,EAAGF,OAAD,IAAqB;AACzC,QAAIA,OAAO,GAAGH,CAAd,EAAiB;AACf,aAAOA,CAAC,GAAGG,OAAX;AACD;;AAED,QAAIA,OAAO,GAAGH,CAAC,GAAGD,KAAlB,EAAyB;AACvB,aAAOI,OAAO,IAAIH,CAAC,GAAGD,KAAR,CAAd;AACD;;AAED,WAAO,CAAP;AACD,GAjBI;AAkBLA,EAAAA,KAlBK;AAmBLC,EAAAA,CAnBK;AAoBLC,EAAAA;AApBK,CAVM,CAAb;;AAiCA,MAAMK,yBAAyB,GAAG;AAChCC,EAAAA,MAAM,EAAE;AACNC,IAAAA,QAAQ,EAAE,CADJ;AAENC,IAAAA,OAAO,EAAE;AAFH,GADwB;AAKhCC,EAAAA,MAAM,EAAE;AACNC,IAAAA,QAAQ,EAAE,GADJ;AAENC,IAAAA,MAAM,EAAEC,oBAAOC,KAAP,CAAaD,oBAAOE,IAApB,CAFF;AAGNC,IAAAA,KAAK,EAAE;AAHD;AALwB,CAAlC;;AAYA,MAAMC,cAAc,GAAG,CACrBC,KADqB,EAErBC,KAFqB,KAGH;AAClB,MAAI,CAACA,KAAD,IAAWC,KAAK,CAACC,OAAN,CAAcF,KAAd,KAAwBA,KAAK,CAACG,MAAN,KAAiB,CAAxD,EAA4D;AAC1D,WAAO,CAAC,CAAD,CAAP;AACD;;AAED,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAAiCN,KAAvC;;AAEA,QAAMO,eAAe,GAAIC,UAAD,IACtBC,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,GAAL,CAASH,UAAT,EAAqBH,YAArB,CAAT,EAA6CC,YAA7C,CADF;;AAGA,MAAI,CAACJ,KAAK,CAACC,OAAN,CAAcF,KAAd,CAAL,EAA2B;AACzB,WAAO,CAACM,eAAe,CAACN,KAAD,CAAhB,CAAP;AACD;;AAED,SAAOA,KAAK,CAACW,GAAN,CAAUL,eAAV,EAA2BM,IAA3B,CAAgC,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGC,CAA9C,CAAP;AACD,CAlBD;;AAoBA,MAAMC,YAAY,GAAG,CAAC;AACpBC,EAAAA,MADoB;AAEpBC,EAAAA,SAAS,GAAGD;AAFQ,CAAD,KAMG;AACtB,MACEf,KAAK,CAACC,OAAN,CAAce,SAAd,KACAhB,KAAK,CAACC,OAAN,CAAcc,MAAd,CADA,IAEAC,SAAS,CAACd,MAAV,KAAqBa,MAAM,CAACb,MAH9B,EAIE;AACA,WAAOY,YAAY,CAAC;AAAEC,MAAAA,MAAM,EAAEC;AAAV,KAAD,CAAnB;AACD;;AAED,MAAIhB,KAAK,CAACC,OAAN,CAAcc,MAAd,KAAyBf,KAAK,CAACC,OAAN,CAAce,SAAd,CAA7B,EAAuD;AACrD,WAAOD,MAAP,aAAOA,MAAP,uBAAOA,MAAM,CAAEL,GAAR,CAAY,CAACX,KAAD,EAAiCkB,KAAjC,KAAmD;AACpE,UAAIC,UAAU,GAAGF,SAAS,CAACC,KAAD,CAA1B;;AACA,UAAIlB,KAAK,YAAYoB,sBAASC,KAA9B,EAAqC;AACnC,YAAIF,UAAU,YAAYC,sBAASC,KAAnC,EAA0C;AACxC;AACAF,UAAAA,UAAU,GAAGA,UAAU,CAACG,UAAX,EAAb;AACD,SAJkC,CAKnC;;;AACAtB,QAAAA,KAAK,CAACuB,QAAN,CAAeJ,UAAf;AACA,eAAOnB,KAAP;AACD;;AAED,UAAImB,UAAU,YAAYC,sBAASC,KAAnC,EAA0C;AACxC,eAAOF,UAAP;AACD;;AAED,aAAO,IAAIC,sBAASC,KAAb,CAAmBF,UAAnB,CAAP;AACD,KAjBM,CAAP;AAkBD;;AAED,SAAO,CAAC,IAAIC,sBAASC,KAAb,CAAmB,CAAnB,CAAD,CAAP;AACD,CArCD;;AAuCA,MAAMG,aAAa,GAAIR,MAAD,IAAmC;AACvD,MAAIS,WAAW,GAAG,CAAlB;AACAT,EAAAA,MAAM,CAACU,OAAP,CAAe,CAAC1B,KAAD,EAAQkB,KAAR,EAAeS,KAAf,KAAyB;AACtC,QAAI3B,KAAK,GAAG2B,KAAK,CAACF,WAAD,CAAjB,EAAgC;AAC9BA,MAAAA,WAAW,GAAGP,KAAd;AACD;AACF,GAJD;AAKA,SAAOO,WAAP;AACD,CARD;;AAUO,MAAMG,MAAN,SAAqBC,oBAArB,CAA6D;AAClEC,EAAAA,WAAW,CAAC/B,KAAD,EAAqB;AAC9B,UAAMA,KAAN;;AAD8B,+DAuG9BgC,CADkC,IAGzB,KAAKC,aAAL,CAAmBD,CAAnB,CAzGqB;;AAAA,sDAiHJA,CAAD,IAA6B;AAAA;;AACtD,YAAM;AAAEE,QAAAA;AAAF,UAAgB,KAAKC,KAA3B;AACA,YAAM;AAAEC,QAAAA;AAAF,UAAkBJ,CAAxB;AACA,WAAKK,aAAL,GAAqB,KAAKrC,KAAL,CAAWsC,cAAX,GACjBF,WAAW,CAACG,SAAZ,GAAwBL,SAAS,CAACrD,KADjB,GAEjB,KAAK2D,aAAL,CAAmB,KAAKC,gBAAL,CAAsB,KAAKC,iBAA3B,CAAnB,CAFJ;AAIA,0BAAK1C,KAAL,qFAAY2C,cAAZ,kGAA6B,KAAKC,aAAL,CAAmB,KAAKT,KAAL,CAAWlB,MAA9B,CAA7B;AACD,KAzH+B;;AAAA,qDA2HN,CAAC4B,EAAD,EAAUC,YAAV,KAAgC;AACxD,UAAI,KAAK9C,KAAL,CAAW+C,QAAf,EAAyB;AACvB;AACD;;AAED,WAAKC,gBAAL,CACE,KAAKC,SAAL,CAAeH,YAAf,CADF,EAEE,KAAKJ,iBAFP,EAGE,MAAM;AAAA;;AACJ,6BAAK1C,KAAL,uFAAYkD,aAAZ,mGAA4B,KAAKN,aAAL,CAAmB,KAAKT,KAAL,CAAWlB,MAA9B,CAA5B;AACD,OALH;AAOD,KAvI+B;;AAAA,2DAyIA;AAC9B;AACA;AACE;AACA,aAAO,KAAP;AACD,KA9I6B;;AAAA,oDAgJP,CAAC4B,EAAD,EAAUC,YAAV,KAAgC;AACvD,UAAI,KAAK9C,KAAL,CAAW+C,QAAf,EAAyB;AACvB;AACD;;AAED,WAAKC,gBAAL,CACE,KAAKC,SAAL,CAAeH,YAAf,CADF,EAEE,KAAKJ,iBAFP,EAGE,MAAM;AAAA;;AACJ,YAAI,KAAK1C,KAAL,CAAWsC,cAAf,EAA+B;AAAA;;AAC7B,+BAAKtC,KAAL,uFAAYkD,aAAZ,mGAA4B,KAAKN,aAAL,CAAmB,KAAKT,KAAL,CAAWlB,MAA9B,CAA5B;AACD;;AAED,6BAAKjB,KAAL,uFAAYmD,iBAAZ,mGAAgC,KAAKP,aAAL,CAAmB,KAAKT,KAAL,CAAWlB,MAA9B,CAAhC;AACD,OATH;;AAYA,WAAKyB,iBAAL,GAAyB,CAAzB;AACD,KAlK+B;;AAAA,+CAoKXV,CAAD,IAA0B;AAC5C,WAAKoB,cAAL,CAAoB,gBAApB,EAAsCpB,CAAtC;AACD,KAtK+B;;AAAA,2CAwKfA,CAAD,IAA0B;AACxC,WAAKoB,cAAL,CAAoB,YAApB,EAAkCpB,CAAlC;AACD,KA1K+B;;AAAA,2CA4KfA,CAAD,IAA0B;AACxC,WAAKoB,cAAL,CAAoB,YAApB,EAAkCpB,CAAlC;AACD,KA9K+B;;AAAA,4CAgLf,CACfqB,IADe,EAEfrB,CAFe,KAGZ;AACH,YAAM;AAAEnD,QAAAA,KAAF;AAASD,QAAAA;AAAT,UAAoBoD,CAAC,CAACI,WAAF,CAAckB,MAAxC;AACA,YAAMC,IAAI,GAAG;AACX1E,QAAAA,KADW;AAEXD,QAAAA;AAFW,OAAb;AAKA,YAAM4E,WAAW,GAAG,KAAKH,IAAL,CAApB;;AAEA,UACEG,WAAW,IACX3E,KAAK,KAAK2E,WAAW,CAAC3E,KADtB,IAEAD,MAAM,KAAK4E,WAAW,CAAC5E,MAHzB,EAIE;AACA;AACD;;AAED,WAAKyE,IAAL,IAAaE,IAAb;;AAEA,UAAI,KAAKE,cAAL,IAAuB,KAAKC,UAAhC,EAA4C;AAC1C,aAAKC,QAAL,CAAc;AACZC,UAAAA,aAAa,EAAE,KAAKH,cADR;AAEZvB,UAAAA,SAAS,EAAE,KAAKwB,UAFJ;AAGZG,UAAAA,WAAW,EAAE;AAHD,SAAd;AAKD;AACF,KA7M+B;;AAAA,uCA8MnB5D,KAAD,IAAmB;AAC7B,YAAM;AAAEI,QAAAA,YAAF;AAAgBC,QAAAA;AAAhB,UAAiC,KAAKN,KAA5C;AACA,aAAO,CAACC,KAAK,GAAGK,YAAT,KAA0BD,YAAY,GAAGC,YAAzC,CAAP;AACD,KAjN+B;;AAAA,2CAkNfL,KAAD,IAAmB;AACjC,YAAM;AAAE2D,QAAAA,aAAF;AAAiB1B,QAAAA;AAAjB,UAA+B,KAAKC,KAA1C;AACA,YAAM;AAAE2B,QAAAA;AAAF,UAAe,KAAK9D,KAA1B;;AAEA,YAAM+D,aAAa,GAAG,KAAKC,SAAL,CAAe/D,KAAf,CAAtB;;AAEA,YAAMgE,KAAK,GAAGC,yBAAYC,KAAZ,GAAoB,IAAIJ,aAAxB,GAAwCA,aAAtD;AACA,aACEE,KAAK,IACJ,CAACH,QAAQ,GAAGF,aAAa,CAAChF,MAAjB,GAA0BgF,aAAa,CAAC/E,KAAjD,IACCqD,SAAS,CAACrD,KAFP,CADP;AAKD,KA9N+B;;AAAA,uCA+NnBiE,YAAD,IAA8C;AACxD,YAAM;AAAEc,QAAAA,aAAF;AAAiB1B,QAAAA,SAAjB;AAA4BjB,QAAAA;AAA5B,UAAuC,KAAKkB,KAAlD;AACA,YAAM;AAAE9B,QAAAA,YAAF;AAAgBC,QAAAA,YAAhB;AAA8B8D,QAAAA,IAA9B;AAAoCN,QAAAA;AAApC,UAAiD,KAAK9D,KAA5D;AACA,YAAMI,MAAM,GAAGwD,aAAa,CAAC/E,KAAd,GAAsBqD,SAAS,CAACrD,KAA/C;AACA,YAAMwF,SAAS,GAAGP,QAAQ,GACtB,KAAKzB,aAAL,GAAqBS,YAAY,CAACwB,EAAb,GAAkB,CAAC,CADlB,GAEtB,KAAKjC,aAAL,GAAqBS,YAAY,CAACyB,EAFtC;AAGA,YAAMC,WAAW,GAAGH,SAAS,GAAGjE,MAAhC;AACA,YAAM6D,KAAK,GAAGC,yBAAYC,KAAZ,GAAoB,IAAIK,WAAxB,GAAsCA,WAApD;AACA,UAAIC,QAAQ,GAAGnE,YAAf;AACA,UAAIoE,QAAQ,GAAGrE,YAAf;;AAEA,YAAMsE,SAAS,GAAG,KAAK/B,aAAL,CAAmB3B,MAAnB,CAAlB;;AAEA,YAAM2D,MAAM,GAAGR,IAAI,GAAGA,IAAH,GAAU,GAA7B;;AAEA,UAAInD,MAAM,CAACb,MAAP,KAAkB,CAAtB,EAAyB;AACvB,YAAI,KAAKsC,iBAAL,KAA2B,CAA/B,EAAkC;AAChC+B,UAAAA,QAAQ,GAAGE,SAAS,CAAC,CAAD,CAAT,GAAeC,MAA1B;AACD,SAFD,MAEO;AACLF,UAAAA,QAAQ,GAAGC,SAAS,CAAC,CAAD,CAAT,GAAeC,MAA1B;AACD;AACF;;AAED,UAAIR,IAAJ,EAAU;AACR,eAAO3D,IAAI,CAACC,GAAL,CACL+D,QADK,EAELhE,IAAI,CAACE,GAAL,CACE+D,QADF,EAEEpE,YAAY,GACVG,IAAI,CAACoE,KAAL,CAAYZ,KAAK,IAAI5D,YAAY,GAAGC,YAAnB,CAAN,GAA0C8D,IAArD,IAA6DA,IAHjE,CAFK,CAAP;AAQD;;AAED,aAAO3D,IAAI,CAACC,GAAL,CACL+D,QADK,EAELhE,IAAI,CAACE,GAAL,CAAS+D,QAAT,EAAmBT,KAAK,IAAI5D,YAAY,GAAGC,YAAnB,CAAL,GAAwCA,YAA3D,CAFK,CAAP;AAID,KAtQ+B;;AAAA,8CAuQb,CAACwE,UAAkB,GAAG,CAAtB,KACjB;AACA,SAAK3C,KAAL,CAAWlB,MAAX,CAAkB6D,UAAlB,EAA8BvD,UAA9B,EAzQ8B;;AAAA,8CA2Qb,CACjBtB,KADiB,EAEjB6E,UAFiB,EAGjBC,QAHiB,KAId;AACH,YAAMC,SAAS,GAAGF,UAAH,aAAGA,UAAH,cAAGA,UAAH,GAAiB,CAAhC;AACA,YAAMG,aAAa,GAAG,KAAK9C,KAAL,CAAWlB,MAAX,CAAkB+D,SAAlB,CAAtB;;AAEA,UAAIC,aAAJ,EAAmB;AACjBA,QAAAA,aAAa,CAACzD,QAAd,CAAuBvB,KAAvB;;AAEA,YAAI8E,QAAJ,EAAc;AACZA,UAAAA,QAAQ;AACT;AACF,OAND,MAMO;AACL,aAAKpB,QAAL,CAAeuB,SAAD,IAA4B;AACxC,gBAAMhE,SAAS,GAAG,CAAC,GAAGgE,SAAS,CAACjE,MAAd,CAAlB;AACAC,UAAAA,SAAS,CAAC8D,SAAD,CAAT,GAAuB,IAAI3D,sBAASC,KAAb,CAAmBrB,KAAnB,CAAvB;AACA,iBAAO;AACLgB,YAAAA,MAAM,EAAEC;AADH,WAAP;AAGD,SAND,EAMG6D,QANH;AAOD;AACF,KAlS+B;;AAAA,sDAoSL,CAAC9E,KAAD,EAAgB6E,UAAkB,GAAG,CAArC,KAA2C;AACpE,YAAM;AAAEK,QAAAA;AAAF,UAAoB,KAAKnF,KAA/B;AACA,YAAMoF,eAAe,GAAG,EACtB,GAAGhG,yBAAyB,CAAC+F,aAAD,CADN;AAEtB,WAAG,KAAKnF,KAAL,CAAWoF,eAFQ;AAGtBC,QAAAA,OAAO,EAAEpF,KAHa;AAItBqF,QAAAA,eAAe,EAAE;AAJK,OAAxB;;AAMAjE,4BAAS8D,aAAT,EACE,KAAKhD,KAAL,CAAWlB,MAAX,CAAkB6D,UAAlB,CADF,EAEEM,eAFF,EAGEG,KAHF;AAID,KAhT+B;;AAAA,mDAkTR,MAGnB;AACH,YAAM;AAAE1B,QAAAA,WAAF;AAAeD,QAAAA,aAAf;AAA8B1B,QAAAA;AAA9B,UAA4C,KAAKC,KAAvD;AACA,YAAM;AAAEqD,QAAAA;AAAF,UAAqB,KAAKxF,KAAhC;AACA,YAAMuD,IAAI,GAAG;AACX1E,QAAAA,KAAK,EAAE,EADI;AAEXD,QAAAA,MAAM,EAAE;AAFG,OAAb;;AAKA,UAAIiF,WAAJ,EAAiB;AACfN,QAAAA,IAAI,CAAC1E,KAAL,GAAa4B,IAAI,CAACC,GAAL,CAAS,CAAT,EAAY,CAAA8E,cAAc,SAAd,IAAAA,cAAc,WAAd,YAAAA,cAAc,CAAE3G,KAAhB,KAAyB,IAAIqD,SAAS,CAACrD,KAAnD,CAAb;AACA0E,QAAAA,IAAI,CAAC3E,MAAL,GAAc6B,IAAI,CAACC,GAAL,CACZ,CADY,EAEZ,CAAA8E,cAAc,SAAd,IAAAA,cAAc,WAAd,YAAAA,cAAc,CAAE5G,MAAhB,KAA0B,IAAIgF,aAAa,CAAChF,MAFhC,CAAd;AAID;;AAED,aAAO2E,IAAP;AACD,KAtU+B;;AAAA,oDAwUP,MAAM;AAC7B,YAAM;AAAE1E,QAAAA,KAAF;AAASD,QAAAA;AAAT,UAAoB,KAAK6G,qBAAL,EAA1B;;AAEA,YAAMC,kBAAkB,GAAG,EAA3B;;AAEA,UAAI7G,KAAK,KAAK8G,SAAV,IAAuB/G,MAAM,KAAK+G,SAAtC,EAAiD;AAC/C,cAAMC,cAAc,GAAG,CAAChH,MAAD,GAAU,CAAjC;AACA8G,QAAAA,kBAAkB,CAACG,SAAnB,GAA+BD,cAA/B;AACAF,QAAAA,kBAAkB,CAACI,YAAnB,GAAkCF,cAAlC;AACA,cAAMG,gBAAgB,GAAG,CAAClH,KAAD,GAAS,CAAlC;AACA6G,QAAAA,kBAAkB,CAACM,UAAnB,GAAgCD,gBAAhC;AACAL,QAAAA,kBAAkB,CAACO,WAAnB,GAAiCF,gBAAjC;AACD;;AAED,UAAI,KAAK/F,KAAL,CAAWkG,cAAX,KAA8B,IAAlC,EAAwC;AACtCR,QAAAA,kBAAkB,CAACS,eAAnB,GAAqC,QAArC;AACAT,QAAAA,kBAAkB,CAACU,OAAnB,GAA6B,GAA7B;AACD;;AAED,aAAOV,kBAAP;AACD,KA5V+B;;AAAA,2CA6Vf1D,CAAD,IAA6B;AAC3C,YAAM;AAAEI,QAAAA;AAAF,UAAkBJ,CAAxB;AACA,YAAM;AAAEM,QAAAA;AAAF,UAAqB,KAAKtC,KAAhC;AACA,YAAM;AAAEiB,QAAAA;AAAF,UAAa,KAAKkB,KAAxB;AACA,YAAMkE,QAAQ,GAAGpF,MAAM,CAACqF,IAAP,CAAY,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACrC,cAAMC,cAAc,GAAG,KAAKC,kBAAL,CAAwBF,CAAxB,CAAvB;;AAEA,cAAMxH,aAAa,GAAGyH,cAAc,CAACzH,aAAf,CACpBoD,WAAW,CAACG,SADQ,EAEpBH,WAAW,CAACuE,SAFQ,CAAtB;;AAKA,YAAI3H,aAAJ,EAAmB;AACjB,eAAK0D,iBAAL,GAAyB8D,CAAzB;AACD;;AAED,eAAOxH,aAAP;AACD,OAbgB,CAAjB;;AAeA,UAAIqH,QAAJ,EAAc;AACZ,eAAO,IAAP;AACD;;AAED,UAAI/D,cAAJ,EAAoB;AAClB;AACA,YAAIrB,MAAM,CAACb,MAAP,KAAkB,CAAtB,EAAyB;AACvB,eAAKsC,iBAAL,GAAyB,CAAzB;AACD,SAFD,MAEO;AACL;AACA,gBAAMkE,cAAc,GAAG3F,MAAM,CAACL,GAAP,CAAW,CAACiG,MAAD,EAAS1F,KAAT,KAAmB;AACnD,kBAAMsF,cAAc,GAAG,KAAKC,kBAAL,CAAwBvF,KAAxB,CAAvB;;AAEA,mBAAOsF,cAAc,CAACtH,oBAAf,CAAoCiD,WAAW,CAACG,SAAhD,CAAP;AACD,WAJsB,CAAvB;AAKA,eAAKG,iBAAL,GAAyBjB,aAAa,CAACmF,cAAD,CAAtC;AACD;;AAED,eAAO,IAAP;AACD;;AAED,aAAO,KAAP;AACD,KAtY+B;;AAAA,gDAwYX,CAAC9B,UAAkB,GAAG,CAAtB,KAAwC;AAC3D,YAAM;AAAElB,QAAAA,aAAF;AAAiB1B,QAAAA;AAAjB,UAA+B,KAAKC,KAA1C;AACA,YAAM;AAAEqD,QAAAA;AAAF,UAAqB,KAAKxF,KAAhC;AACA,YAAM;AAAEpB,QAAAA,MAAF;AAAUC,QAAAA;AAAV,UAAoB2G,cAAc,IAAI;AAAE5G,QAAAA,MAAM,EAAE,EAAV;AAAcC,QAAAA,KAAK,EAAE;AAArB,OAA5C;;AAEA,YAAMiI,iBAAiB,GAAG,KAAKrB,qBAAL,EAA1B;;AAEA,aAAO9G,IAAI,CAAC;AACVC,QAAAA,MADU;AAEVC,QAAAA,KAFU;AAGVC,QAAAA,CAAC,EACCgI,iBAAiB,CAACjI,KAAlB,GAA0B,CAA1B,GACA,KAAK2D,aAAL,CAAmB,KAAKC,gBAAL,CAAsBqC,UAAtB,CAAnB,CADA,GAEA,CAAC5C,SAAS,CAACrD,KAAV,GAAkBA,KAAnB,IAA4B,CANpB;AAOVE,QAAAA,CAAC,EAAE+H,iBAAiB,CAAClI,MAAlB,GAA2B,CAA3B,GAA+B,CAACgF,aAAa,CAAChF,MAAd,GAAuBA,MAAxB,IAAkC;AAP1D,OAAD,CAAX;AASD,KAxZ+B;;AAAA,+CA0ZJ,CA1ZI;;AAAA;;AAAA;;AAAA,2CA6ZR,CA7ZQ;;AAAA;;AAAA;;AAAA,wDAiaH,CAC3ByF,SAD2B,EAE3BlD,KAF2B,KAGxB;AACH,YAAM;AAAEvC,QAAAA,MAAF;AAAUG,QAAAA,CAAV;AAAaF,QAAAA;AAAb,UAAuB,KAAK6H,kBAAL,MAA6B,EAA1D;AACA,YAAMK,aAAa,GAAG;AACpBnI,QAAAA,MADoB;AAEpBoI,QAAAA,IAAI,EAAE3C,SAFc;AAGpB4C,QAAAA,GAAG,EAAElI,CAHe;AAIpBF,QAAAA;AAJoB,OAAtB;AAMA,0BACE,6BAAC,qBAAD,CAAU,IAAV;AACE,QAAA,GAAG,EAAG,eAAcsC,KAAM,EAD5B;AAEE,QAAA,aAAa,EAAC,MAFhB;AAGE,QAAA,KAAK,EAAE,CAAC+F,sBAAOC,mBAAR,EAA6BJ,aAA7B;AAHT,QADF;AAOD,KAnb+B;;AAAA,+CAqbZ,CAACjC,UAAkB,GAAG,CAAtB,KAA4B;AAC9C,YAAM;AAAEsC,QAAAA;AAAF,UAAiB,KAAKpH,KAA5B;;AAEA,UAAI,CAACoH,UAAL,EAAiB;AACf,eAAO,IAAP;AACD;;AAED,0BACE,6BAAC,kBAAD;AACE,QAAA,MAAM,EACHlH,KAAK,CAACC,OAAN,CAAciH,UAAd,IACGA,UAAU,CAACtC,UAAD,CADb,GAEGsC;AAJR,QADF;AASD,KArc+B;;AAE9B,SAAKC,aAAL,GAAqBC,0BAAaC,MAAb,CAAoB;AACvCC,MAAAA,4BAA4B,EAAE,KAAKC,iCADI;AAEvCC,MAAAA,2BAA2B,EAAE,KAAKC,gCAFK;AAGvCC,MAAAA,mBAAmB,EAAE,KAAKC,wBAHa;AAIvCC,MAAAA,kBAAkB,EAAE,KAAKC,uBAJc;AAKvCC,MAAAA,qBAAqB,EAAE,KAAKC,sBALW;AAMvCC,MAAAA,gCAAgC,EAAE,KAAKC,6BANA;AAOvCC,MAAAA,uBAAuB,EAAE,KAAKH;AAPS,KAApB,CAArB;AASA,SAAK9F,KAAL,GAAa;AACX0B,MAAAA,WAAW,EAAE,KADF;AAEXD,MAAAA,aAAa,EAAE;AACb/E,QAAAA,KAAK,EAAE,CADM;AAEbD,QAAAA,MAAM,EAAE;AAFK,OAFJ;AAMXsD,MAAAA,SAAS,EAAE;AACTrD,QAAAA,KAAK,EAAE,CADE;AAETD,QAAAA,MAAM,EAAE;AAFC,OANA;AAUXyJ,MAAAA,gBAAgB,EAAErH,YAAY,CAAC;AAC7BC,QAAAA,MAAM,EAAElB,cAAc,CAAC,KAAKC,KAAN,EAAa,KAAKA,KAAL,CAAWsI,UAAxB;AADO,OAAD,CAVnB;AAaXrH,MAAAA,MAAM,EAAED,YAAY,CAAC;AACnBC,QAAAA,MAAM,EAAElB,cAAc,CACpB,KAAKC,KADe,EAEpB,KAAKA,KAAL,CAAWC,KAAX,YAA4BoB,sBAASC,KAArC,GACI;AACA,aAAKtB,KAAL,CAAWC,KAAX,CAAiBsB,UAAjB,EAFJ,GAGI,KAAKvB,KAAL,CAAWC,KALK;AADH,OAAD;AAbT,KAAb;AAuBD;;AAkBD;AAC+B,SAAxBsI,wBAAwB,CAACvI,KAAD,EAAqBmC,KAArB,EAAyC;AACtE,QACEnC,KAAK,CAACsI,UAAN,IACA,CAAC,CAACnG,KAAK,CAACkG,gBADR,IAEAlG,KAAK,CAACkG,gBAAN,CAAuBjI,MAAvB,GAAgC,CAHlC,EAIE;AACA,YAAMoI,kBAAkB,GAAGzI,cAAc,CAACC,KAAD,EAAQA,KAAK,CAACsI,UAAd,CAAzC;AACA,YAAMG,UAAU,GAAG,EAAnB;;AAEA,UAAItG,KAAK,CAACkG,gBAAV,EAA4B;AAC1BI,QAAAA,UAAU,CAACJ,gBAAX,GAA8BrH,YAAY,CAAC;AACzCC,UAAAA,MAAM,EAAEkB,KAAK,CAACkG,gBAD2B;AAEzCnH,UAAAA,SAAS,EAAEsH;AAF8B,SAAD,CAA1C;AAID;;AAED,aAAOC,UAAP;AACD;AACF;;AAEDC,EAAAA,kBAAkB,GAAG;AACnB,UAAMxH,SAAS,GAAGnB,cAAc,CAC9B,KAAKC,KADyB,EAE9B,KAAKA,KAAL,CAAWC,KAAX,YAA4BoB,sBAASC,KAArC,GACI;AACA,SAAKtB,KAAL,CAAWC,KAAX,CAAiBsB,UAAjB,EAFJ,GAGI,KAAKvB,KAAL,CAAWC,KALe,CAAhC;AAOAiB,IAAAA,SAAS,CAACS,OAAV,CAAkB,CAAC1B,KAAD,EAAQuG,CAAR,KAAc;AAC9B,UAAI,CAAC,KAAKrE,KAAL,CAAWlB,MAAX,CAAkBuF,CAAlB,CAAL,EAA2B;AACzB,aAAKxD,gBAAL,CAAsB/C,KAAtB,EAA6BuG,CAA7B,EADyB,CAEzB;;AACD,OAHD,MAGO,IAAIvG,KAAK,KAAK,KAAKkC,KAAL,CAAWlB,MAAX,CAAkBuF,CAAlB,EAAqBjF,UAArB,EAAd,EAAiD;AACtD,YAAI,KAAKvB,KAAL,CAAW2I,kBAAf,EAAmC;AACjC,eAAKC,wBAAL,CAA8B3I,KAA9B,EAAqCuG,CAArC;AACD,SAFD,MAEO;AACL,eAAKxD,gBAAL,CAAsB/C,KAAtB,EAA6BuG,CAA7B;AACD;AACF;AACF,KAXD;AAYD;;AAED5D,EAAAA,aAAa,CACX3B,MADW,EAEX;AACA;AACA,WAAOA,MAAM,CAACL,GAAP,CAAYX,KAAD,IAAWA,KAAK,CAACsB,UAAN,EAAtB,CAAP;AACD;;AAKiC;AAElCoG,EAAAA,gCAAgC,GACxB;AACN;AACA,WAAO,KAAP;AACD;;AAwVDkB,EAAAA,MAAM,GAAG;AACP,UAAM;AACJC,MAAAA,cADI;AAEJ5C,MAAAA,cAFI;AAGJ6C,MAAAA,qBAHI;AAIJ1I,MAAAA,YAJI;AAKJ2I,MAAAA,qBALI;AAMJ1I,MAAAA,YANI;AAOJ2I,MAAAA,yBAPI;AAQJC,MAAAA,yBARI;AASJC,MAAAA,wBATI;AAUJC,MAAAA,oBAVI;AAWJC,MAAAA,UAXI;AAYJC,MAAAA,cAZI;AAaJC,MAAAA,UAbI;AAcJC,MAAAA,iBAAiB,EAAEC,qBAdf;AAeJC,MAAAA,iBAAiB,EAAEC,qBAff;AAgBJ7F,MAAAA,QAhBI;AAiBJ8F,MAAAA,aAjBI;AAkBJxF,MAAAA,IAAI,GAAG,CAlBH;AAmBJ,SAAGyF;AAnBC,QAoBF,KAAK7J,KApBT;AAqBA,UAAM;AAAE6D,MAAAA,WAAF;AAAeD,MAAAA,aAAf;AAA8B1B,MAAAA,SAA9B;AAAyCmG,MAAAA,gBAAzC;AAA2DpH,MAAAA;AAA3D,QACJ,KAAKkB,KADP;;AAEA,UAAM2H,cAAc,GAClB7I,MAAM,CAACb,MAAP,KAAkB,CAAlB,IAAuBE,YAAY,GAAG,CAAtC,IAA2CD,YAAY,GAAG,CAA1D,GACIuJ,aADJ,GAEI,KAHN;;AAIA,UAAMG,uBAAuB,GAAG9I,MAAM,CAACL,GAAP,CAAYX,KAAD,IACzCA,KAAK,CAAC+J,WAAN,CAAkB;AAChBC,MAAAA,UAAU,EAAE,CAAC3J,YAAD,EAAeD,YAAf,CADI;AAEhB6J,MAAAA,WAAW,EAAEhG,yBAAYC,KAAZ,GACT,CAAC,CAAD,EAAI,EAAEP,aAAa,CAAC/E,KAAd,GAAsBqD,SAAS,CAACrD,KAAlC,CAAJ,CADS,GAET,CAAC,CAAD,EAAI+E,aAAa,CAAC/E,KAAd,GAAsBqD,SAAS,CAACrD,KAApC;AAJY,KAAlB,CAD8B,CAAhC;AAQA,UAAMsL,uBAAuB,GAAGlJ,MAAM,CAACL,GAAP,CAAYX,KAAD,IACzCA,KAAK,CAAC+J,WAAN,CAAkB;AAChBC,MAAAA,UAAU,EAAE,CAAC3J,YAAD,EAAeD,YAAf,CADI;AAEhB6J,MAAAA,WAAW,EAAE,CAAC,CAAD,EAAItG,aAAa,CAAC/E,KAAd,GAAsBqD,SAAS,CAACrD,KAApC;AAFG,KAAlB,CAD8B,CAAhC;AAMA,UAAMuL,4BAA4B,GAChC/B,gBAAgB,IAChBA,gBAAgB,CAACzH,GAAjB,CAAsByJ,CAAD,IACnBA,CAAC,CAACL,WAAF,CAAc;AACZC,MAAAA,UAAU,EAAE,CAAC3J,YAAD,EAAeD,YAAf,CADA;AAEZ6J,MAAAA,WAAW,EAAEhG,yBAAYC,KAAZ,GACT,CAAC,CAAD,EAAI,EAAEP,aAAa,CAAC/E,KAAd,GAAsBqD,SAAS,CAACrD,KAAlC,CAAJ,CADS,GAET,CAAC,CAAD,EAAI+E,aAAa,CAAC/E,KAAd,GAAsBqD,SAAS,CAACrD,KAApC;AAJQ,KAAd,CADF,CAFF;AAUA,UAAMyL,iBAAiB,GAAG,EAA1B;;AAEA,QAAI,CAACzG,WAAL,EAAkB;AAChByG,MAAAA,iBAAiB,CAAClE,OAAlB,GAA4B,CAA5B;AACD;;AAED,UAAMmE,qBAAqB,GAAG,KAAK3H,aAAL,CAAmBuH,uBAAnB,CAA9B;;AACA,UAAMK,WAAW,GAAG/J,IAAI,CAACE,GAAL,CAAS,GAAG4J,qBAAZ,CAApB;AACA,UAAME,aAAa,GAAG,IAAIpJ,sBAASC,KAAb,CAAmBkJ,WAAnB,CAAtB;AACA,UAAME,WAAW,GAAGjK,IAAI,CAACC,GAAL,CAAS,GAAG6J,qBAAZ,CAApB;AACA,UAAMI,aAAa,GAAG,IAAItJ,sBAASC,KAAb,CAAmBoJ,WAAnB,CAAtB,CA9DO,CA+DP;;AACA,UAAM7D,MAAM,GAAG5F,MAAM,CAAC,CAAD,CAAN,CAAUM,UAAV,EAAf;;AACA,UAAMqJ,sBAAsB,GAC1BhH,aAAa,CAAC/E,KAAd,IAAuB4B,IAAI,CAACoK,GAAL,CAASvK,YAAT,IAAyBG,IAAI,CAACoK,GAAL,CAASxK,YAAT,CAAhD,CADF;AAEA,UAAMyK,oBAAoB,GAAGhB,cAAc,GACvCjD,MAAM,GAAG,IAAIzC,IAAb,GACE,CAACyC,MAAM,GAAGpG,IAAI,CAACoK,GAAL,CAASvK,YAAT,CAAV,IAAoCsK,sBADtC,GAEEnK,IAAI,CAACoK,GAAL,CAASvK,YAAT,IAAyBsK,sBAHY,GAIvC,CAJJ;AAMA,UAAMG,aAAa,GAAGjB,cAAc,GAChCrJ,IAAI,CAACoK,GAAL,CAAShE,MAAT,IAAmB+D,sBAAnB,GAA4C1I,SAAS,CAACrD,KAAV,GAAkB,CAD9B,GAEhCsL,uBAAuB,CAAC,CAAD,CAF3B;AAGA,UAAMa,iBAAiB,GAAG,EAA1B;;AACA,QAAIlB,cAAc,IAAIjD,MAAM,GAAG,IAAIzC,IAAnC,EAAyC;AACvC4G,MAAAA,iBAAiB,CAACC,uBAAlB,GAA4C,CAA5C;AACAD,MAAAA,iBAAiB,CAACE,oBAAlB,GAAyC,CAAzC;AACD;;AACD,QAAIpB,cAAc,IAAIjD,MAAM,GAAG,CAA/B,EAAkC;AAChCmE,MAAAA,iBAAiB,CAACG,mBAAlB,GAAwC,CAAxC;AACAH,MAAAA,iBAAiB,CAACI,sBAAlB,GAA2C,CAA3C;AACD;;AAED,UAAM5B,iBAAiB,GAAG;AACxB6B,MAAAA,QAAQ,EAAE,UADc;AAExBrE,MAAAA,IAAI,EACFmD,uBAAuB,CAAC/J,MAAxB,KAAmC,CAAnC,GACI,IAAIiB,sBAASC,KAAb,CAAmBwJ,oBAAnB,CADJ,GAEIzJ,sBAASiK,GAAT,CAAab,aAAb,EAA4BvI,SAAS,CAACrD,KAAV,GAAkB,CAA9C,CALkB;AAMxBA,MAAAA,KAAK,EACHsL,uBAAuB,CAAC/J,MAAxB,KAAmC,CAAnC,GACIiB,sBAASiK,GAAT,CAAaP,aAAb,EAA4B7I,SAAS,CAACrD,KAAV,GAAkB,CAA9C,CADJ,GAEIwC,sBAASiK,GAAT,CAAajK,sBAASkK,QAAT,CAAkBd,aAAlB,EAAiC,CAAC,CAAlC,CAAb,EAAmDE,aAAnD,CATkB;AAUxBxE,MAAAA,eAAe,EAAE6C,qBAVO;AAWxB,SAAGsB,iBAXqB;AAYxB,SAAGU;AAZqB,KAA1B;;AAeA,UAAMtF,kBAAkB,GAAG,KAAK8F,sBAAL,EAA3B;;AAEA,wBACE,4DACGvC,yBAAyB,iBACxB,6BAAC,iBAAD;AAAM,MAAA,KAAK,EAAE/B,sBAAOuE;AAApB,OACG1B,uBAAuB,CAACnJ,GAAxB,CAA4B,CAAC8K,kBAAD,EAAqBlF,CAArB,KAA2B;AACtD,YAAMvB,aAAa,GAAGhE,MAAM,CAACuF,CAAD,CAAN,IAAa,CAAnC;AACA,UAAI6D,CAAC,GAAG,CAAR;AACApF,MAAAA,aAAa,CAAC0G,WAAd,CAA0B,CAAC;AAAE1L,QAAAA;AAAF,OAAD,KAAe;AACvCoK,QAAAA,CAAC,GAAGpK,KAAJ;AACD,OAFD;AAGA,YAAMA,KAAK,GACTgF,aAAa,YAAY5D,sBAASC,KAAlC,GAA0C+I,CAA1C,GAA8CpF,aADhD;AAEA,0BACE,6BAAC,qBAAD,CAAU,IAAV;AACE,QAAA,GAAG,EAAG,sBAAqBuB,CAAE,EAD/B;AAEE,QAAA,KAAK,EAAE,CACLU,sBAAOkC,oBADF,EACwB;AAC7B;AACEwC,UAAAA,MAAM,EAAE,CADV;AAEE5E,UAAAA,IAAI,EAAE9E,SAAS,CAACrD,KAAV,GAAkB,CAF1B;AAGEgN,UAAAA,SAAS,EAAE,CACT;AACEC,YAAAA,UAAU,EAAEJ;AADd,WADS,EAIT;AACEK,YAAAA,UAAU,EAAE;AADd,WAJS,CAHb;AAWE,aAAGzB;AAXL,SAFK;AAFT,SAmBGrB,yBAAyB,CAACzC,CAAD,EAAIvG,KAAJ,CAnB5B,CADF;AAuBD,KA/BA,CADH,CAFJ,eAqCE,6BAAC,iBAAD,eACM4J,KADN;AAEE,MAAA,KAAK,EAAE,CACL3C,sBAAO8E,SADF,EAELlI,QAAQ,GAAG;AAAE+H,QAAAA,SAAS,EAAE,CAAC;AAAEI,UAAAA,MAAM,EAAE;AAAV,SAAD;AAAb,OAAH,GAA2C,EAF9C,EAGLnD,cAHK,CAFT;AAOE,MAAA,QAAQ,EAAE,KAAKoD;AAPjB,qBASE,6BAAC,iBAAD;AACE,MAAA,8BAA8B,MADhC;AAEE,MAAA,KAAK,EAAE,CACLhF,sBAAOiF,KADF,EAEL;AACEhG,QAAAA,eAAe,EAAE4C;AADnB,OAFK,EAKLQ,UALK,EAMLI,qBANK,CAFT;AAUE,MAAA,QAAQ,EAAE,KAAKyC;AAVjB,MATF,eAqBE,6BAAC,qBAAD,CAAU,IAAV;AACE,MAAA,8BAA8B,MADhC;AAEE,MAAA,KAAK,EAAE,CACLlF,sBAAOiF,KADF,EAEL5C,UAFK,EAGLC,iBAHK,EAILC,qBAJK;AAFT,MArBF,EA8BGN,wBAAwB,IACvBiB,4BADD,IAECA,4BAA4B,CAACxJ,GAA7B,CAAiC,CAACX,KAAD,EAAQuG,CAAR,kBAC/B,6BAAC,qBAAD,CAAU,IAAV;AACE,MAAA,GAAG,EAAG,cAAaA,CAAE,EADvB;AAEE,MAAA,KAAK,EAAE,CACLU,sBAAOkC,oBADF,EAEL;AACEyC,QAAAA,SAAS,EAAE,CACT;AACEC,UAAAA,UAAU,EAAE7L;AADd,SADS,EAIT;AACE8L,UAAAA,UAAU,EAAE;AADd,SAJS,CADb;AASE,WAAGzB;AATL,OAFK;AAFT,OAiBGnB,wBAAwB,CAAC3C,CAAD,CAjB3B,CADF,CAhCJ,EAqDGuD,uBAAuB,CAACnJ,GAAxB,CAA4B,CAACX,KAAD,EAAQuG,CAAR,kBAC3B,6BAAC,qBAAD,CAAU,IAAV;AACE,MAAA,GAAG,EAAG,gBAAeA,CAAE,EADzB;AAEE,MAAA,KAAK,EAAE,CACL4C,oBAAoB,GAChBlC,sBAAOkC,oBADS,GAEhBlC,sBAAOmF,KAHN,EAILjD,oBAAoB,GAChB,EADgB,GAEhB;AACEjD,QAAAA,eAAe,EAAEmD,cADnB;AAEE,WAAGD;AAFL,OANC,EAUL;AACEwC,QAAAA,SAAS,EAAE,CACT;AACEC,UAAAA,UAAU,EAAE7L;AADd,SADS,EAIT;AACE8L,UAAAA,UAAU,EAAE;AADd,SAJS,CADb;AASE,WAAGzB;AATL,OAVK,CAFT;AAwBE,MAAA,QAAQ,EAAE,KAAKgC;AAxBjB,OA0BGlD,oBAAoB,GACjBlJ,KAAK,CAACC,OAAN,CAAciJ,oBAAd,IACEA,oBAAoB,CAAC5C,CAAD,CAApB,EADF,GAEE4C,oBAAoB,EAHL,GAIjB,KAAKmD,iBAAL,CAAuB/F,CAAvB,CA9BN,CADD,CArDH,eAuFE,6BAAC,iBAAD;AACE,MAAA,KAAK,EAAE,CAACU,sBAAOsF,SAAR,EAAmB9G,kBAAnB;AADT,OAEM,KAAK2B,aAAL,CAAmBoF,WAFzB,GAIG,CAAC,CAACvG,cAAF,IACC6D,uBAAuB,CAACnJ,GAAxB,CAA4B,CAACX,KAAD,EAAQuG,CAAR,KAC1B,KAAKkG,0BAAL,CAAgCzM,KAAhC,EAAuCuG,CAAvC,CADF,CALJ,CAvFF,CArCF,EAsIG0C,yBAAyB,iBACxB,6BAAC,iBAAD;AAAM,MAAA,KAAK,EAAEhC,sBAAOyF;AAApB,OACG5C,uBAAuB,CAACnJ,GAAxB,CAA4B,CAAC8K,kBAAD,EAAqBlF,CAArB,KAA2B;AACtD,YAAMvB,aAAa,GAAGhE,MAAM,CAACuF,CAAD,CAAN,IAAa,CAAnC;AACA,YAAMvG,KAAK,GACTgF,aAAa,YAAY5D,sBAASC,KAAlC,GACI;AACA2D,MAAAA,aAAa,CAAC1D,UAAd,EAFJ,GAGI0D,aAJN;AAKA,0BACE,6BAAC,qBAAD,CAAU,IAAV;AACE,QAAA,GAAG,EAAG,sBAAqBuB,CAAE,EAD/B;AAEE,QAAA,KAAK,EAAE,CACLU,sBAAOkC,oBADF,EACwB;AAC7B;AACEnC,UAAAA,GAAG,EAAE,CADP;AAEED,UAAAA,IAAI,EAAE9E,SAAS,CAACrD,KAAV,GAAkB,CAF1B;AAGEgN,UAAAA,SAAS,EAAE,CACT;AACEC,YAAAA,UAAU,EAAEJ;AADd,WADS,EAIT;AACEK,YAAAA,UAAU,EAAE;AADd,WAJS,CAHb;AAWE,aAAGzB;AAXL,SAFK;AAFT,SAmBGpB,yBAAyB,CAAC1C,CAAD,EAAIvG,KAAJ,CAnB5B,CADF;AAuBD,KA9BA,CADH,CAvIJ,CADF;AA4KD;;AA3tBiE;;;;gBAAvD4B,M,kBAqCW;AACpBsD,EAAAA,aAAa,EAAE,QADK;AAEpBe,EAAAA,cAAc,EAAE,KAFI;AAGpBoC,EAAAA,UAAU,EAAE,EAHQ;AAIpBS,EAAAA,qBAAqB,EAAE,SAJH;AAKpB1I,EAAAA,YAAY,EAAE,CALM;AAMpB2I,EAAAA,qBAAqB,EAAE,SANH;AAOpB1I,EAAAA,YAAY,EAAE,CAPM;AAQpB8D,EAAAA,IAAI,EAAE,CARc;AASpBkF,EAAAA,cAAc,EAAE,SATI;AAUpBhH,EAAAA,cAAc,EAAE,IAVI;AAWpBrC,EAAAA,KAAK,EAAE,CAXa;AAYpB6D,EAAAA,QAAQ,EAAE,KAZU;AAapB8F,EAAAA,aAAa,EAAE;AAbK,C;;AAyrBxB,MAAMgD,eAAe,GAAI5M,KAAD,IAAiC;AACvD,QAAM;AACJC,IAAAA,KADI;AAEJuB,IAAAA,QAFI;AAGJ8G,IAAAA,UAHI;AAIJuE,IAAAA,eAJI;AAKJ/D,IAAAA,cALI;AAMJgE,IAAAA;AANI,MAOF9M,KAPJ;AASA,MAAImJ,wBAAJ;;AAEA,MAAIb,UAAU,SAAV,IAAAA,UAAU,WAAV,IAAAA,UAAU,CAAElI,MAAZ,KAAuB,CAACF,KAAK,CAACC,OAAN,CAAcF,KAAd,CAAD,IAAyB,CAAAA,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEG,MAAP,MAAkB,CAAlE,CAAJ,EAA0E;AACxE;AACJ;AACA;AACI+I,IAAAA,wBAAwB,GAAIhI,KAAD,IAAmB;AAC5C,YAAM4L,gBAAgB,GAAGzE,UAAU,CAACnH,KAAD,CAAnC;AAEA,YAAM6L,KAAK,GACTD,gBAAgB,GAAGtM,IAAI,CAACC,GAAL,CAASR,KAAK,CAACC,OAAN,CAAcF,KAAd,IAAuBA,KAAK,CAAC,CAAD,CAA5B,GAAkCA,KAA3C,CAAnB,GACI4M,eADJ,aACIA,eADJ,uBACIA,eAAe,CAAEI,UADrB,GAEIJ,eAFJ,aAEIA,eAFJ,uBAEIA,eAAe,CAAEK,YAHvB;AAIA,0BAAO,6BAAC,iBAAD;AAAM,QAAA,KAAK,EAAEF;AAAb,QAAP;AACD,KARD;AASD;;AAED,QAAMG,cAAc,GAAG,MAAM;AAC3B,WAAOC,eAAMC,QAAN,CAAezM,GAAf,CAAmBZ,KAAK,CAACsN,QAAzB,EAAoCC,KAAD,IAAW;AACnD,UAAI,CAAC,CAACA,KAAF,IAAWA,KAAK,CAACC,IAAN,KAAe3L,MAA9B,EAAsC;AACpC,4BAAOuL,eAAMK,YAAN,CAAmBF,KAAnB,EAA0B;AAC/BrK,UAAAA,aAAa,EAAGwK,KAAD,IAAqB;AAClCZ,YAAAA,mBAAmB;AACnBtL,YAAAA,QAAQ,CAACkM,KAAD,CAAR;AACD,WAJ8B;AAK/BvE,UAAAA,wBAL+B;AAM/Bb,UAAAA,UAN+B;AAO/BrI,UAAAA;AAP+B,SAA1B,CAAP;AASD;;AAED,aAAOsN,KAAP;AACD,KAdM,CAAP;AAeD,GAhBD;;AAkBA,sBACE,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAE,CAACI,YAAY,CAACC,eAAd,EAA+B9E,cAA/B;AAAb,kBACE,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAE6E,YAAY,CAACE;AAA1B,KAA0CV,cAAc,EAAxD,CADF,CADF;AAKD,CAlDD;;;;AAoDA,MAAMW,YAAY,GAAI9N,KAAD,IAA8B;AACjD,sBACE,6BAAC,eAAD,EAAqBA,KAArB,eACE,6BAAC,MAAD,EAAYA,KAAZ,CADF,CADF;AAKD,CAND;;eAQe8N,Y;;;AAEf,MAAMH,YAAY,GAAGI,wBAAWxG,MAAX,CAAkB;AACrCqG,EAAAA,eAAe,EAAE;AACfI,IAAAA,aAAa,EAAE,KADA;AAEfC,IAAAA,UAAU,EAAE;AAFG,GADoB;AAKrCJ,EAAAA,aAAa,EAAE;AACbK,IAAAA,IAAI,EAAE;AADO;AALsB,CAAlB,CAArB","sourcesContent":["import React, { PureComponent } from 'react';\nimport {\n  Animated,\n  Easing,\n  I18nManager,\n  Image,\n  ImageSourcePropType,\n  LayoutChangeEvent,\n  PanResponder,\n  PanResponderInstance,\n  View,\n  ViewStyle,\n  StyleSheet,\n} from 'react-native';\n// styles\nimport { defaultStyles as styles } from './styles';\nimport type {\n  Dimensions,\n  SliderProps,\n  SliderState,\n  CustomSliderProps,\n  SliderContainerProps,\n} from './types';\n\n/**\n * @description  source code refrence: https://github.com/miblanchard/react-native-slider\n */\n\ntype RectReturn = {\n  containsPoint: (nativeX: number, nativeY: number) => boolean;\n  height: number;\n  trackDistanceToPoint: (nativeX: number) => number;\n  width: number;\n  x: number;\n  y: number;\n};\n\nconst Rect = ({\n  height,\n  width,\n  x,\n  y,\n}: {\n  height: number;\n  width: number;\n  x: number;\n  y: number;\n}) => ({\n  containsPoint: (nativeX: number, nativeY: number) =>\n    nativeX >= x &&\n    nativeY >= y &&\n    nativeX <= x + width &&\n    nativeY <= y + height,\n  height,\n  trackDistanceToPoint: (nativeX: number) => {\n    if (nativeX < x) {\n      return x - nativeX;\n    }\n\n    if (nativeX > x + width) {\n      return nativeX - (x + width);\n    }\n\n    return 0;\n  },\n  width,\n  x,\n  y,\n});\n\nconst DEFAULT_ANIMATION_CONFIGS = {\n  spring: {\n    friction: 7,\n    tension: 100,\n  },\n  timing: {\n    duration: 150,\n    easing: Easing.inOut(Easing.ease),\n    delay: 0,\n  },\n};\n\nconst normalizeValue = (\n  props: SliderProps,\n  value?: number | Array<number>\n): Array<number> => {\n  if (!value || (Array.isArray(value) && value.length === 0)) {\n    return [0];\n  }\n\n  const { maximumValue, minimumValue } = props;\n\n  const getBetweenValue = (inputValue: number) =>\n    Math.max(Math.min(inputValue, maximumValue), minimumValue);\n\n  if (!Array.isArray(value)) {\n    return [getBetweenValue(value)];\n  }\n\n  return value.map(getBetweenValue).sort((a, b) => a - b);\n};\n\nconst updateValues = ({\n  values,\n  newValues = values,\n}: {\n  values: number | Array<number> | Animated.Value | Array<Animated.Value>;\n  newValues?: number | Array<number> | Animated.Value | Array<Animated.Value>;\n}): Animated.Value[] => {\n  if (\n    Array.isArray(newValues) &&\n    Array.isArray(values) &&\n    newValues.length !== values.length\n  ) {\n    return updateValues({ values: newValues });\n  }\n\n  if (Array.isArray(values) && Array.isArray(newValues)) {\n    return values?.map((value: number | Animated.Value, index: number) => {\n      let valueToSet = newValues[index];\n      if (value instanceof Animated.Value) {\n        if (valueToSet instanceof Animated.Value) {\n          //@ts-ignore\n          valueToSet = valueToSet.__getValue();\n        }\n        //@ts-ignore\n        value.setValue(valueToSet);\n        return value;\n      }\n\n      if (valueToSet instanceof Animated.Value) {\n        return valueToSet;\n      }\n\n      return new Animated.Value(valueToSet);\n    });\n  }\n\n  return [new Animated.Value(0)];\n};\n\nconst indexOfLowest = (values: Array<number>): number => {\n  let lowestIndex = 0;\n  values.forEach((value, index, array) => {\n    if (value < array[lowestIndex]) {\n      lowestIndex = index;\n    }\n  });\n  return lowestIndex;\n};\n\nexport class Slider extends PureComponent<SliderProps, SliderState> {\n  constructor(props: SliderProps) {\n    super(props);\n    this._panResponder = PanResponder.create({\n      onStartShouldSetPanResponder: this._handleStartShouldSetPanResponder,\n      onMoveShouldSetPanResponder: this._handleMoveShouldSetPanResponder,\n      onPanResponderGrant: this._handlePanResponderGrant,\n      onPanResponderMove: this._handlePanResponderMove,\n      onPanResponderRelease: this._handlePanResponderEnd,\n      onPanResponderTerminationRequest: this._handlePanResponderRequestEnd,\n      onPanResponderTerminate: this._handlePanResponderEnd,\n    });\n    this.state = {\n      allMeasured: false,\n      containerSize: {\n        width: 0,\n        height: 0,\n      },\n      thumbSize: {\n        width: 0,\n        height: 0,\n      },\n      trackMarksValues: updateValues({\n        values: normalizeValue(this.props, this.props.trackMarks),\n      }),\n      values: updateValues({\n        values: normalizeValue(\n          this.props,\n          this.props.value instanceof Animated.Value\n            ? //@ts-ignore\n              this.props.value.__getValue()\n            : this.props.value\n        ),\n      }),\n    };\n  }\n\n  static defaultProps = {\n    animationType: 'timing',\n    debugTouchArea: false,\n    trackMarks: [],\n    maximumTrackTintColor: '#b3b3b3',\n    maximumValue: 1,\n    minimumTrackTintColor: '#3f3f3f',\n    minimumValue: 0,\n    step: 0,\n    thumbTintColor: '#343434',\n    trackClickable: true,\n    value: 0,\n    vertical: false,\n    startFromZero: false,\n  };\n\n  //@ts-ignore\n  static getDerivedStateFromProps(props: SliderProps, state: SliderState) {\n    if (\n      props.trackMarks &&\n      !!state.trackMarksValues &&\n      state.trackMarksValues.length > 0\n    ) {\n      const newTrackMarkValues = normalizeValue(props, props.trackMarks);\n      const statePatch = {} as SliderState;\n\n      if (state.trackMarksValues) {\n        statePatch.trackMarksValues = updateValues({\n          values: state.trackMarksValues,\n          newValues: newTrackMarkValues,\n        });\n      }\n\n      return statePatch;\n    }\n  }\n\n  componentDidUpdate() {\n    const newValues = normalizeValue(\n      this.props,\n      this.props.value instanceof Animated.Value\n        ? //@ts-ignore\n          this.props.value.__getValue()\n        : this.props.value\n    );\n    newValues.forEach((value, i) => {\n      if (!this.state.values[i]) {\n        this._setCurrentValue(value, i);\n        //@ts-ignore\n      } else if (value !== this.state.values[i].__getValue()) {\n        if (this.props.animateTransitions) {\n          this._setCurrentValueAnimated(value, i);\n        } else {\n          this._setCurrentValue(value, i);\n        }\n      }\n    });\n  }\n\n  _getRawValues(\n    values: Array<Animated.Value> | Array<Animated.AnimatedInterpolation>\n  ) {\n    //@ts-ignore\n    return values.map((value) => value.__getValue());\n  }\n\n  _handleStartShouldSetPanResponder = (\n    e: any\n  ): /* gestureState: GestureState */\n  boolean => this._thumbHitTest(e); // Should we become active when the user presses down on the thumb?\n\n  _handleMoveShouldSetPanResponder(): /* e, gestureState: GestureState */\n  boolean {\n    // Should we become active when the user moves a touch over the thumb?\n    return false;\n  }\n\n  _handlePanResponderGrant = (e: { nativeEvent: any }) => {\n    const { thumbSize } = this.state;\n    const { nativeEvent } = e;\n    this._previousLeft = this.props.trackClickable\n      ? nativeEvent.locationX - thumbSize.width\n      : this._getThumbLeft(this._getCurrentValue(this._activeThumbIndex));\n\n    this.props?.onSlidingStart?.(this._getRawValues(this.state.values));\n  };\n\n  _handlePanResponderMove = (_e: any, gestureState: any) => {\n    if (this.props.disabled) {\n      return;\n    }\n\n    this._setCurrentValue(\n      this._getValue(gestureState),\n      this._activeThumbIndex,\n      () => {\n        this.props?.onValueChange?.(this._getRawValues(this.state.values));\n      }\n    );\n  };\n\n  _handlePanResponderRequestEnd = () =>\n    /* e, gestureState: GestureState */\n    {\n      // Should we allow another component to take over this pan?\n      return false;\n    };\n\n  _handlePanResponderEnd = (_e: any, gestureState: any) => {\n    if (this.props.disabled) {\n      return;\n    }\n\n    this._setCurrentValue(\n      this._getValue(gestureState),\n      this._activeThumbIndex,\n      () => {\n        if (this.props.trackClickable) {\n          this.props?.onValueChange?.(this._getRawValues(this.state.values));\n        }\n\n        this.props?.onSlidingComplete?.(this._getRawValues(this.state.values));\n      }\n    );\n\n    this._activeThumbIndex = 0;\n  };\n\n  _measureContainer = (e: LayoutChangeEvent) => {\n    this._handleMeasure('_containerSize', e);\n  };\n\n  _measureTrack = (e: LayoutChangeEvent) => {\n    this._handleMeasure('_trackSize', e);\n  };\n\n  _measureThumb = (e: LayoutChangeEvent) => {\n    this._handleMeasure('_thumbSize', e);\n  };\n\n  _handleMeasure = (\n    name: '_containerSize' | '_trackSize' | '_thumbSize',\n    e: LayoutChangeEvent\n  ) => {\n    const { width, height } = e.nativeEvent.layout;\n    const size = {\n      width,\n      height,\n    };\n\n    const currentSize = this[name];\n\n    if (\n      currentSize &&\n      width === currentSize.width &&\n      height === currentSize.height\n    ) {\n      return;\n    }\n\n    this[name] = size;\n\n    if (this._containerSize && this._thumbSize) {\n      this.setState({\n        containerSize: this._containerSize,\n        thumbSize: this._thumbSize,\n        allMeasured: true,\n      });\n    }\n  };\n  _getRatio = (value: number) => {\n    const { maximumValue, minimumValue } = this.props;\n    return (value - minimumValue) / (maximumValue - minimumValue);\n  };\n  _getThumbLeft = (value: number) => {\n    const { containerSize, thumbSize } = this.state;\n    const { vertical } = this.props;\n\n    const standardRatio = this._getRatio(value);\n\n    const ratio = I18nManager.isRTL ? 1 - standardRatio : standardRatio;\n    return (\n      ratio *\n      ((vertical ? containerSize.height : containerSize.width) -\n        thumbSize.width)\n    );\n  };\n  _getValue = (gestureState: { dx: number; dy: number }) => {\n    const { containerSize, thumbSize, values } = this.state;\n    const { maximumValue, minimumValue, step, vertical } = this.props;\n    const length = containerSize.width - thumbSize.width;\n    const thumbLeft = vertical\n      ? this._previousLeft + gestureState.dy * -1\n      : this._previousLeft + gestureState.dx;\n    const nonRtlRatio = thumbLeft / length;\n    const ratio = I18nManager.isRTL ? 1 - nonRtlRatio : nonRtlRatio;\n    let minValue = minimumValue;\n    let maxValue = maximumValue;\n\n    const rawValues = this._getRawValues(values);\n\n    const buffer = step ? step : 0.1;\n\n    if (values.length === 2) {\n      if (this._activeThumbIndex === 1) {\n        minValue = rawValues[0] + buffer;\n      } else {\n        maxValue = rawValues[1] - buffer;\n      }\n    }\n\n    if (step) {\n      return Math.max(\n        minValue,\n        Math.min(\n          maxValue,\n          minimumValue +\n            Math.round((ratio * (maximumValue - minimumValue)) / step) * step\n        )\n      );\n    }\n\n    return Math.max(\n      minValue,\n      Math.min(maxValue, ratio * (maximumValue - minimumValue) + minimumValue)\n    );\n  };\n  _getCurrentValue = (thumbIndex: number = 0) =>\n    //@ts-ignore\n    this.state.values[thumbIndex].__getValue();\n\n  _setCurrentValue = (\n    value: number,\n    thumbIndex: number | null | undefined,\n    callback?: () => void\n  ) => {\n    const safeIndex = thumbIndex ?? 0;\n    const animatedValue = this.state.values[safeIndex];\n\n    if (animatedValue) {\n      animatedValue.setValue(value);\n\n      if (callback) {\n        callback();\n      }\n    } else {\n      this.setState((prevState: SliderState) => {\n        const newValues = [...prevState.values];\n        newValues[safeIndex] = new Animated.Value(value);\n        return {\n          values: newValues,\n        };\n      }, callback);\n    }\n  };\n\n  _setCurrentValueAnimated = (value: number, thumbIndex: number = 0) => {\n    const { animationType } = this.props;\n    const animationConfig = {\n      ...DEFAULT_ANIMATION_CONFIGS[animationType],\n      ...this.props.animationConfig,\n      toValue: value,\n      useNativeDriver: false,\n    };\n    Animated[animationType](\n      this.state.values[thumbIndex],\n      animationConfig\n    ).start();\n  };\n\n  _getTouchOverflowSize = (): {\n    width: number;\n    height: number;\n  } => {\n    const { allMeasured, containerSize, thumbSize } = this.state;\n    const { thumbTouchSize } = this.props;\n    const size = {\n      width: 40,\n      height: 40,\n    };\n\n    if (allMeasured) {\n      size.width = Math.max(0, thumbTouchSize?.width || 0 - thumbSize.width);\n      size.height = Math.max(\n        0,\n        thumbTouchSize?.height || 0 - containerSize.height\n      );\n    }\n\n    return size;\n  };\n\n  _getTouchOverflowStyle = () => {\n    const { width, height } = this._getTouchOverflowSize();\n\n    const touchOverflowStyle = {} as ViewStyle;\n\n    if (width !== undefined && height !== undefined) {\n      const verticalMargin = -height / 2;\n      touchOverflowStyle.marginTop = verticalMargin;\n      touchOverflowStyle.marginBottom = verticalMargin;\n      const horizontalMargin = -width / 2;\n      touchOverflowStyle.marginLeft = horizontalMargin;\n      touchOverflowStyle.marginRight = horizontalMargin;\n    }\n\n    if (this.props.debugTouchArea === true) {\n      touchOverflowStyle.backgroundColor = 'orange';\n      touchOverflowStyle.opacity = 0.5;\n    }\n\n    return touchOverflowStyle;\n  };\n  _thumbHitTest = (e: { nativeEvent: any }) => {\n    const { nativeEvent } = e;\n    const { trackClickable } = this.props;\n    const { values } = this.state;\n    const hitThumb = values.find((_, i) => {\n      const thumbTouchRect = this._getThumbTouchRect(i);\n\n      const containsPoint = thumbTouchRect.containsPoint(\n        nativeEvent.locationX,\n        nativeEvent.locationY\n      );\n\n      if (containsPoint) {\n        this._activeThumbIndex = i;\n      }\n\n      return containsPoint;\n    });\n\n    if (hitThumb) {\n      return true;\n    }\n\n    if (trackClickable) {\n      // set the active thumb index\n      if (values.length === 1) {\n        this._activeThumbIndex = 0;\n      } else {\n        // we will find the closest thumb and that will be the active thumb\n        const thumbDistances = values.map((_value, index) => {\n          const thumbTouchRect = this._getThumbTouchRect(index);\n\n          return thumbTouchRect.trackDistanceToPoint(nativeEvent.locationX);\n        });\n        this._activeThumbIndex = indexOfLowest(thumbDistances);\n      }\n\n      return true;\n    }\n\n    return false;\n  };\n\n  _getThumbTouchRect = (thumbIndex: number = 0): RectReturn => {\n    const { containerSize, thumbSize } = this.state;\n    const { thumbTouchSize } = this.props;\n    const { height, width } = thumbTouchSize || { height: 40, width: 40 };\n\n    const touchOverflowSize = this._getTouchOverflowSize();\n\n    return Rect({\n      height,\n      width,\n      x:\n        touchOverflowSize.width / 2 +\n        this._getThumbLeft(this._getCurrentValue(thumbIndex)) +\n        (thumbSize.width - width) / 2,\n      y: touchOverflowSize.height / 2 + (containerSize.height - height) / 2,\n    });\n  };\n\n  _activeThumbIndex: number = 0;\n  _containerSize: Dimensions | null | undefined;\n  _panResponder: PanResponderInstance;\n  _previousLeft: number = 0;\n  _thumbSize: Dimensions | null | undefined;\n  _trackSize: Dimensions | null | undefined;\n\n  _renderDebugThumbTouchRect = (\n    thumbLeft: Animated.AnimatedInterpolation,\n    index: number\n  ) => {\n    const { height, y, width } = this._getThumbTouchRect() || {};\n    const positionStyle = {\n      height,\n      left: thumbLeft,\n      top: y,\n      width,\n    };\n    return (\n      <Animated.View\n        key={`debug-thumb-${index}`}\n        pointerEvents=\"none\"\n        style={[styles.debugThumbTouchArea, positionStyle]}\n      />\n    );\n  };\n\n  _renderThumbImage = (thumbIndex: number = 0) => {\n    const { thumbImage } = this.props;\n\n    if (!thumbImage) {\n      return null;\n    }\n\n    return (\n      <Image\n        source={\n          (Array.isArray(thumbImage)\n            ? thumbImage[thumbIndex]\n            : thumbImage) as ImageSourcePropType\n        }\n      />\n    );\n  };\n\n  render() {\n    const {\n      containerStyle,\n      debugTouchArea,\n      maximumTrackTintColor,\n      maximumValue,\n      minimumTrackTintColor,\n      minimumValue,\n      renderAboveThumbComponent,\n      renderBelowThumbComponent,\n      renderTrackMarkComponent,\n      renderThumbComponent,\n      thumbStyle,\n      thumbTintColor,\n      trackStyle,\n      minimumTrackStyle: propMinimumTrackStyle,\n      maximumTrackStyle: propMaximumTrackStyle,\n      vertical,\n      startFromZero,\n      step = 0,\n      ...other\n    } = this.props;\n    const { allMeasured, containerSize, thumbSize, trackMarksValues, values } =\n      this.state;\n    const _startFromZero =\n      values.length === 1 && minimumValue < 0 && maximumValue > 0\n        ? startFromZero\n        : false;\n    const interpolatedThumbValues = values.map((value) =>\n      value.interpolate({\n        inputRange: [minimumValue, maximumValue],\n        outputRange: I18nManager.isRTL\n          ? [0, -(containerSize.width - thumbSize.width)]\n          : [0, containerSize.width - thumbSize.width],\n      })\n    );\n    const interpolatedTrackValues = values.map((value) =>\n      value.interpolate({\n        inputRange: [minimumValue, maximumValue],\n        outputRange: [0, containerSize.width - thumbSize.width],\n      })\n    );\n    const interpolatedTrackMarksValues =\n      trackMarksValues &&\n      trackMarksValues.map((v) =>\n        v.interpolate({\n          inputRange: [minimumValue, maximumValue],\n          outputRange: I18nManager.isRTL\n            ? [0, -(containerSize.width - thumbSize.width)]\n            : [0, containerSize.width - thumbSize.width],\n        })\n      );\n    const valueVisibleStyle = {} as ViewStyle;\n\n    if (!allMeasured) {\n      valueVisibleStyle.opacity = 0;\n    }\n\n    const interpolatedRawValues = this._getRawValues(interpolatedTrackValues);\n    const minRawValue = Math.min(...interpolatedRawValues);\n    const minThumbValue = new Animated.Value(minRawValue);\n    const maxRawValue = Math.max(...interpolatedRawValues);\n    const maxThumbValue = new Animated.Value(maxRawValue);\n    //@ts-ignore\n    const _value = values[0].__getValue();\n    const sliderWidthCoefficient =\n      containerSize.width / (Math.abs(minimumValue) + Math.abs(maximumValue));\n    const startPositionOnTrack = _startFromZero\n      ? _value < 0 + step\n        ? (_value + Math.abs(minimumValue)) * sliderWidthCoefficient\n        : Math.abs(minimumValue) * sliderWidthCoefficient\n      : 0;\n\n    const minTrackWidth = _startFromZero\n      ? Math.abs(_value) * sliderWidthCoefficient - thumbSize.width / 2\n      : interpolatedTrackValues[0];\n    const clearBorderRadius = {} as ViewStyle;\n    if (_startFromZero && _value < 0 + step) {\n      clearBorderRadius.borderBottomRightRadius = 0;\n      clearBorderRadius.borderTopRightRadius = 0;\n    }\n    if (_startFromZero && _value > 0) {\n      clearBorderRadius.borderTopLeftRadius = 0;\n      clearBorderRadius.borderBottomLeftRadius = 0;\n    }\n\n    const minimumTrackStyle = {\n      position: 'absolute',\n      left:\n        interpolatedTrackValues.length === 1\n          ? new Animated.Value(startPositionOnTrack)\n          : Animated.add(minThumbValue, thumbSize.width / 2),\n      width:\n        interpolatedTrackValues.length === 1\n          ? Animated.add(minTrackWidth, thumbSize.width / 2)\n          : Animated.add(Animated.multiply(minThumbValue, -1), maxThumbValue),\n      backgroundColor: minimumTrackTintColor,\n      ...valueVisibleStyle,\n      ...clearBorderRadius,\n    } as ViewStyle;\n\n    const touchOverflowStyle = this._getTouchOverflowStyle();\n\n    return (\n      <>\n        {renderAboveThumbComponent && (\n          <View style={styles.aboveThumbComponentsContainer}>\n            {interpolatedThumbValues.map((interpolationValue, i) => {\n              const animatedValue = values[i] || 0;\n              let v = 0;\n              animatedValue.addListener(({ value }) => {\n                v = value;\n              });\n              const value =\n                animatedValue instanceof Animated.Value ? v : animatedValue;\n              return (\n                <Animated.View\n                  key={`slider-above-thumb-${i}`}\n                  style={[\n                    styles.renderThumbComponent, // eslint-disable-next-line react-native/no-inline-styles\n                    {\n                      bottom: 0,\n                      left: thumbSize.width / 2,\n                      transform: [\n                        {\n                          translateX: interpolationValue,\n                        },\n                        {\n                          translateY: 0,\n                        },\n                      ],\n                      ...valueVisibleStyle,\n                    },\n                  ]}\n                >\n                  {renderAboveThumbComponent(i, value)}\n                </Animated.View>\n              );\n            })}\n          </View>\n        )}\n        <View\n          {...other}\n          style={[\n            styles.container,\n            vertical ? { transform: [{ rotate: '-90deg' }] } : {},\n            containerStyle,\n          ]}\n          onLayout={this._measureContainer}\n        >\n          <View\n            renderToHardwareTextureAndroid\n            style={[\n              styles.track,\n              {\n                backgroundColor: maximumTrackTintColor,\n              },\n              trackStyle,\n              propMaximumTrackStyle,\n            ]}\n            onLayout={this._measureTrack}\n          />\n          <Animated.View\n            renderToHardwareTextureAndroid\n            style={[\n              styles.track,\n              trackStyle,\n              minimumTrackStyle,\n              propMinimumTrackStyle,\n            ]}\n          />\n          {renderTrackMarkComponent &&\n            interpolatedTrackMarksValues &&\n            interpolatedTrackMarksValues.map((value, i) => (\n              <Animated.View\n                key={`track-mark-${i}`}\n                style={[\n                  styles.renderThumbComponent,\n                  {\n                    transform: [\n                      {\n                        translateX: value,\n                      },\n                      {\n                        translateY: 0,\n                      },\n                    ],\n                    ...valueVisibleStyle,\n                  },\n                ]}\n              >\n                {renderTrackMarkComponent(i)}\n              </Animated.View>\n            ))}\n          {interpolatedThumbValues.map((value, i) => (\n            <Animated.View\n              key={`slider-thumb-${i}`}\n              style={[\n                renderThumbComponent\n                  ? styles.renderThumbComponent\n                  : styles.thumb,\n                renderThumbComponent\n                  ? {}\n                  : {\n                      backgroundColor: thumbTintColor,\n                      ...thumbStyle,\n                    },\n                {\n                  transform: [\n                    {\n                      translateX: value,\n                    },\n                    {\n                      translateY: 0,\n                    },\n                  ],\n                  ...valueVisibleStyle,\n                },\n              ]}\n              onLayout={this._measureThumb}\n            >\n              {renderThumbComponent\n                ? Array.isArray(renderThumbComponent)\n                  ? renderThumbComponent[i]()\n                  : renderThumbComponent()\n                : this._renderThumbImage(i)}\n            </Animated.View>\n          ))}\n          <View\n            style={[styles.touchArea, touchOverflowStyle]}\n            {...this._panResponder.panHandlers}\n          >\n            {!!debugTouchArea &&\n              interpolatedThumbValues.map((value, i) =>\n                this._renderDebugThumbTouchRect(value, i)\n              )}\n          </View>\n        </View>\n        {renderBelowThumbComponent && (\n          <View style={styles.belowThumbComponentsContainer}>\n            {interpolatedThumbValues.map((interpolationValue, i) => {\n              const animatedValue = values[i] || 0;\n              const value =\n                animatedValue instanceof Animated.Value\n                  ? //@ts-ignore\n                    animatedValue.__getValue()\n                  : animatedValue;\n              return (\n                <Animated.View\n                  key={`slider-below-thumb-${i}`}\n                  style={[\n                    styles.renderThumbComponent, // eslint-disable-next-line react-native/no-inline-styles\n                    {\n                      top: 0,\n                      left: thumbSize.width / 2,\n                      transform: [\n                        {\n                          translateX: interpolationValue,\n                        },\n                        {\n                          translateY: 0,\n                        },\n                      ],\n                      ...valueVisibleStyle,\n                    },\n                  ]}\n                >\n                  {renderBelowThumbComponent(i, value)}\n                </Animated.View>\n              );\n            })}\n          </View>\n        )}\n      </>\n    );\n  }\n}\n\nconst SliderContainer = (props: SliderContainerProps) => {\n  const {\n    value,\n    setValue,\n    trackMarks,\n    trackMarkStyles,\n    containerStyle,\n    onCustomValueChange,\n  } = props;\n\n  let renderTrackMarkComponent: React.ReactNode;\n\n  if (trackMarks?.length && (!Array.isArray(value) || value?.length === 1)) {\n    /**\n     * @param {number} index\n     */\n    renderTrackMarkComponent = (index: number) => {\n      const currentMarkValue = trackMarks[index];\n\n      const style =\n        currentMarkValue > Math.max(Array.isArray(value) ? value[0] : value)\n          ? trackMarkStyles?.activeMark\n          : trackMarkStyles?.inactiveMark;\n      return <View style={style} />;\n    };\n  }\n\n  const renderChildren = () => {\n    return React.Children.map(props.children, (child) => {\n      if (!!child && child.type === Slider) {\n        return React.cloneElement(child, {\n          onValueChange: (input: number[]) => {\n            onCustomValueChange();\n            setValue(input);\n          },\n          renderTrackMarkComponent,\n          trackMarks,\n          value,\n        });\n      }\n\n      return child;\n    });\n  };\n\n  return (\n    <View style={[customStyles.sliderContainer, containerStyle]}>\n      <View style={customStyles.sliderContent}>{renderChildren()}</View>\n    </View>\n  );\n};\n\nconst CustomSlider = (props: CustomSliderProps) => {\n  return (\n    <SliderContainer {...props}>\n      <Slider {...props} />\n    </SliderContainer>\n  );\n};\nexport { SliderContainer };\nexport default CustomSlider;\n\nconst customStyles = StyleSheet.create({\n  sliderContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  sliderContent: {\n    flex: 1,\n  },\n});\n"]}