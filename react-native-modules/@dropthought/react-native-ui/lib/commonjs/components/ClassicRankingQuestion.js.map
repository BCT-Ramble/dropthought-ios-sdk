{"version":3,"sources":["ClassicRankingQuestion.tsx"],"names":["swapElements","array","index1","index2","newArray","splice","RankingItem","item","index","allowNAForRanking","themeColor","onRankPress","onNAPress","fontColor","colorScheme","isDarkMode","COLOR_SCHEMES","dark","option","isNA","dragIconStyle","tintColor","undefined","opacity","hitSlop","top","bottom","left","right","checkBoxStyle","naComponent","styles","divider","GlobalStyle","row","require","unCheckBox","borderColor","Colors","rankingCheckBoxBorder","naText","color","rankText","renderItemStyle","backgroundColor","rankingBGDark","rankingBorderDark","rankingContainerStyle","rankingContainerBgDark","rankingContainerBorderDark","renderItem","rankTitle","rankingContainer","ClassicRankingQuestion","mandatoryErrorMessage","question","onFeedback","forgot","feedback","onDragGrant","onDragEnd","dimensionWidthType","isIPhone","Platform","OS","DimensionWidthType","phone","questionId","options","originListRef","map","list","setList","current","normalList","setNormalList","visible","setVisible","selectedOption","setSelectedOption","filter","listForRankingQuestion","length","feedbackToOptions","feedbackToNAOptions","forEach","newOption","answers","result","type","onRankPressHandler","oniOSModal","onNAPressHandler","prev","withoutItem","localNormalList","localNaList","selectedItem","actionSheetOptions","_","toString","ActionSheetIOS","showActionSheetWithOptions","title","white","black","cancelButtonIndex","userInterfaceStyle","buttonIndex","currentIndex","findIndex","newList","modalContainerStyle","modalContainer","modalItemTitleStyle","modalItemTitle","modalItemStyle","modalItem","borderTopColor","rankingModal","modalBG","modalDismissArea","modalTitleContainer","modalTitle","_value","onDragEndHandler","newData","container","mandatoryTitle","questionContainer","React","memo","StyleSheet","create","flex","marginTop","height","marginVertical","borderWidth","borderRadius","rankingBorder","paddingHorizontal","rankingBG","marginHorizontal","fontSize","width","borderStyle","rankingContainerBorder","justifyContent","marginLeft","margin","shadowColor","shadowOffset","shadowRadius","shadowOpacity","paddingVertical","borderTopWidth","minHeight","textAlign","fontWeight","dateGrey","scrollViewContainer","marginBottom","alignItems"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport {\n  View,\n  Image,\n  TouchableOpacity,\n  Text,\n  StyleSheet,\n  Modal,\n  ScrollView,\n  ActionSheetIOS,\n  Platform,\n} from 'react-native';\nimport {\n  DimensionWidthType,\n  useDimensionWidthType,\n} from '../hooks/useWindowDimensions';\nimport ClassicMandatoryTitle from './ClassicMandatoryTitle';\nimport GlobalStyle, { Colors, addOpacityToColor } from '../styles';\nimport type {\n  Feedback as OriginFeedback,\n  Question as OriginQuestion,\n} from '../data';\nimport { useTheme, COLOR_SCHEMES } from '../contexts/theme';\nimport DraggableList from '../utils/react-native-draggable-list/DraggableList';\nimport type {\n  DraggableListRenderItem,\n  TransformedOption,\n} from '../utils/react-native-draggable-list/DraggableList';\n\ntype RenderItemProps = {\n  item: TransformedOption;\n  index: number;\n};\n\ninterface SwapElements {\n  (\n    array: TransformedOption[],\n    index1: number,\n    index2: number\n  ): TransformedOption[];\n}\n\nconst swapElements: SwapElements = (array, index1, index2) => {\n  let newArray = [...array];\n  newArray[index1] = newArray.splice(index2, 1, newArray[index1])[0];\n  return newArray;\n};\n\ntype RankingItemProps = {\n  item: TransformedOption;\n  index: number;\n  allowNAForRanking: boolean;\n  themeColor: string;\n  onRankPress: (item: TransformedOption) => void;\n  onNAPress: (item: TransformedOption) => void;\n};\n\nfunction RankingItem({\n  item,\n  index,\n  allowNAForRanking,\n  themeColor,\n  onRankPress,\n  onNAPress,\n}: RankingItemProps) {\n  const { fontColor, colorScheme } = useTheme();\n  const isDarkMode = colorScheme === COLOR_SCHEMES.dark;\n\n  const { option, isNA } = item;\n  const dragIconStyle = {\n    tintColor: isDarkMode ? undefined : themeColor,\n    opacity: isNA ? 0.3 : 1,\n  };\n\n  const hitSlop = { top: 12, bottom: 12, left: 5, right: 5 };\n  const checkBoxStyle = { tintColor: themeColor };\n  const naComponent = allowNAForRanking ? (\n    <>\n      <View style={styles.divider} />\n      <TouchableOpacity\n        style={GlobalStyle.row}\n        hitSlop={hitSlop}\n        onPress={() => onNAPress(item)}\n      >\n        {isNA ? (\n          <Image\n            style={checkBoxStyle}\n            source={require('../assets/icCheckBoxRounded.png')}\n          />\n        ) : (\n          <View\n            style={[\n              styles.unCheckBox,\n              {\n                borderColor: isDarkMode\n                  ? Colors.rankingCheckBoxBorder\n                  : themeColor ?? Colors.rankingCheckBoxBorder,\n              },\n            ]}\n          />\n        )}\n        <Text style={[styles.naText, { color: fontColor }]}>{'N/A'}</Text>\n      </TouchableOpacity>\n    </>\n  ) : null;\n\n  const rankText = isNA ? 'NA' : `${index + 1}`;\n  const renderItemStyle = isDarkMode\n    ? {\n        backgroundColor: Colors.rankingBGDark,\n        borderColor: Colors.rankingBorderDark,\n      }\n    : {\n        backgroundColor: themeColor\n          ? addOpacityToColor(themeColor, 0.05)\n          : Colors.rankingBGDark,\n        borderColor: themeColor\n          ? addOpacityToColor(themeColor, 0.1)\n          : Colors.rankingBorderDark,\n      };\n  const rankingContainerStyle = isDarkMode\n    ? {\n        backgroundColor: Colors.rankingContainerBgDark,\n        borderColor: Colors.rankingContainerBorderDark,\n      }\n    : {\n        borderColor: themeColor\n          ? addOpacityToColor(themeColor, 0.3)\n          : Colors.rankingBorderDark,\n      };\n  return (\n    <View style={[styles.renderItem, renderItemStyle]}>\n      <Image style={dragIconStyle} source={require('../assets/icDrag.png')} />\n      <Text style={[styles.rankTitle, { color: fontColor }]} numberOfLines={0}>\n        {`${option}`}\n      </Text>\n      <TouchableOpacity\n        style={[styles.rankingContainer, rankingContainerStyle]}\n        hitSlop={hitSlop}\n        disabled={isNA}\n        onPress={() => onRankPress(item)}\n      >\n        <Text style={[styles.rankText, { color: fontColor }]}>{rankText}</Text>\n        <Image source={require('../assets/ic-expand-more-24-px.png')} />\n      </TouchableOpacity>\n      {naComponent}\n    </View>\n  );\n}\n\ntype Feedback = OriginFeedback & {\n  listForRankingQuestion: TransformedOption[];\n};\n\ntype Question = OriginQuestion & {\n  options: string[];\n  scale: string;\n  allowNAForRanking: boolean;\n};\n\ntype Props = {\n  mandatoryErrorMessage: string;\n  question: Question;\n  onFeedback: (feedback: Feedback) => void;\n  forgot: boolean;\n  feedback: Feedback;\n  themeColor: string;\n  onDragGrant: () => void;\n  onDragEnd: () => void;\n};\n\nconst ClassicRankingQuestion = ({\n  mandatoryErrorMessage,\n  question,\n  onFeedback,\n  forgot,\n  feedback,\n  themeColor,\n  onDragGrant,\n  onDragEnd,\n}: Props) => {\n  const { colorScheme } = useTheme();\n  const isDarkMode = colorScheme === COLOR_SCHEMES.dark;\n\n  const dimensionWidthType = useDimensionWidthType();\n  const isIPhone =\n    Platform.OS === 'ios' && dimensionWidthType === DimensionWidthType.phone;\n\n  const { questionId, options = [], allowNAForRanking = true } = question;\n\n  const originListRef = useRef<TransformedOption[]>(\n    options.map((option, index) => {\n      return { option, index, isNA: false };\n    })\n  );\n\n  const [list, setList] = useState(originListRef.current);\n\n  const [normalList, setNormalList] = useState(list);\n\n  const [visible, setVisible] = useState(false);\n  const [selectedOption, setSelectedOption] = useState<TransformedOption>();\n\n  useEffect(() => {\n    setNormalList(list.filter((current) => !current.isNA));\n  }, [list]);\n\n  useEffect(() => {\n    const { listForRankingQuestion } = feedback ?? {};\n    if (\n      feedback &&\n      listForRankingQuestion &&\n      listForRankingQuestion.length > 0\n    ) {\n      let feedbackToOptions: TransformedOption[] = [];\n      let feedbackToNAOptions: TransformedOption[] = [];\n      listForRankingQuestion.forEach(({ option, isNA }, index) => {\n        const newOption = { option, index, isNA };\n        if (isNA) {\n          feedbackToNAOptions = [...feedbackToNAOptions, newOption];\n        } else {\n          feedbackToOptions = [...feedbackToOptions, newOption];\n        }\n      });\n      setList(listForRankingQuestion);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    const answers: (number | string)[] = list.map(({ isNA, index }) => {\n      return isNA ? 'N/A' : index;\n    });\n    const result = {\n      questionId,\n      answers,\n      type: 'ranking',\n      listForRankingQuestion: list, // for render usage after page navigations\n    };\n    // @ts-ignore\n    onFeedback(result);\n  }, [list, onFeedback, questionId]);\n\n  const onRankPressHandler = (item: TransformedOption) => {\n    setSelectedOption(item);\n    isIPhone ? oniOSModal(item) : setVisible(true);\n  };\n\n  const onNAPressHandler = (item: TransformedOption) => {\n    if (list) {\n      item.isNA = !item.isNA;\n      setList((prev) => {\n        const withoutItem = prev.filter(({ option }) => option !== item.option);\n        const localNormalList = withoutItem.filter((current) => !current.isNA);\n        const localNaList = withoutItem.filter((current) => current.isNA);\n        return item.isNA\n          ? [...localNormalList, ...localNaList, item]\n          : [...localNormalList, item, ...localNaList];\n      });\n    }\n  };\n\n  const oniOSModal = (selectedItem: TransformedOption) => {\n    let actionSheetOptions = [\n      'Cancel',\n      ...normalList.map((_, index) => (index + 1).toString()),\n    ];\n    if (allowNAForRanking) {\n      actionSheetOptions = [...actionSheetOptions, 'N/A'];\n    }\n    ActionSheetIOS.showActionSheetWithOptions(\n      {\n        title: 'Select your rating',\n        options: actionSheetOptions,\n        tintColor: isDarkMode ? Colors.white : Colors.black,\n        cancelButtonIndex: 0,\n        // @ts-ignore\n        userInterfaceStyle: colorScheme,\n      },\n      (buttonIndex) => {\n        if (buttonIndex === 0) {\n          return;\n        } else if (\n          allowNAForRanking &&\n          buttonIndex === actionSheetOptions.length - 1\n        ) {\n          onNAPressHandler(selectedItem);\n        } else {\n          setList((prev) => {\n            // swap\n            const currentIndex = prev.findIndex(\n              ({ option }) => option === selectedItem.option\n            );\n            const index = buttonIndex - 1;\n            const newList = swapElements(prev, index, currentIndex);\n            return newList;\n          });\n        }\n      }\n    );\n  };\n\n  const modalContainerStyle = [\n    styles.modalContainer,\n    { backgroundColor: isDarkMode ? 'rgb(55,55,55)' : Colors.white },\n  ];\n  const modalItemTitleStyle = [\n    styles.modalItemTitle,\n    { color: isDarkMode ? Colors.white : Colors.black },\n  ];\n  const modalItemStyle = [\n    styles.modalItem,\n    { borderTopColor: isDarkMode ? 'rgba(17,17,17,0.5)' : Colors.divider },\n  ];\n\n  const rankingModal = (\n    <Modal transparent animationType=\"fade\" visible={visible}>\n      <View style={styles.modalBG}>\n        <TouchableOpacity\n          style={styles.modalDismissArea}\n          onPress={() => setVisible(false)}\n        >\n          <View style={modalContainerStyle}>\n            <View style={styles.modalTitleContainer}>\n              <Text style={styles.modalTitle}>{'Select your rating'}</Text>\n            </View>\n\n            {normalList.map((_value, index) => {\n              return (\n                <View key={index}>\n                  <TouchableOpacity\n                    style={modalItemStyle}\n                    onPress={() => {\n                      if (selectedOption) {\n                        setList((prev) => {\n                          // swap\n                          const currentIndex = prev.findIndex(\n                            ({ option }) => option === selectedOption.option\n                          );\n                          const newList = swapElements(\n                            prev,\n                            index,\n                            currentIndex\n                          );\n                          return newList;\n                        });\n                        setVisible(false);\n                      }\n                    }}\n                  >\n                    <Text style={modalItemTitleStyle}>{`${index + 1}`}</Text>\n                  </TouchableOpacity>\n                </View>\n              );\n            })}\n            {allowNAForRanking ? (\n              <TouchableOpacity\n                style={modalItemStyle}\n                onPress={() => {\n                  if (selectedOption) {\n                    onNAPressHandler(selectedOption);\n                  }\n                  setVisible(false);\n                }}\n              >\n                <Text style={modalItemTitleStyle}>{'N/A'}</Text>\n              </TouchableOpacity>\n            ) : null}\n            <TouchableOpacity\n              style={modalItemStyle}\n              onPress={() => setVisible(false)}\n            >\n              <Text style={modalItemTitleStyle}>{'Cancel'}</Text>\n            </TouchableOpacity>\n          </View>\n        </TouchableOpacity>\n      </View>\n    </Modal>\n  );\n\n  const renderItem: DraggableListRenderItem = ({\n    item,\n    index,\n  }: RenderItemProps) => {\n    return (\n      <RankingItem\n        item={item}\n        index={index}\n        allowNAForRanking={allowNAForRanking}\n        themeColor={themeColor}\n        onRankPress={onRankPressHandler}\n        onNAPress={onNAPressHandler}\n      />\n    );\n  };\n\n  const onDragEndHandler = (newList: TransformedOption[]) => {\n    setList((prev) => {\n      const result = newList.map((newData) => {\n        const { isNA } = prev.filter(\n          ({ option }) => option === newData.option\n        )[0];\n        return { ...newData, isNA };\n      });\n\n      return result;\n    });\n  };\n\n  return (\n    <>\n      <ScrollView style={styles.container} scrollEnabled={false}>\n        <ClassicMandatoryTitle\n          style={styles.mandatoryTitle}\n          forgot={forgot}\n          mandatoryErrorMessage={mandatoryErrorMessage}\n          question={question}\n        />\n        <View style={styles.questionContainer}>\n          <DraggableList\n            data={list}\n            renderItem={renderItem}\n            onDragStart={() => {}}\n            onDragGrant={() => {\n              onDragGrant && onDragGrant();\n            }}\n            onDragRelease={onDragEnd}\n            onDragEnd={onDragEndHandler}\n          />\n        </View>\n      </ScrollView>\n      {rankingModal}\n    </>\n  );\n};\n\nexport default React.memo(ClassicRankingQuestion);\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: 45,\n  },\n  renderItem: {\n    ...GlobalStyle.row,\n    height: 48,\n    marginVertical: 4,\n    borderWidth: 1,\n    borderRadius: 12,\n    borderColor: Colors.rankingBorder,\n    paddingHorizontal: 12,\n    backgroundColor: Colors.rankingBG,\n  },\n  rankTitle: {\n    flex: 1,\n    marginHorizontal: 12,\n    fontSize: 15,\n  },\n  rankingContainer: {\n    ...GlobalStyle.row,\n    width: 50,\n    height: 24,\n    borderRadius: 4,\n    backgroundColor: Colors.white,\n    borderStyle: 'solid',\n    borderWidth: 1,\n    borderColor: Colors.rankingContainerBorder,\n    paddingHorizontal: 7,\n    justifyContent: 'space-between',\n  },\n  rankText: {\n    fontSize: 15,\n  },\n  divider: {\n    height: 24,\n    width: 1,\n    backgroundColor: Colors.rankingBorder,\n    marginHorizontal: 16,\n  },\n  naText: {\n    fontSize: 13,\n    marginLeft: 8,\n  },\n  unCheckBox: {\n    width: 18,\n    height: 18,\n    borderStyle: 'solid',\n    borderWidth: 1,\n    borderColor: '#a8a8a8',\n    borderRadius: 4,\n    margin: 3,\n  },\n  modalBG: {\n    ...GlobalStyle.row,\n    justifyContent: 'center',\n    flex: 1,\n    backgroundColor: 'rgba(0, 0, 0, 0.24)',\n  },\n  modalContainer: {\n    width: 268,\n    borderRadius: 14,\n    shadowColor: 'rgba(0, 0, 0, 0.16)',\n    shadowOffset: {\n      width: 0,\n      height: 12,\n    },\n    shadowRadius: 16,\n    shadowOpacity: 1,\n  },\n  modalItem: {\n    paddingVertical: 10,\n    borderTopColor: Colors.divider,\n    borderTopWidth: 1,\n  },\n  modalTitleContainer: {\n    paddingVertical: 10,\n    minHeight: 50,\n    justifyContent: 'center',\n  },\n  modalTitle: {\n    textAlign: 'center',\n    fontSize: 13,\n    fontWeight: '600',\n    color: Colors.dateGrey,\n  },\n  modalItemTitle: {\n    textAlign: 'center',\n    fontSize: 20,\n    fontWeight: '500',\n    color: Colors.black,\n  },\n  scrollViewContainer: {\n    width: '100%',\n    justifyContent: 'center',\n  },\n  mandatoryTitle: {\n    marginBottom: 12,\n  },\n  questionContainer: {\n    width: '100%',\n  },\n  modalDismissArea: {\n    width: '100%',\n    height: '100%',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n"]}