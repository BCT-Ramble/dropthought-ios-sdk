{"version":3,"sources":["ClassicRankingQuestion.tsx"],"names":["swapElements","array","index1","index2","newArray","splice","ClassicRankingQuestion","question","onFeedback","feedback","forgot","fontColor","colorScheme","dimensionWidthType","isPhone","DimensionWidthType","phone","isiOS","Platform","OS","questionId","options","allowNAForRanking","visible","setVisible","selectedOption","setSelectedOption","originListRef","map","value","index","option","isNA","list","setList","current","listForRankingQuestion","length","feedbackToOptions","feedbackToNAOptions","forEach","newOption","answers","result","type","onNAPress","item","prev","withoutItem","filter","normalList","naList","renderItem","drag","dragIconStyle","opacity","hitSlop","top","bottom","left","right","naComponent","styles","divider","GlobalStyle","row","require","unCheckBox","naText","color","rankText","renderItemStyle","COLOR_SCHEMES","dark","backgroundColor","Colors","rankingBGDark","borderColor","rankingBorderDark","rankingContainerStyle","rankTitle","rankingContainer","oniOSModal","selected","ActionSheetIOS","showActionSheetWithOptions","_","toString","cancelButtonIndex","userInterfaceStyle","buttonIndex","currentIndex","findIndex","newList","rankingModal","modalBG","modalDismissArea","modalContainer","modalTitle","_value","modalDivider","scrollViewContainer","questionContainer","mandatoryTitle","React","memo","StyleSheet","create","height","marginVertical","borderWidth","borderRadius","rankingBorder","paddingHorizontal","rankingBG","flex","marginHorizontal","fontSize","width","white","borderStyle","rankingContainerBorder","justifyContent","marginLeft","shadowColor","shadowOffset","shadowRadius","shadowOpacity","textAlign","fontWeight","marginBottom","alignItems"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport {\n  View,\n  Image,\n  TouchableOpacity,\n  Text,\n  StyleSheet,\n  Modal,\n  ScrollView,\n  FlatList,\n  ActionSheetIOS,\n  Platform,\n} from 'react-native';\nimport {\n  DimensionWidthType,\n  useDimensionWidthType,\n} from '../hooks/useWindowDimensions';\nimport ClassicMandatoryTitle from './ClassicMandatoryTitle';\nimport GlobalStyle, { Colors } from '../styles';\nimport type {\n  Feedback as OriginFeedback,\n  Question as OriginQuestion,\n} from '../data';\n// import DraggableFlatList from 'react-native-draggable-flatlist';\nimport { useTheme, COLOR_SCHEMES } from '../contexts/theme';\n\ntype TransformedOption = {\n  option: string;\n  index: number;\n  isNA: boolean;\n};\n\ntype RenderItemParams = {\n  item: TransformedOption;\n  index?: number;\n  drag: () => void;\n  isActive: boolean;\n};\n\ninterface SwapElements {\n  (\n    array: TransformedOption[],\n    index1: number,\n    index2: number\n  ): TransformedOption[];\n}\n\nconst swapElements: SwapElements = (array, index1, index2) => {\n  let newArray = [...array];\n  newArray[index1] = newArray.splice(index2, 1, newArray[index1])[0];\n  return newArray;\n};\n\ntype Feedback = OriginFeedback & {\n  listForRankingQuestion: TransformedOption[];\n};\n\ntype Question = OriginQuestion & {\n  options: string[];\n  scale: string;\n  allowNAForRanking: boolean;\n};\n\ntype Props = {\n  question: Question;\n  onFeedback: (feedback: Feedback) => void;\n  feedback: Feedback;\n  forgot: boolean;\n};\n\nconst ClassicRankingQuestion = ({\n  question,\n  onFeedback,\n  feedback,\n  forgot,\n}: Props) => {\n  const { fontColor, colorScheme } = useTheme();\n  const dimensionWidthType = useDimensionWidthType();\n  const isPhone = dimensionWidthType === DimensionWidthType.phone;\n  const isiOS = Platform.OS === 'ios';\n  const { questionId, options = [], allowNAForRanking = true } = question;\n\n  const [visible, setVisible] = useState(false);\n  const [selectedOption, setSelectedOption] = useState<TransformedOption>();\n  const originListRef = useRef<TransformedOption[]>(\n    options.map((value, index) => {\n      return {\n        option: value,\n        index,\n        isNA: false,\n      };\n    })\n  );\n  const [list, setList] = useState(originListRef.current);\n  useEffect(() => {\n    const { listForRankingQuestion } = feedback ?? {};\n    if (\n      feedback &&\n      listForRankingQuestion &&\n      listForRankingQuestion.length > 0\n    ) {\n      let feedbackToOptions: TransformedOption[] = [];\n      let feedbackToNAOptions: TransformedOption[] = [];\n      listForRankingQuestion.forEach(({ option, isNA }, index) => {\n        const newOption = { option, index, isNA };\n        if (isNA) {\n          feedbackToNAOptions = [...feedbackToNAOptions, newOption];\n        } else {\n          feedbackToOptions = [...feedbackToOptions, newOption];\n        }\n      });\n      setList(listForRankingQuestion);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(() => {\n    /** @type {(number|string)[]} */\n    const answers = list.map(({ isNA, index }) => {\n      return isNA ? 'N/A' : index;\n    });\n    const result = {\n      questionId,\n      answers,\n      type: 'ranking',\n      listForRankingQuestion: list, // for render usage after page navigations\n    };\n    // @ts-ignore\n    onFeedback(result);\n  }, [list, onFeedback, questionId]);\n  const onNAPress = (item: TransformedOption) => {\n    if (list) {\n      item.isNA = !item.isNA;\n      setList((prev) => {\n        const withoutItem = prev.filter(\n          (current) => current.option !== item.option\n        );\n        const normalList = withoutItem.filter((current) => !current.isNA);\n        const naList = withoutItem.filter((current) => current.isNA);\n        return item.isNA\n          ? [...normalList, ...naList, item]\n          : [...normalList, item, ...naList];\n      });\n    }\n  };\n  const renderItem = ({ item, index = 0, drag }: RenderItemParams) => {\n    const dragIconStyle = { opacity: item.isNA ? 0.3 : 1 };\n\n    const hitSlop = { top: 12, bottom: 12, left: 5, right: 5 };\n\n    const naComponent = allowNAForRanking ? (\n      <>\n        <View style={styles.divider} />\n        <TouchableOpacity\n          style={GlobalStyle.row}\n          hitSlop={hitSlop}\n          onPress={() => onNAPress(item)}\n        >\n          {item.isNA ? (\n            <Image source={require('../assets/icCheckBox24Px.png')} />\n          ) : (\n            <View style={styles.unCheckBox} />\n          )}\n          <Text style={[styles.naText, { color: fontColor }]}>{'N/A'}</Text>\n        </TouchableOpacity>\n      </>\n    ) : null;\n\n    const rankText = item.isNA ? 'N/A' : `${index + 1}`;\n    const renderItemStyle =\n      colorScheme === COLOR_SCHEMES.dark\n        ? {\n            backgroundColor: Colors.rankingBGDark,\n            borderColor: Colors.rankingBorderDark,\n          }\n        : null;\n    const rankingContainerStyle =\n      colorScheme === COLOR_SCHEMES.dark\n        ? {\n            backgroundColor: Colors.rankingBGDark,\n            borderColor: Colors.rankingBorderDark,\n          }\n        : null;\n    return (\n      <TouchableOpacity\n        style={[styles.renderItem, renderItemStyle]}\n        disabled={item.isNA}\n        delayLongPress={200}\n        onLongPress={drag}\n      >\n        <Image style={dragIconStyle} source={require('../assets/icDrag.png')} />\n        <Text\n          style={[styles.rankTitle, { color: fontColor }]}\n          numberOfLines={2}\n        >\n          {item.option}\n        </Text>\n        <TouchableOpacity\n          style={[styles.rankingContainer, rankingContainerStyle]}\n          hitSlop={hitSlop}\n          disabled={item.isNA}\n          onPress={() => {\n            setSelectedOption(item);\n            if (isPhone && isiOS) {\n              oniOSModal(item);\n            } else {\n              setVisible(true);\n            }\n          }}\n        >\n          <Text style={[styles.rankText, { color: fontColor }]}>\n            {rankText}\n          </Text>\n          <Image\n            // @ts-ignore\n            source={require('../assets/ic-expand-more-24-px.png')}\n          />\n        </TouchableOpacity>\n        {naComponent}\n      </TouchableOpacity>\n    );\n  };\n  const normalList = list.filter((current) => !current.isNA);\n  const naList = list.filter((current) => current.isNA);\n\n  const oniOSModal = (selected: TransformedOption) =>\n    ActionSheetIOS.showActionSheetWithOptions(\n      {\n        options: [\n          'Cancel',\n          ...normalList.map((_, index) => (index + 1).toString()),\n          'N/A',\n        ],\n        cancelButtonIndex: 0,\n        // @ts-ignore\n        userInterfaceStyle: colorScheme,\n      },\n      (buttonIndex) => {\n        if (buttonIndex === 0) return;\n        const index = buttonIndex - 1;\n        if (normalList.length + 1 === buttonIndex && selected) {\n          onNAPress(selected);\n        } else if (selected) {\n          setList((prev) => {\n            // insert at index\n            // let newList = prev.filter(\n            //     ({option}) =>\n            //         option !==\n            //         selected?.option,\n            // )\n            // newList = [\n            //     ...newList.slice(\n            //         0,\n            //         index,\n            //     ),\n            //     selected,\n            //     ...newList.slice(index),\n            // ]\n\n            // swap\n            const currentIndex = prev.findIndex(\n              ({ option }) => option === selected.option\n            );\n            const newList = swapElements(prev, index, currentIndex);\n            return newList;\n          });\n        }\n      }\n    );\n  const rankingModal = (\n    <Modal transparent animationType=\"fade\" visible={visible}>\n      <View style={styles.modalBG}>\n        <TouchableOpacity\n          style={styles.modalDismissArea}\n          onPress={() => setVisible(false)}\n        >\n          <View style={styles.modalContainer}>\n            <Text style={styles.modalTitle}>{'Select your rating'}</Text>\n            {normalList.map((_value, index) => {\n              return (\n                <View key={index}>\n                  <View style={styles.modalDivider} />\n                  <TouchableOpacity\n                    onPress={() => {\n                      if (selectedOption) {\n                        setList((prev) => {\n                          // insert at index\n                          // let newList = prev.filter(\n                          //     ({option}) =>\n                          //         option !==\n                          //         selectedOption?.option,\n                          // )\n                          // newList = [\n                          //     ...newList.slice(\n                          //         0,\n                          //         index,\n                          //     ),\n                          //     selectedOption,\n                          //     ...newList.slice(index),\n                          // ]\n\n                          // swap\n                          const currentIndex = prev.findIndex(\n                            ({ option }) => option === selectedOption.option\n                          );\n                          const newList = swapElements(\n                            prev,\n                            index,\n                            currentIndex\n                          );\n                          return newList;\n                        });\n                        setVisible(false);\n                      }\n                    }}\n                  >\n                    <Text style={styles.modalTitle}>{`${index + 1}`}</Text>\n                  </TouchableOpacity>\n                </View>\n              );\n            })}\n            {allowNAForRanking ? (\n              <TouchableOpacity\n                onPress={() => {\n                  if (selectedOption) {\n                    onNAPress(selectedOption);\n                  }\n                  setVisible(false);\n                }}\n              >\n                <View style={styles.modalDivider} />\n                <Text style={styles.modalTitle}>{'N/A'}</Text>\n              </TouchableOpacity>\n            ) : null}\n          </View>\n        </TouchableOpacity>\n      </View>\n    </Modal>\n  );\n  return (\n    <>\n      <View>\n        {/* keep this outer ScrollView to prevent error => VirtualizedLists should never be nested inside plain ScrollViews\n            with the same orientation because it can break windowing and other functionality - use another VirtualizedList-backed\n            container instead */}\n        <ScrollView\n          horizontal={true}\n          scrollEnabled={false}\n          contentContainerStyle={styles.scrollViewContainer}\n        >\n          <View\n            style={[GlobalStyle.questionContainer, styles.questionContainer]}\n          >\n            <ClassicMandatoryTitle\n              forgot={forgot}\n              question={question}\n              style={styles.mandatoryTitle}\n            />\n            {/* Do not add the margin or padding in to the DraggableFlatList, it could may list item component get wrong location */}\n            {/* <DraggableFlatList\n              scrollEnabled={false}\n              data={normalList}\n              onDragEnd={({ data }) => {\n                setList([...data, ...naList]);\n              }}\n              // @ts-ignore\n              renderItem={renderItem}\n              keyExtractor={(item) => item.index.toString()}\n            /> */}\n            <FlatList\n              scrollEnabled={false}\n              data={naList}\n              // @ts-ignore\n              renderItem={renderItem}\n              keyExtractor={(_, index) => index.toString()}\n            />\n          </View>\n        </ScrollView>\n      </View>\n      {rankingModal}\n    </>\n  );\n};\n\nexport default React.memo(ClassicRankingQuestion);\n\nconst styles = StyleSheet.create({\n  renderItem: {\n    ...GlobalStyle.row,\n    height: 48,\n    marginVertical: 4,\n    borderWidth: 1,\n    borderRadius: 12,\n    borderColor: Colors.rankingBorder,\n    paddingHorizontal: 12,\n    backgroundColor: Colors.rankingBG,\n  },\n  rankTitle: {\n    flex: 1,\n    marginHorizontal: 12,\n    fontSize: 15,\n  },\n  rankingContainer: {\n    ...GlobalStyle.row,\n    width: 50,\n    height: 24,\n    borderRadius: 4,\n    backgroundColor: Colors.white,\n    borderStyle: 'solid',\n    borderWidth: 1,\n    borderColor: Colors.rankingContainerBorder,\n    paddingHorizontal: 7,\n    justifyContent: 'space-between',\n  },\n  rankText: {\n    fontSize: 15,\n  },\n  divider: {\n    height: 24,\n    width: 1,\n    backgroundColor: Colors.rankingBorder,\n    marginHorizontal: 16,\n  },\n  naText: {\n    fontSize: 13,\n    marginLeft: 8,\n  },\n  unCheckBox: {\n    width: 16,\n    height: 16,\n    borderStyle: 'solid',\n    borderWidth: 1,\n    borderColor: '#a8a8a8',\n  },\n  modalBG: {\n    ...GlobalStyle.row,\n    justifyContent: 'center',\n    flex: 1,\n    backgroundColor: 'rgba(0, 0, 0, 0.24)',\n  },\n  modalContainer: {\n    width: 268,\n    backgroundColor: Colors.white,\n    borderRadius: 14,\n    shadowColor: 'rgba(0, 0, 0, 0.16)',\n    shadowOffset: {\n      width: 0,\n      height: 12,\n    },\n    shadowRadius: 16,\n    shadowOpacity: 1,\n  },\n  modalTitle: {\n    height: 24,\n    marginVertical: 10,\n    textAlign: 'center',\n    fontSize: 17,\n    fontWeight: '500',\n  },\n  modalDivider: {\n    backgroundColor: Colors.divider,\n    height: 1,\n  },\n  scrollViewContainer: {\n    width: '100%',\n    justifyContent: 'center',\n  },\n  mandatoryTitle: {\n    marginBottom: 12,\n  },\n  questionContainer: {\n    width: '100%',\n  },\n  modalDismissArea: {\n    width: '100%',\n    height: '100%',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n"]}