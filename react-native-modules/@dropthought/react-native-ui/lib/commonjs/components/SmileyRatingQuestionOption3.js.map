{"version":3,"sources":["SmileyRatingQuestionOption3.tsx"],"names":["SmileyRatingQuestionOption3","survey","pageIndex","question","forgot","onClose","onPrevPage","onNextPage","onFeedback","backgroundColor","themeBackgroundColor","fontColor","colorScheme","windowHeight","Dimensions","get","height","questionId","scale","options","selectedIndex","setSelectedIndex","React","useState","score","setScore","isLoop","setIsLoop","loopLotties","setLoopLotties","transformLotties","setTransformLotties","scoreContainerOpacity","useRef","Animated","Value","current","scoreOpacity","descriptionYAxis","totalScore","Number","renderScore","backgroundColorList","panResponder","PanResponder","create","onStartShouldSetPanResponder","onMoveShouldSetPanResponder","onPanResponderRelease","_","dy","direction","Math","sign","isActionActive","abs","updateScore","scaleLogicList","scaleLogic","scaledIndex","loopList","map","value","scaleKey","String","loopFaceTable","transformList","index","array","fromScale","toScale","key","transformTable","useCallback","number","isAtCoverScreen","newScore","setValue","sequence","timing","toValue","duration","useNativeDriver","start","answers","type","dimensionWidthType","isPhone","DimensionWidthType","phone","styles","phoneStyles","tabletStyles","animationBackgroundColor","Colors","white","COLOR_SCHEMES","dark","lottieContainerStyle","commonStyles","lottieContainer","opacity","scoreSelectedStyle","scoreSelected","color","descStyle","desc","transform","translateY","scoreTotalStyle","scoreTotal","containerStyle","container","hintContainerStyle","hintContainer","flexEnd","hintTextStyle","hintText","lottieContent","isCancel","scoreContainer","scoreText","panHandlers","contentContainer","i18n","t","surveyProperty","hexCode","pageOrder","length","StyleSheet","flex","flexDirection","justifyContent","alignItems","paddingBottom","width","paddingHorizontal","fontSize","fontWeight","textAlign","marginBottom","smileyRatingScoreGray"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport {\n  View,\n  StyleSheet,\n  Text,\n  Animated,\n  Dimensions,\n  PanResponder,\n} from 'react-native';\nimport { Colors } from '../styles';\nimport i18n from '../translation';\nimport {\n  DimensionWidthType,\n  useDimensionWidthType,\n} from '../hooks/useWindowDimensions';\nimport type {\n  Feedback as OriginFeedback,\n  Question as OriginQuestion,\n  Survey,\n} from '../data';\nimport LottieView from 'lottie-react-native';\nimport SurveyFooter from '../containers/SurveyFooter';\nimport SurveyHeader from '../containers/SurveyHeader';\nimport MandatoryTitle from './MandatoryTitle';\nimport { useTheme, COLOR_SCHEMES } from '../contexts/theme';\nimport {\n  scaleLogic,\n  option3LoopFaceTable as loopFaceTable,\n  option3TransformTable as transformTable,\n} from '../utils/data';\n\ntype Feedback = OriginFeedback & {\n  answers: string[];\n};\n\ntype Question = OriginQuestion & {\n  options: string[];\n  scale: string;\n};\n\ntype Props = {\n  survey: Survey;\n  pageIndex: number;\n  question: Question;\n  forgot: boolean;\n  onClose: () => void;\n  onPrevPage: () => void;\n  onNextPage: () => void;\n  onFeedback: ({\n    questionId,\n    answers,\n    type,\n  }: {\n    questionId: string;\n    answers: number[];\n    type: string;\n  }) => void;\n  feedback: Feedback;\n};\n\nconst SmileyRatingQuestionOption3 = ({\n  survey,\n  pageIndex,\n  question,\n  forgot,\n  onClose,\n  onPrevPage,\n  onNextPage,\n  onFeedback,\n}: Props) => {\n  const {\n    backgroundColor: themeBackgroundColor,\n    fontColor,\n    colorScheme,\n  } = useTheme();\n\n  const windowHeight = Dimensions.get('window').height;\n  const { questionId, scale, options } = question;\n\n  const [selectedIndex, setSelectedIndex] = React.useState<number>(0);\n  const [score, setScore] = React.useState<number>(-1);\n  const [isLoop, setIsLoop] = React.useState<boolean>(true);\n  const [loopLotties, setLoopLotties] = React.useState<string[]>([]);\n  const [transformLotties, setTransformLotties] = React.useState<string[]>([]);\n\n  const scoreContainerOpacity = React.useRef(new Animated.Value(0)).current;\n  const scoreOpacity = React.useRef(new Animated.Value(0)).current;\n  const descriptionYAxis = React.useRef(\n    new Animated.Value(windowHeight / 2 - 246 + 37)\n  ).current;\n  // 37 -> one text line height\n  // 246 -> Padding Vertical 123\n\n  const totalScore = Number(scale);\n  const renderScore = score + 1;\n\n  const backgroundColorList = [\n    '#fef6f6', //red\n    '#fff9f9', //red\n    '#f3f9fe', //blue\n    '#f5fdfb', //green\n    '#f3fcfa', //green\n  ];\n\n  const panResponder = PanResponder.create({\n    onStartShouldSetPanResponder: () => true,\n    onMoveShouldSetPanResponder: () => true,\n    onPanResponderRelease: (_, { dy }) => {\n      const direction = Math.sign(dy);\n      const isActionActive = Math.abs(dy) > 100;\n      if (isActionActive) {\n        // Add isLoop to avoid when animation transform and user tap the LottieView.\n        if (direction === 1 && score > 0 && isLoop) {\n          updateScore(-1);\n        } else if (direction !== 1 && renderScore < totalScore) {\n          updateScore(1);\n        }\n      }\n    },\n  });\n  // choose which scale logic we want to use.\n  const scaleLogicList = scaleLogic[scale];\n  const scaledIndex = scaleLogicList[selectedIndex];\n\n  useEffect(() => {\n    const loopList = scaleLogicList.map((value) => {\n      const scaleKey = String(value + 1);\n      return loopFaceTable.get(scaleKey);\n    });\n\n    const transformList = scaleLogicList.map((value, index, array) => {\n      if (index === 0) return '';\n      const fromScale = String(array[index - 1] + 1);\n      const toScale = String(value + 1);\n      const key = `${fromScale}-${toScale}`;\n      return transformTable.get(key);\n    });\n\n    setLoopLotties(loopList);\n    setTransformLotties(transformList);\n  }, [scaleLogicList]);\n\n  const updateScore = React.useCallback(\n    (number) => {\n      const isAtCoverScreen = score === -1;\n      const newScore = score + number;\n      setScore(newScore);\n      if (number > 0 && !isAtCoverScreen) {\n        setIsLoop(false);\n      }\n      if (!isAtCoverScreen) {\n        setSelectedIndex(newScore);\n      }\n\n      //animtaion--\n      scoreOpacity.setValue(0);\n      if (isAtCoverScreen) {\n        Animated.sequence([\n          Animated.timing(descriptionYAxis, {\n            toValue: 0,\n            duration: 500,\n            useNativeDriver: true,\n          }),\n          Animated.timing(scoreContainerOpacity, {\n            toValue: 1,\n            duration: 500,\n            useNativeDriver: true,\n          }),\n          Animated.timing(scoreOpacity, {\n            toValue: 1,\n            duration: 500,\n            useNativeDriver: true,\n          }),\n        ]).start();\n      } else {\n        Animated.timing(scoreOpacity, {\n          toValue: 1,\n          duration: 500,\n          useNativeDriver: true,\n        }).start();\n      }\n      //animtaion--\n\n      onFeedback({\n        questionId,\n        answers: [newScore],\n        type: 'rating',\n      });\n    },\n    [\n      score,\n      scoreOpacity,\n      onFeedback,\n      questionId,\n      descriptionYAxis,\n      scoreContainerOpacity,\n    ]\n  );\n\n  const dimensionWidthType = useDimensionWidthType();\n  const isPhone = dimensionWidthType === DimensionWidthType.phone;\n  const styles = isPhone ? phoneStyles : tabletStyles;\n\n  const animationBackgroundColor =\n    score >= 0 ? backgroundColorList[scaledIndex] : Colors.white;\n\n  const backgroundColor =\n    colorScheme === COLOR_SCHEMES.dark\n      ? themeBackgroundColor\n      : animationBackgroundColor;\n\n  const lottieContainerStyle = [\n    commonStyles.lottieContainer,\n    { opacity: scoreContainerOpacity },\n  ];\n\n  const scoreSelectedStyle = [\n    styles.scoreSelected,\n    { opacity: scoreOpacity, color: fontColor },\n  ];\n\n  const descStyle = [\n    styles.desc,\n    {\n      transform: [{ translateY: descriptionYAxis }],\n      opacity: scoreContainerOpacity,\n      color: fontColor,\n    },\n  ];\n\n  const scoreTotalStyle = [\n    styles.scoreTotal,\n    { opacity: scoreContainerOpacity },\n  ];\n\n  const containerStyle = [\n    commonStyles.container,\n    {\n      backgroundColor,\n    },\n  ];\n\n  const hintContainerStyle =\n    score >= 0\n      ? [commonStyles.hintContainer, commonStyles.flexEnd]\n      : [commonStyles.hintContainer];\n\n  const hintTextStyle = [commonStyles.hintText, { color: fontColor }];\n\n  const lottieContainer = (\n    <Animated.View style={lottieContainerStyle}>\n      <LottieView\n        source={\n          isLoop ? loopLotties[selectedIndex] : transformLotties[selectedIndex]\n        }\n        autoPlay\n        style={commonStyles.lottieContent}\n        loop={isLoop}\n        onAnimationFinish={(isCancel) => {\n          if (!isCancel) setIsLoop(true);\n        }}\n        speed={0.5}\n      />\n    </Animated.View>\n  );\n\n  const scoreContainer = (\n    <View style={commonStyles.scoreContainer}>\n      <View style={commonStyles.scoreContainer}>\n        <View style={commonStyles.scoreText}>\n          <Animated.Text style={scoreSelectedStyle}>\n            {renderScore}\n          </Animated.Text>\n          <Animated.Text style={scoreTotalStyle}>\n            {'/' + totalScore}\n          </Animated.Text>\n        </View>\n        <Animated.Text style={descStyle}>\n          {options[selectedIndex]}\n        </Animated.Text>\n      </View>\n    </View>\n  );\n\n  return (\n    <>\n      <SurveyHeader\n        survey={survey}\n        pageIndex={pageIndex}\n        backgroundColor={backgroundColor}\n        onClose={onClose}\n      />\n      <View style={containerStyle} {...panResponder.panHandlers}>\n        <View style={commonStyles.contentContainer}>\n          <MandatoryTitle question={question} forgot={forgot} />\n          {score >= 0 ? (\n            <>\n              {lottieContainer}\n              {scoreContainer}\n            </>\n          ) : null}\n          <View style={hintContainerStyle}>\n            <Text style={hintTextStyle}>\n              {i18n.t('option3HintDescription:title')}\n            </Text>\n          </View>\n        </View>\n      </View>\n      <SurveyFooter\n        surveyColor={survey.surveyProperty.hexCode}\n        isFirstPage={pageIndex === 0}\n        isLastPage={pageIndex === survey.pageOrder.length - 1}\n        onPrevPage={onPrevPage}\n        onNextPage={onNextPage}\n        backgroundColor={backgroundColor}\n      />\n    </>\n  );\n};\n\nexport default SmileyRatingQuestionOption3;\n\nconst commonStyles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: Colors.white,\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingBottom: 28,\n  },\n  contentContainer: {\n    flex: 1,\n    width: '100%',\n    paddingHorizontal: 42,\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  hintContainer: {\n    flex: 1,\n    justifyContent: 'center',\n  },\n  flexEnd: {\n    justifyContent: 'flex-end',\n  },\n  hintText: {\n    fontSize: 16,\n    fontWeight: '500',\n    textAlign: 'center',\n    marginBottom: 6,\n  },\n  lottieContainer: {\n    flex: 3,\n    width: '100%',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  lottieContent: {\n    width: '60%',\n  },\n  scoreContainer: {\n    flex: 1,\n    width: '100%',\n    flexDirection: 'column',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n  },\n  scoreText: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'baseline',\n  },\n});\n\nconst phoneStyles = StyleSheet.create({\n  desc: {\n    fontSize: 20,\n    fontWeight: '600',\n    textAlign: 'center',\n  },\n  scoreSelected: {\n    fontSize: 74,\n    textAlign: 'center',\n    alignItems: 'baseline',\n  },\n  scoreTotal: {\n    fontSize: 55,\n    color: Colors.smileyRatingScoreGray,\n  },\n});\n\nconst tabletStyles = StyleSheet.create({\n  desc: {\n    fontSize: 20,\n    fontWeight: '600',\n    textAlign: 'center',\n  },\n  scoreSelected: {\n    fontSize: 74,\n    textAlign: 'center',\n    alignItems: 'baseline',\n  },\n  scoreTotal: {\n    fontSize: 55,\n    color: Colors.smileyRatingScoreGray,\n  },\n});\n"]}