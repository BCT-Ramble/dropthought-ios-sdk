{"version":3,"sources":["BottomSheet.tsx"],"names":["NavigationComponent","backgroundColor","disableOnConfirm","onCancel","onConfirm","containerStyle","navStyles","container","buttonRightStyle","buttonContainer","opacity","content","buttonLeft","labelContaienr","label","buttonRight","require","BottomSheet","coverScreen","title","onBackdropPress","componentInside","componentHeight","navigationComponent","visible","children","bottom","heightValueRef","React","useRef","animatedHeightRef","Animated","Value","modalVisible","setModalVisible","useState","useEffect","toValue","titleBarHeight","current","timing","duration","easing","Easing","linear","useNativeDriver","start","contentNavStyle","styles","height","paddingBottom","contentView","divider","backdrop","GlobalStyle","flex1","StyleSheet","create","width","position","borderTopLeftRadius","borderTopRightRadius","overflow","Colors","transparent","marginTop","marginBottom","borderRadius","alignSelf","navigationArea","white","flexDirection","justifyContent","marginLeft","marginRight","subTitle","backdropBG","flex","titleContainer","paddingTop","alignItems","textAlign","paddingVertical","fontSize","color","resizeMode","fontWeight"],"mappings":"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","sourcesContent":["import React, { ReactChild } from 'react';\nimport {\n  StyleSheet,\n  View,\n  TouchableOpacity,\n  Image,\n  TouchableWithoutFeedback,\n  Animated,\n  Easing,\n  Modal,\n  Text,\n} from 'react-native';\n//@ts-ignore\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport { useTheme } from '../contexts/theme';\n\nimport { Colors, GlobalStyle } from '../styles';\n\ninterface Props {\n  coverScreen: boolean;\n  title?: string;\n  onBackdropPress?: () => void;\n  componentInside?: ReactChild;\n  componentHeight: number;\n  visible: boolean;\n  navigationComponent?: ReactChild;\n}\n\ninterface NavProps {\n  backgroundColor?: string;\n  disableOnConfirm: boolean;\n  onCancel: () => void;\n  onConfirm: () => void;\n}\n\nexport const NavigationComponent: React.FC<NavProps> = ({\n  backgroundColor = '#ffffff',\n  disableOnConfirm = true,\n  onCancel,\n  onConfirm,\n}) => {\n  const containerStyle = [\n    navStyles.container,\n    { backgroundColor: backgroundColor },\n  ];\n  const buttonRightStyle = [\n    navStyles.buttonContainer,\n    { opacity: disableOnConfirm ? 0.3 : 1 },\n  ];\n  return (\n    <View style={containerStyle}>\n      <View style={navStyles.content}>\n        <TouchableOpacity style={navStyles.buttonContainer} onPress={onCancel}>\n          <Text style={navStyles.buttonLeft}>Cancel</Text>\n        </TouchableOpacity>\n        <View style={navStyles.labelContaienr}>\n          <Text style={navStyles.label}>Select your option</Text>\n        </View>\n        <TouchableOpacity\n          disabled={disableOnConfirm}\n          style={buttonRightStyle}\n          onPress={onConfirm}\n        >\n          <Image\n            style={navStyles.buttonRight}\n            source={require('../assets/ic-check.png')}\n          />\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n};\n\nconst BottomSheet: React.FC<Props> = ({\n  coverScreen = false,\n  title,\n  onBackdropPress,\n  componentInside,\n  componentHeight,\n  navigationComponent,\n  visible,\n  children,\n}) => {\n  const { bottom } = useSafeAreaInsets();\n  const { backgroundColor } = useTheme();\n\n  const heightValueRef = React.useRef(0);\n  const animatedHeightRef = React.useRef(new Animated.Value(0));\n  const [modalVisible, setModalVisible] = React.useState(false);\n\n  React.useEffect(() => {\n    let toValue = 0;\n    if (visible) {\n      let titleBarHeight = 48;\n      toValue = titleBarHeight + componentHeight + bottom;\n      if (coverScreen) setModalVisible(true);\n    }\n\n    if (heightValueRef.current === toValue) {\n      // when current height value is the same as toValue, skip animation\n      return;\n    }\n    heightValueRef.current = toValue;\n    Animated.timing(animatedHeightRef.current, {\n      toValue: toValue,\n      duration: 300,\n      easing: Easing.linear,\n      useNativeDriver: false,\n    }).start(() => {\n      if (!visible && coverScreen) setModalVisible(false);\n    });\n  }, [visible, componentHeight, bottom, coverScreen]);\n\n  const contentNavStyle = [\n    styles.container,\n    { height: animatedHeightRef.current },\n    { paddingBottom: bottom, backgroundColor: backgroundColor },\n  ];\n\n  const contentView = (\n    <Animated.View style={contentNavStyle} testID={`${title}-bottom-sheet`}>\n      {navigationComponent ? (\n        navigationComponent\n      ) : (\n        <View style={styles.divider} />\n      )}\n      {children || componentInside}\n    </Animated.View>\n  );\n\n  if (!coverScreen) {\n    return contentView;\n  }\n\n  return (\n    <Modal\n      onRequestClose={onBackdropPress}\n      animationType=\"none\"\n      transparent\n      //@ts-ignore\n      statusBarTranslucent\n      visible={modalVisible}\n    >\n      <View style={styles.backdrop}>\n        <TouchableWithoutFeedback onPress={onBackdropPress}>\n          <View style={GlobalStyle.flex1} />\n        </TouchableWithoutFeedback>\n        {contentView}\n      </View>\n    </Modal>\n  );\n};\n\nexport default BottomSheet;\n\nconst styles = StyleSheet.create({\n  container: {\n    bottom: 0,\n    height: 368,\n    width: '100%',\n    position: 'absolute',\n    borderTopLeftRadius: 8,\n    borderTopRightRadius: 8,\n    overflow: 'hidden',\n  },\n  divider: {\n    height: 2,\n    width: 150,\n    // TODO: later set this back to Colors.secondaryDivider, when applying gesture\n    backgroundColor: Colors.transparent,\n    marginTop: 8,\n    marginBottom: 20,\n    borderRadius: 5,\n    alignSelf: 'center',\n  },\n  navigationArea: {\n    backgroundColor: Colors.white,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginLeft: 0,\n    marginRight: 0,\n    marginTop: 0,\n    marginBottom: 15,\n  },\n  title: {},\n  subTitle: {\n    marginTop: 4,\n  },\n  backdrop: {\n    backgroundColor: Colors.backdropBG,\n    flex: 1,\n  },\n  titleContainer: {\n    flex: 1,\n  },\n});\n\nconst navStyles = StyleSheet.create({\n  container: {\n    paddingTop: 30,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  buttonContainer: {\n    width: 84,\n    height: 48,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  buttonLeft: {\n    textAlign: 'center',\n    paddingVertical: 12,\n    fontSize: 17,\n    color: Colors.white,\n  },\n  buttonRight: {\n    width: 18,\n    height: 14,\n    resizeMode: 'contain',\n  },\n  label: {\n    fontSize: 17,\n    fontWeight: '700',\n    color: Colors.white,\n    textAlign: 'center',\n  },\n  labelContaienr: {\n    flex: 1,\n  },\n});\n"]}