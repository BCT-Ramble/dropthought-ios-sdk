{"version":3,"sources":["RankingQuestion.tsx"],"names":["swapElements","array","index1","index2","newArray","splice","RankingQuestion","question","onFeedback","forgot","feedback","themeColor","fontColor","colorScheme","isDarkMode","COLOR_SCHEMES","dark","dimensionWidthType","isIPhone","Platform","OS","DimensionWidthType","phone","questionId","options","allowNAForRanking","originListRef","map","option","index","isNA","list","setList","current","visible","setVisible","selectedOption","setSelectedOption","listForRankingQuestion","length","feedbackToOptions","feedbackToNAOptions","forEach","newOption","answers","result","type","onNAPress","item","prev","withoutItem","filter","normalList","naList","renderItem","drag","dragIconStyle","tintColor","undefined","opacity","hitSlop","top","bottom","left","right","checkBoxStyle","naComponent","styles","divider","GlobalStyle","row","require","unCheckBox","borderColor","Colors","rankingCheckBoxBorder","naText","color","rankText","renderItemStyle","backgroundColor","rankingBGDark","rankingBorderDark","rankingContainerStyle","rankingContainerBgDark","rankingContainerBorderDark","rankTitle","rankingContainer","oniOSModal","selectedItem","actionSheetOptions","_","toString","ActionSheetIOS","showActionSheetWithOptions","title","white","black","cancelButtonIndex","userInterfaceStyle","buttonIndex","currentIndex","findIndex","newList","rankingModal","modalBG","modalDismissArea","modalContainer","modalTitle","_value","modalDivider","container","mandatoryTitle","scrollViewContainer","questionContainer","data","React","memo","StyleSheet","create","flex","paddingHorizontal","fontSize","fontWeight","lineHeight","textAlign","marginBottom","minHeight","marginVertical","borderWidth","borderRadius","rankingBorder","rankingBG","paddingVertical","marginHorizontal","width","height","borderStyle","rankingContainerBorder","justifyContent","marginLeft","margin","shadowColor","shadowOffset","shadowRadius","shadowOpacity","alignItems"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport {\n  StyleSheet,\n  Platform,\n  ScrollView,\n  View,\n  Image,\n  TouchableOpacity,\n  Text,\n  Modal,\n  FlatList,\n  ActionSheetIOS,\n} from 'react-native';\nimport {\n  DimensionWidthType,\n  useDimensionWidthType,\n} from '../hooks/useWindowDimensions';\nimport MandatoryTitle from './MandatoryTitle';\nimport GlobalStyle, { Colors, addOpacityToColor } from '../styles';\nimport type {\n  Feedback as OriginFeedback,\n  Question as OriginQuestion,\n} from '../data';\nimport DraggableFlatList from 'react-native-draggable-flatlist';\nimport { useTheme, COLOR_SCHEMES } from '../contexts/theme';\n\ntype TransformedOption = {\n  option: string;\n  index: number;\n  isNA: boolean;\n};\n\ntype RenderItemParams = {\n  item: TransformedOption;\n  index?: number;\n  drag: () => void;\n  isActive: boolean;\n};\n\ninterface SwapElements {\n  (\n    array: TransformedOption[],\n    index1: number,\n    index2: number\n  ): TransformedOption[];\n}\n\ntype Feedback = OriginFeedback & {\n  listForRankingQuestion: TransformedOption[];\n};\n\ntype Question = OriginQuestion & {\n  options: string[];\n  scale: string;\n  allowNAForRanking: boolean;\n};\n\nconst swapElements: SwapElements = (array, index1, index2) => {\n  let newArray = [...array];\n  newArray[index1] = newArray.splice(index2, 1, newArray[index1])[0];\n  return newArray;\n};\n\ntype Props = {\n  question: Question;\n  onFeedback: (feedback: Feedback) => void;\n  forgot: boolean;\n  feedback: Feedback;\n  themeColor: string;\n};\n\nconst RankingQuestion = ({\n  question,\n  onFeedback,\n  forgot,\n  feedback,\n  themeColor,\n}: Props) => {\n  const { fontColor, colorScheme } = useTheme();\n  const isDarkMode = colorScheme === COLOR_SCHEMES.dark;\n\n  const dimensionWidthType = useDimensionWidthType();\n  const isIPhone =\n    Platform.OS === 'ios' && dimensionWidthType === DimensionWidthType.phone;\n\n  const { questionId, options = [], allowNAForRanking = true } = question;\n\n  const originListRef = useRef<TransformedOption[]>(\n    options.map((option, index) => {\n      return { option, index, isNA: false };\n    })\n  );\n\n  const [list, setList] = useState(originListRef.current);\n  const [visible, setVisible] = useState(false);\n  const [selectedOption, setSelectedOption] = useState<TransformedOption>();\n\n  useEffect(() => {\n    const { listForRankingQuestion } = feedback ?? {};\n    if (\n      feedback &&\n      listForRankingQuestion &&\n      listForRankingQuestion.length > 0\n    ) {\n      let feedbackToOptions: TransformedOption[] = [];\n      let feedbackToNAOptions: TransformedOption[] = [];\n      listForRankingQuestion.forEach(({ option, isNA }, index) => {\n        const newOption = { option, index, isNA };\n        if (isNA) {\n          feedbackToNAOptions = [...feedbackToNAOptions, newOption];\n        } else {\n          feedbackToOptions = [...feedbackToOptions, newOption];\n        }\n      });\n      setList(listForRankingQuestion);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    const answers: (number | string)[] = list.map(({ isNA, index }) => {\n      return isNA ? 'N/A' : index;\n    });\n    const result = {\n      questionId,\n      answers,\n      type: 'ranking',\n      listForRankingQuestion: list, // for render usage after page navigations\n    };\n    // @ts-ignore\n    onFeedback(result);\n  }, [list, onFeedback, questionId]);\n\n  const onNAPress = (item: TransformedOption) => {\n    if (list) {\n      item.isNA = !item.isNA;\n      setList((prev) => {\n        const withoutItem = prev.filter(({ option }) => option !== item.option);\n        const normalList = withoutItem.filter((current) => !current.isNA);\n        const naList = withoutItem.filter((current) => current.isNA);\n        return item.isNA\n          ? [...normalList, ...naList, item]\n          : [...normalList, item, ...naList];\n      });\n    }\n  };\n\n  const renderItem = ({ item, index = 0, drag }: RenderItemParams) => {\n    const { option, isNA } = item;\n    const dragIconStyle = {\n      tintColor: isDarkMode ? undefined : themeColor,\n      opacity: isNA ? 0.3 : 1,\n    };\n\n    const hitSlop = { top: 12, bottom: 12, left: 5, right: 5 };\n    const checkBoxStyle = { tintColor: themeColor };\n    const naComponent = allowNAForRanking ? (\n      <>\n        <View style={styles.divider} />\n        <TouchableOpacity\n          style={GlobalStyle.row}\n          hitSlop={hitSlop}\n          onPress={() => onNAPress(item)}\n        >\n          {isNA ? (\n            <Image\n              style={checkBoxStyle}\n              source={require('../assets/icCheckBoxRounded.png')}\n            />\n          ) : (\n            <View\n              style={[\n                styles.unCheckBox,\n                {\n                  borderColor: isDarkMode\n                    ? Colors.rankingCheckBoxBorder\n                    : themeColor ?? Colors.rankingCheckBoxBorder,\n                },\n              ]}\n            />\n          )}\n          <Text style={[styles.naText, { color: fontColor }]}>{'N/A'}</Text>\n        </TouchableOpacity>\n      </>\n    ) : null;\n\n    const rankText = isNA ? 'NA' : `${index + 1}`;\n    const renderItemStyle = isDarkMode\n      ? {\n          backgroundColor: Colors.rankingBGDark,\n          borderColor: Colors.rankingBorderDark,\n        }\n      : {\n          backgroundColor: themeColor\n            ? addOpacityToColor(themeColor, 0.05)\n            : Colors.rankingBGDark,\n          borderColor: themeColor\n            ? addOpacityToColor(themeColor, 0.1)\n            : Colors.rankingBorderDark,\n        };\n    const rankingContainerStyle = isDarkMode\n      ? {\n          backgroundColor: Colors.rankingContainerBgDark,\n          borderColor: Colors.rankingContainerBorderDark,\n        }\n      : {\n          borderColor: themeColor\n            ? addOpacityToColor(themeColor, 0.3)\n            : Colors.rankingBorderDark,\n        };\n    return (\n      <TouchableOpacity\n        style={[styles.renderItem, renderItemStyle]}\n        disabled={isNA}\n        delayLongPress={200}\n        onLongPress={drag}\n      >\n        <Image style={dragIconStyle} source={require('../assets/icDrag.png')} />\n        <Text\n          style={[styles.rankTitle, { color: fontColor }]}\n          numberOfLines={2}\n        >\n          {option}\n        </Text>\n        <TouchableOpacity\n          style={[styles.rankingContainer, rankingContainerStyle]}\n          hitSlop={hitSlop}\n          disabled={isNA}\n          onPress={() => {\n            setSelectedOption(item);\n            isIPhone ? oniOSModal(item) : setVisible(true);\n          }}\n        >\n          <Text style={[styles.rankText, { color: fontColor }]}>\n            {rankText}\n          </Text>\n          <Image source={require('../assets/ic-expand-more-24-px.png')} />\n        </TouchableOpacity>\n        {naComponent}\n      </TouchableOpacity>\n    );\n  };\n  const normalList = list.filter((current) => !current.isNA);\n  const naList = list.filter((current) => current.isNA);\n\n  const oniOSModal = (selectedItem: TransformedOption) => {\n    const actionSheetOptions = [\n      'Cancel',\n      ...normalList.map((_, index) => (index + 1).toString()),\n      'N/A',\n    ];\n    ActionSheetIOS.showActionSheetWithOptions(\n      {\n        title: 'Select your rating',\n        options: actionSheetOptions,\n        tintColor: isDarkMode ? Colors.white : Colors.black,\n        cancelButtonIndex: 0,\n        // @ts-ignore\n        userInterfaceStyle: colorScheme,\n      },\n      (buttonIndex) => {\n        if (buttonIndex === 0) {\n          return;\n        } else if (buttonIndex === actionSheetOptions.length - 1) {\n          onNAPress(selectedItem);\n        } else {\n          setList((prev) => {\n            // swap\n            const currentIndex = prev.findIndex(\n              ({ option }) => option === selectedItem.option\n            );\n            const index = buttonIndex - 1;\n            const newList = swapElements(prev, index, currentIndex);\n            return newList;\n          });\n        }\n      }\n    );\n  };\n\n  const rankingModal = (\n    <Modal transparent animationType=\"fade\" visible={visible}>\n      <View style={styles.modalBG}>\n        <TouchableOpacity\n          style={styles.modalDismissArea}\n          onPress={() => setVisible(false)}\n        >\n          <View style={styles.modalContainer}>\n            <Text style={styles.modalTitle}>{'Select your rating'}</Text>\n            {normalList.map((_value, index) => {\n              return (\n                <View key={index}>\n                  <View style={styles.modalDivider} />\n                  <TouchableOpacity\n                    onPress={() => {\n                      if (selectedOption) {\n                        setList((prev) => {\n                          // swap\n                          const currentIndex = prev.findIndex(\n                            ({ option }) => option === selectedOption.option\n                          );\n                          const newList = swapElements(\n                            prev,\n                            index,\n                            currentIndex\n                          );\n                          return newList;\n                        });\n                        setVisible(false);\n                      }\n                    }}\n                  >\n                    <Text style={styles.modalTitle}>{`${index + 1}`}</Text>\n                  </TouchableOpacity>\n                </View>\n              );\n            })}\n            {allowNAForRanking ? (\n              <TouchableOpacity\n                onPress={() => {\n                  if (selectedOption) {\n                    onNAPress(selectedOption);\n                  }\n                  setVisible(false);\n                }}\n              >\n                <View style={styles.modalDivider} />\n                <Text style={styles.modalTitle}>{'N/A'}</Text>\n              </TouchableOpacity>\n            ) : null}\n          </View>\n        </TouchableOpacity>\n      </View>\n    </Modal>\n  );\n\n  return (\n    <>\n      <ScrollView style={styles.container}>\n        <MandatoryTitle\n          style={styles.mandatoryTitle}\n          forgot={forgot}\n          question={question}\n        />\n        <ScrollView\n          horizontal={true}\n          scrollEnabled={false}\n          contentContainerStyle={styles.scrollViewContainer}\n        >\n          {/* keep above ScrollView to prevent error => \"VirtualizedLists \n              should never be nested inside plain ScrollViews with the same \n              orientation because it can break windowing and other functionality\n              - use another VirtualizedList-backed container instead\" */}\n          <View style={styles.questionContainer}>\n            {/* Do not add the margin or padding in to the DraggableFlatList, \n                it could may list item component get wrong location */}\n            <DraggableFlatList\n              scrollEnabled={false}\n              data={normalList}\n              onDragEnd={({ data }) => setList([...data, ...naList])}\n              // @ts-ignore\n              renderItem={renderItem}\n              keyExtractor={(item) => item.index.toString()}\n            />\n            <FlatList\n              scrollEnabled={false}\n              data={naList}\n              // @ts-ignore\n              renderItem={renderItem}\n              keyExtractor={(_, index) => index.toString()}\n            />\n          </View>\n        </ScrollView>\n      </ScrollView>\n      {rankingModal}\n    </>\n  );\n};\n\nexport default React.memo(RankingQuestion);\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingHorizontal: 43,\n  },\n  title: {\n    fontSize: 26,\n    fontWeight: '600',\n    lineHeight: 32,\n    textAlign: 'center',\n    marginBottom: 54,\n  },\n  renderItem: {\n    ...GlobalStyle.row,\n    minHeight: 48,\n    marginVertical: 4,\n    borderWidth: 1,\n    borderRadius: 12,\n    borderColor: Colors.rankingBorder,\n    paddingHorizontal: 12,\n    backgroundColor: Colors.rankingBG,\n    paddingVertical: 15,\n  },\n  rankTitle: {\n    flex: 1,\n    marginHorizontal: 12,\n    fontSize: 15,\n  },\n  rankingContainer: {\n    ...GlobalStyle.row,\n    width: 53,\n    height: 24,\n    borderRadius: 4,\n    backgroundColor: Colors.white,\n    borderStyle: 'solid',\n    borderWidth: 1,\n    borderColor: Colors.rankingContainerBorder,\n    paddingHorizontal: 7,\n    justifyContent: 'space-between',\n  },\n  rankText: {\n    fontSize: 15,\n  },\n  divider: {\n    height: 24,\n    width: 1,\n    backgroundColor: Colors.rankingBorder,\n    marginHorizontal: 16,\n  },\n  naText: {\n    fontSize: 13,\n    marginLeft: 8,\n  },\n  unCheckBox: {\n    width: 18,\n    height: 18,\n    borderStyle: 'solid',\n    borderWidth: 1,\n    borderColor: '#a8a8a8',\n    borderRadius: 4,\n    margin: 3,\n  },\n  modalBG: {\n    ...GlobalStyle.row,\n    justifyContent: 'center',\n    flex: 1,\n    backgroundColor: 'rgba(0, 0, 0, 0.24)',\n  },\n  modalContainer: {\n    width: 268,\n    backgroundColor: Colors.white,\n    borderRadius: 14,\n    shadowColor: 'rgba(0, 0, 0, 0.16)',\n    shadowOffset: {\n      width: 0,\n      height: 12,\n    },\n    shadowRadius: 16,\n    shadowOpacity: 1,\n  },\n  modalTitle: {\n    height: 24,\n    marginVertical: 10,\n    textAlign: 'center',\n    fontSize: 17,\n    fontWeight: '500',\n    color: Colors.white,\n  },\n  modalDivider: {\n    backgroundColor: Colors.divider,\n    height: 1,\n  },\n  scrollViewContainer: {\n    width: '100%',\n    justifyContent: 'center',\n  },\n  mandatoryTitle: {\n    marginHorizontal: -23,\n  },\n  questionContainer: {\n    width: '100%',\n    height: '100%',\n  },\n  modalDismissArea: {\n    width: '100%',\n    height: '100%',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n"]}