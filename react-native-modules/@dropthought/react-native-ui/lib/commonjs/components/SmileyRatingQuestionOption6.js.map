{"version":3,"sources":["SmileyRatingQuestionOption6.tsx"],"names":["animations","require","lotties","Array","fill","SmileyRatingQuestionOption6","survey","pageIndex","question","forgot","onClose","onPrevPage","onNextPage","onFeedback","selectedIndex","setSelectedIndex","React","useState","score","setScore","questionId","scale","options","scaleLogicList","scaleLogic","descriptions","map","_","index","forEach","value","length","scaleIndex","colorScheme","customFontColor","totalScore","renderScore","isAtCoverScreen","updateScore","useCallback","currentIndex","answers","type","dimensionWidthType","isPhone","DimensionWidthType","phone","styles","phoneStyles","tabletStyles","textColor","undefined","Colors","white","scoreSelectedStyle","scoreSelected","color","descStyle","desc","scoreTotalStyle","scoreTotal","hintTextStyle","commonStyles","hintText","backgroundImage","imageStyle","opacity","COLOR_SCHEMES","light","lottieContainer","scoreContainer","scoreText","imageBackground","container","contentContainer","hintContainer","i18n","t","surveyProperty","hexCode","pageOrder","picker","StyleSheet","create","backgroundColor","black","height","overflow","image","flex","paddingHorizontal","flexDirection","alignItems","width","justifyContent","fontSize","fontWeight","textAlign","marginBottom","smileyRatingScoreGray"],"mappings":"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","sourcesContent":["import {\n  View,\n  StyleSheet,\n  Text,\n  ImageBackground,\n  ImageStyle,\n} from 'react-native';\nimport React, { useEffect } from 'react';\nimport { Colors } from '../styles';\nimport i18n from '../translation';\nimport {\n  DimensionWidthType,\n  useDimensionWidthType,\n} from '../hooks/useWindowDimensions';\nimport type { Question as OriginQuestion, Survey } from '../data';\nimport { scaleLogic } from '../utils/data';\nimport LottieView from 'lottie-react-native';\nimport SurveyFooter from '../containers/SurveyFooter';\nimport SurveyHeader from '../containers/SurveyHeader';\nimport RotaryPhonePicker from './RotaryPhonePicker';\nimport { useTheme, COLOR_SCHEMES } from '../contexts/theme';\nimport MandatoryTitle from './MandatoryTitle';\n\ntype Question = OriginQuestion & {\n  options: string[];\n  scale: string;\n};\n\nconst animations = [\n  require('../assets/animations/smiley_option6/option6_1.json'),\n  require('../assets/animations/smiley_option6/option6_2.json'),\n  require('../assets/animations/smiley_option6/option6_3.json'),\n  require('../assets/animations/smiley_option6/option6_4.json'),\n  require('../assets/animations/smiley_option6/option6_5.json'),\n];\n\n// We through the null text string to keep blank to make it as same as the rotary dial design.\nconst lotties = new Array(8).fill('');\n\ntype Props = {\n  survey: Survey;\n  pageIndex: number;\n  forgot: boolean;\n  onClose: () => void;\n  question: Question;\n  onPrevPage: () => void;\n  onNextPage: () => void;\n  onFeedback: ({\n    questionId,\n    answers,\n    type,\n  }: {\n    questionId: string;\n    answers: number[];\n    type: string;\n  }) => void;\n};\n\nconst SmileyRatingQuestionOption6 = ({\n  survey,\n  pageIndex,\n  question,\n  forgot,\n  onClose,\n  onPrevPage,\n  onNextPage,\n  onFeedback,\n}: Props) => {\n  const [selectedIndex, setSelectedIndex] = React.useState<number>(0);\n  const [score, setScore] = React.useState<number>(-1);\n  const { questionId, scale, options } = question;\n  const scaleLogicList = scaleLogic[scale];\n  const descriptions = scaleLogicList.map((_, index) => options[index]);\n  useEffect(() => {\n    lotties.forEach((value, index) => {\n      if (index === 0 || index > scaleLogicList.length) {\n        lotties[index] = value;\n      } else {\n        const scaleIndex = scaleLogicList[index - 1];\n        lotties[index] = animations[scaleIndex];\n      }\n    });\n  }, [scaleLogicList]);\n\n  const { colorScheme, customFontColor } = useTheme();\n\n  const totalScore = scale;\n  const renderScore = score;\n  const isAtCoverScreen = score === -1;\n\n  const updateScore = React.useCallback(\n    (currentIndex) => {\n      setScore(currentIndex);\n      setSelectedIndex(currentIndex);\n      onFeedback({\n        questionId,\n        answers: [currentIndex - 1],\n        type: 'rating',\n      });\n    },\n    [onFeedback, questionId]\n  );\n\n  const dimensionWidthType = useDimensionWidthType();\n  const isPhone = dimensionWidthType === DimensionWidthType.phone;\n  const styles = isPhone ? phoneStyles : tabletStyles;\n  const textColor =\n    customFontColor === undefined || customFontColor === ''\n      ? Colors.white\n      : customFontColor;\n  const scoreSelectedStyle = [styles.scoreSelected, { color: textColor }];\n  const descStyle = [styles.desc, { color: textColor }];\n  const scoreTotalStyle = [styles.scoreTotal, { color: textColor }];\n  const hintTextStyle = [commonStyles.hintText, { color: textColor }];\n  const backgroundImage = require('../assets/bg-option6.png');\n  const imageStyle: ImageStyle = {\n    opacity: colorScheme === COLOR_SCHEMES.light ? 0.6 : 0,\n  };\n\n  const lottieContainer = (\n    <View style={commonStyles.lottieContainer}>\n      <LottieView source={lotties[selectedIndex]} autoPlay />\n    </View>\n  );\n  const scoreContainer = (\n    <View style={commonStyles.scoreContainer}>\n      <View style={commonStyles.scoreContainer}>\n        <View style={commonStyles.scoreText}>\n          <Text style={scoreSelectedStyle}>{renderScore}</Text>\n          <Text style={scoreTotalStyle}>{'/' + totalScore}</Text>\n        </View>\n        <Text style={descStyle}>{descriptions[selectedIndex - 1]}</Text>\n      </View>\n    </View>\n  );\n  return (\n    <ImageBackground\n      source={backgroundImage}\n      resizeMethod=\"auto\"\n      style={commonStyles.imageBackground}\n      imageStyle={imageStyle}\n    >\n      <SurveyHeader\n        survey={survey}\n        pageIndex={pageIndex}\n        question={question}\n        onClose={onClose}\n      />\n      <View style={commonStyles.container}>\n        <MandatoryTitle question={question} forgot={forgot} />\n        <View style={commonStyles.contentContainer}>\n          {isAtCoverScreen ? (\n            <View style={commonStyles.hintContainer}>\n              <Text style={hintTextStyle}>\n                {i18n.t('option6HintDescription:title')}\n              </Text>\n            </View>\n          ) : (\n            <>\n              {lottieContainer}\n              {scoreContainer}\n            </>\n          )}\n        </View>\n      </View>\n      <SurveyFooter\n        surveyColor={survey.surveyProperty.hexCode}\n        isFirstPage={pageIndex === 0}\n        isLastPage={pageIndex === survey.pageOrder.length - 1}\n        onPrevPage={onPrevPage}\n        onNextPage={onNextPage}\n      />\n      <View style={commonStyles.picker}>\n        <RotaryPhonePicker\n          list={lotties}\n          scale={scale}\n          selectedIndex={selectedIndex}\n          updateScore={updateScore}\n        />\n      </View>\n    </ImageBackground>\n  );\n};\n\nexport default SmileyRatingQuestionOption6;\n\nconst commonStyles = StyleSheet.create({\n  imageBackground: {\n    backgroundColor: Colors.black,\n    height: '100%',\n    overflow: 'hidden',\n  },\n  image: {\n    opacity: 0.6,\n  },\n  container: {\n    flex: 1,\n    paddingHorizontal: 42,\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  contentContainer: {\n    width: '100%',\n    flex: 5,\n    alignItems: 'center',\n  },\n  hintContainer: {\n    flex: 1,\n    justifyContent: 'center',\n  },\n  hintText: {\n    fontSize: 16,\n    fontWeight: '500',\n    textAlign: 'center',\n    marginBottom: 6,\n  },\n  lottieContainer: {\n    flex: 1,\n    width: 80,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  scoreContainer: {\n    flex: 2,\n    width: '100%',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  scoreText: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'baseline',\n  },\n  picker: {\n    alignItems: 'center',\n    height: 120,\n  },\n});\n\nconst phoneStyles = StyleSheet.create({\n  desc: {\n    fontSize: 20,\n    fontWeight: '600',\n    textAlign: 'center',\n  },\n  scoreSelected: {\n    fontSize: 90,\n    textAlign: 'center',\n    alignItems: 'baseline',\n  },\n  scoreTotal: {\n    fontSize: 70,\n    color: Colors.smileyRatingScoreGray,\n  },\n});\n\nconst tabletStyles = StyleSheet.create({\n  desc: {\n    fontSize: 20,\n    fontWeight: '600',\n    textAlign: 'center',\n  },\n  scoreSelected: {\n    fontSize: 74,\n    textAlign: 'center',\n    alignItems: 'baseline',\n  },\n  scoreTotal: {\n    fontSize: 55,\n    color: Colors.smileyRatingScoreGray,\n  },\n});\n"]}