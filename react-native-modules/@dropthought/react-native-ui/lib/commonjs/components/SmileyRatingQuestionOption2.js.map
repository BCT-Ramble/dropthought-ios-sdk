{"version":3,"sources":["SmileyRatingQuestionOption2.tsx"],"names":["lotties","require","SmileyRatingQuestionOption2","survey","pageIndex","question","forgot","onClose","onPrevPage","onNextPage","onFeedback","feedback","answered","answers","answeredValue","parseInt","hexCode","backgroundColor","themeBackgroundColor","fontColor","colorScheme","questionId","options","scale","selectedIndex","setSelectedIndex","React","useState","hasSelected","scaleLogicList","scaleLogic","lottieSelectedIndex","setSelectedAndFeedback","useCallback","index","type","handleSelected","descriptions","map","_","dummyDescroptions","dimensionWidthType","isPhone","DimensionWidthType","phone","styles","phoneStyles","tabletStyles","selectedBackgroundColor","COLOR_SCHEMES","dark","Option1BackgroundColorDark","Option1BackgroundColor","unselectedBackgroundColor","questionContainerStyle","commonStyles","container","hintTextStyle","hintText","color","itemTextStyle","infoContainer","mandatoryErrorMessage","centerContainer","wheelContainer","selectedIndicatorStyle","Platform","OS","undefined","i18n","t","submitSurvey","pageOrder","length","memo","StyleSheet","create","flex","paddingHorizontal","height","alignItems","justifyContent","marginBottom","width","opacity","fontSize","paddingVertical","textAlign","fontWeight"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { View, StyleSheet, Text, Platform } from 'react-native';\nimport { Option1BackgroundColor, Option1BackgroundColorDark } from '../styles';\nimport i18n from '../translation';\nimport {\n  DimensionWidthType,\n  useDimensionWidthType,\n} from '../hooks/useWindowDimensions';\nimport type {\n  Feedback as OriginFeedback,\n  Question as OriginQuestion,\n  Survey,\n} from '../data';\nimport { scaleLogic } from '../utils/data';\nimport WheelPicker from './WheelPicker';\nimport SurveyFooter from '../containers/SurveyFooter';\nimport SurveyHeader from '../containers/SurveyHeader';\nimport LottieView from 'lottie-react-native';\nimport { useTheme, COLOR_SCHEMES } from '../contexts/theme';\nimport MandatoryTitle from './MandatoryTitle';\nimport { isNil } from 'ramda';\n\nconst lotties = [\n  require('../assets/animations/smiley_option1/option1_1.json'),\n  require('../assets/animations/smiley_option1/option1_2.json'),\n  require('../assets/animations/smiley_option1/option1_3.json'),\n  require('../assets/animations/smiley_option1/option1_4.json'),\n  require('../assets/animations/smiley_option1/option1_5.json'),\n];\n\ntype Feedback = OriginFeedback & {\n  answers: string[];\n};\n\ntype Question = OriginQuestion & {\n  options: string[];\n  scale: string;\n};\n\ntype Props = {\n  survey: Survey;\n  question: Question;\n  pageIndex: number;\n  forgot: boolean;\n  onClose: () => void;\n  onPrevPage: () => void;\n  onNextPage: () => void;\n  onFeedback: ({\n    questionId,\n    answers,\n    type,\n  }: {\n    questionId: string;\n    answers: number[];\n    type: string;\n  }) => void;\n  feedback: Feedback;\n};\n\nconst SmileyRatingQuestionOption2 = ({\n  survey,\n  pageIndex,\n  question,\n  forgot,\n  onClose,\n  onPrevPage,\n  onNextPage,\n  onFeedback,\n  feedback,\n}: Props) => {\n  const answered =\n    feedback &&\n    feedback.answers &&\n    !isNil(feedback.answers[0]) &&\n    typeof feedback.answers[0] === 'number';\n  const answeredValue: number = answered\n    ? parseInt(feedback.answers[0], 10)\n    : 0;\n\n  const {\n    hexCode,\n    backgroundColor: themeBackgroundColor,\n    fontColor,\n    colorScheme,\n  } = useTheme();\n  const { questionId, options, scale } = question;\n  const [selectedIndex, setSelectedIndex] = React.useState<number>(\n    answered ? answeredValue : -1\n  );\n  const hasSelected = selectedIndex > -1;\n\n  const scaleLogicList = scaleLogic[scale];\n  const lottieSelectedIndex = scaleLogicList[selectedIndex];\n\n  const setSelectedAndFeedback = React.useCallback(\n    (index) => {\n      onFeedback({\n        questionId,\n        answers: [index],\n        type: 'rating',\n      });\n    },\n    [onFeedback, questionId]\n  );\n\n  const handleSelected = (index: number) => {\n    setSelectedIndex(index);\n    setSelectedAndFeedback(index);\n  };\n\n  const descriptions = scaleLogicList.map((_, index) => options[index]);\n  const dummyDescroptions = ['Select', ...descriptions];\n\n  const dimensionWidthType = useDimensionWidthType();\n  const isPhone = dimensionWidthType === DimensionWidthType.phone;\n  const styles = isPhone ? phoneStyles : tabletStyles;\n\n  const selectedBackgroundColor =\n    colorScheme === COLOR_SCHEMES.dark\n      ? Option1BackgroundColorDark\n      : Option1BackgroundColor;\n\n  const unselectedBackgroundColor = themeBackgroundColor;\n\n  const backgroundColor = hasSelected\n    ? selectedBackgroundColor[lottieSelectedIndex]\n    : unselectedBackgroundColor;\n\n  const questionContainerStyle = [commonStyles.container, { backgroundColor }];\n\n  const hintTextStyle = [styles.hintText, { color: fontColor }];\n  const itemTextStyle = [commonStyles.itemTextStyle, { color: fontColor }];\n\n  return (\n    <>\n      <SurveyHeader\n        survey={survey}\n        pageIndex={pageIndex}\n        backgroundColor={backgroundColor}\n        onClose={onClose}\n      />\n      <View style={questionContainerStyle}>\n        {feedback && hasSelected ? (\n          <View style={commonStyles.infoContainer}>\n            <MandatoryTitle\n              question={question}\n              mandatoryErrorMessage={survey.mandatoryErrorMessage}\n              forgot={forgot}\n            />\n            <View style={commonStyles.centerContainer}>\n              <LottieView\n                source={lotties[lottieSelectedIndex]}\n                autoPlay\n                speed={0.5}\n              />\n            </View>\n            <View style={commonStyles.wheelContainer}>\n              <WheelPicker\n                selectedIndex={selectedIndex}\n                options={descriptions}\n                onChange={(index) => {\n                  if (index > -1) handleSelected(index);\n                }}\n                itemTextStyle={itemTextStyle}\n                selectedIndicatorStyle={commonStyles.selectedIndicatorStyle}\n                key={'WheelPicker-descriptions'}\n                itemHeight={Platform.OS === 'android' ? 60 : undefined}\n              />\n            </View>\n          </View>\n        ) : (\n          <View style={commonStyles.infoContainer}>\n            <MandatoryTitle\n              question={question}\n              mandatoryErrorMessage={survey.mandatoryErrorMessage}\n              forgot={forgot}\n            />\n            <View style={commonStyles.centerContainer}>\n              <Text style={hintTextStyle}>\n                {i18n.t('option1HintDescription:title')}\n              </Text>\n            </View>\n            <View style={commonStyles.wheelContainer}>\n              <WheelPicker\n                selectedIndex={0}\n                options={dummyDescroptions}\n                onChange={(index) => {\n                  handleSelected(index - 1);\n                }}\n                itemTextStyle={itemTextStyle}\n                selectedIndicatorStyle={commonStyles.selectedIndicatorStyle}\n                key={'WheelPicker-dummyDescroptions'}\n                itemHeight={Platform.OS === 'android' ? 60 : undefined}\n              />\n            </View>\n          </View>\n        )}\n      </View>\n      <SurveyFooter\n        submitSurvey={survey.submitSurvey}\n        surveyColor={hexCode}\n        isFirstPage={pageIndex === 0}\n        isLastPage={pageIndex === survey.pageOrder.length - 1}\n        onPrevPage={onPrevPage}\n        onNextPage={onNextPage}\n        backgroundColor={backgroundColor}\n      />\n    </>\n  );\n};\n\nexport default React.memo(SmileyRatingQuestionOption2);\n\nconst commonStyles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingHorizontal: 32,\n    height: '100%',\n  },\n  infoContainer: {\n    height: '100%',\n  },\n  centerContainer: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginBottom: 12,\n    width: '100%',\n  },\n  wheelContainer: {\n    flex: 1,\n  },\n  selectedIndicatorStyle: {\n    opacity: 0,\n  },\n  itemTextStyle: {\n    fontSize: 24,\n    paddingVertical: 9,\n    width: '100%',\n    textAlign: 'center',\n  },\n});\n\nconst phoneStyles = StyleSheet.create({\n  hintText: {\n    fontSize: 16,\n    fontWeight: '500',\n  },\n});\n\nconst tabletStyles = StyleSheet.create({\n  hintText: {\n    fontSize: 16,\n    fontWeight: '500',\n  },\n});\n"]}