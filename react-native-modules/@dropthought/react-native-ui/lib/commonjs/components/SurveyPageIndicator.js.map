{"version":3,"sources":["SurveyPageIndicator.tsx"],"names":["SurveyPageIndicator","props","survey","pageIndex","rtl","hexCode","colorScheme","isDarkMode","COLOR_SCHEMES","dark","themeColor","dimensionWidthType","dimensionStyles","DimensionWidthType","phone","phoneStyles","tabletStyles","currentPage","pages","textStyle","styles","title","darkModeTitle","paddingBottom","i18n","language","container","backgroundColor","darkModeContainer","pageTitle","StyleSheet","create","justifyContent","height","width","fontWeight","color","Colors","white","alignItems","paddingHorizontal","fontSize","letterSpacing","progressBarText","React","memo"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AAIA;;AAEA;;AACA;;;;;;;;AAQA,MAAMA,mBAAmB,GAAIC,KAAD,IAAkB;AAC5C,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,SAAS,GAAG,CAAtB;AAAyBC,IAAAA;AAAzB,MAAiCH,KAAvC;AACA,QAAM;AAAEI,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAA2B,sBAAjC;AACA,QAAMC,UAAU,GAAGD,WAAW,KAAKE,qBAAcC,IAAjD;AACA,QAAMC,UAAU,GAAGL,OAAnB;AAEA,QAAMM,kBAAkB,GAAG,iDAA3B;AACA,QAAMC,eAAe,GACnBD,kBAAkB,KAAKE,wCAAmBC,KAA1C,GACIC,WADJ,GAEIC,YAHN;AAKA,QAAMC,WAAW,GAAGf,MAAM,CAACgB,KAAP,CAAaf,SAAb,CAApB;AAEA,QAAMgB,SAAS,GAAG,CAChBC,MAAM,CAACC,KADS,EAEhBT,eAAe,CAACS,KAFA,EAGhBd,UAAU,IAAIa,MAAM,CAACE,aAHL,EAIhB;AAAEC,IAAAA,aAAa,EAAEC,qBAAKC,QAAL,KAAkB,IAAlB,GAAyB,CAAzB,GAA6B;AAA9C,GAJgB,CAAlB;AAMA,sBACE,oBAAC,iBAAD;AACE,IAAA,KAAK,EAAE,CACLL,MAAM,CAACM,SADF,EAELd,eAAe,CAACc,SAFX,EAGL;AACEC,MAAAA,eAAe,EAAE,uBAAUjB,UAAV;AADnB,KAHK,EAMLH,UAAU,IAAIa,MAAM,CAACQ,iBANhB,EAOLxB,GAAG,GAAGgB,MAAM,CAAChB,GAAV,GAAgB,EAPd;AADT,kBAWE,oBAAC,iBAAD;AAAM,IAAA,KAAK,EAAEe;AAAb,KAAyBF,WAAW,CAACY,SAArC,CAXF,CADF;AAeD,CAnCD;;AAqCA,MAAMT,MAAM,GAAGU,wBAAWC,MAAX,CAAkB;AAC/BL,EAAAA,SAAS,EAAE;AACTM,IAAAA,cAAc,EAAE,QADP;AAETC,IAAAA,MAAM,EAAE,EAFC;AAGTC,IAAAA,KAAK,EAAE;AAHE,GADoB;AAM/BN,EAAAA,iBAAiB,EAAE;AACjBD,IAAAA,eAAe,EAAE;AADA,GANY;AAS/BN,EAAAA,KAAK,EAAE;AACLc,IAAAA,UAAU,EAAE;AADP,GATwB;AAY/Bb,EAAAA,aAAa,EAAE;AACbc,IAAAA,KAAK,EAAE,uBAAUC,eAAOC,KAAjB;AADM,GAZgB;AAe/BlC,EAAAA,GAAG,EAAE;AACHmC,IAAAA,UAAU,EAAE;AADT;AAf0B,CAAlB,CAAf;;AAoBA,MAAMxB,WAAW,GAAGe,wBAAWC,MAAX,CAAkB;AACpCL,EAAAA,SAAS,EAAE;AACTc,IAAAA,iBAAiB,EAAE;AADV,GADyB;AAIpCnB,EAAAA,KAAK,EAAE;AACLoB,IAAAA,QAAQ,EAAE,EADL;AAELC,IAAAA,aAAa,EAAE,IAFV;AAGLN,IAAAA,KAAK,EAAEC,eAAOM;AAHT;AAJ6B,CAAlB,CAApB;;AAWA,MAAM3B,YAAY,GAAGc,wBAAWC,MAAX,CAAkB;AACrCL,EAAAA,SAAS,EAAE;AACTc,IAAAA,iBAAiB,EAAE;AADV,GAD0B;AAIrCnB,EAAAA,KAAK,EAAE;AACLoB,IAAAA,QAAQ,EAAE,EADL;AAELC,IAAAA,aAAa,EAAE;AAFV;AAJ8B,CAAlB,CAArB;;4BAUeE,KAAK,CAACC,IAAN,CAAW7C,mBAAX,C","sourcesContent":["import * as React from 'react';\nimport { StyleSheet, View, Text } from 'react-native';\n\nimport {\n  DimensionWidthType,\n  useDimensionWidthType,\n} from '../hooks/useWindowDimensions';\nimport { opacity10, opacity60, Colors } from '../styles';\nimport type { Survey } from '../data';\nimport { useTheme, COLOR_SCHEMES } from '../contexts/theme';\nimport i18n from '../translation';\n\ntype Props = {\n  pageIndex: number;\n  survey: Survey;\n  rtl: boolean;\n};\n\nconst SurveyPageIndicator = (props: Props) => {\n  const { survey, pageIndex = 0, rtl } = props;\n  const { hexCode, colorScheme } = useTheme();\n  const isDarkMode = colorScheme === COLOR_SCHEMES.dark;\n  const themeColor = hexCode;\n\n  const dimensionWidthType = useDimensionWidthType();\n  const dimensionStyles =\n    dimensionWidthType === DimensionWidthType.phone\n      ? phoneStyles\n      : tabletStyles;\n\n  const currentPage = survey.pages[pageIndex];\n\n  const textStyle = [\n    styles.title,\n    dimensionStyles.title,\n    isDarkMode && styles.darkModeTitle,\n    { paddingBottom: i18n.language === 'te' ? 5 : 0 },\n  ];\n  return (\n    <View\n      style={[\n        styles.container,\n        dimensionStyles.container,\n        {\n          backgroundColor: opacity10(themeColor),\n        },\n        isDarkMode && styles.darkModeContainer,\n        rtl ? styles.rtl : {},\n      ]}\n    >\n      <Text style={textStyle}>{currentPage.pageTitle}</Text>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    height: 40,\n    width: '100%',\n  },\n  darkModeContainer: {\n    backgroundColor: '#39393a',\n  },\n  title: {\n    fontWeight: '600',\n  },\n  darkModeTitle: {\n    color: opacity60(Colors.white),\n  },\n  rtl: {\n    alignItems: 'flex-end',\n  },\n});\n\nconst phoneStyles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 30,\n  },\n  title: {\n    fontSize: 14,\n    letterSpacing: 0.42,\n    color: Colors.progressBarText,\n  },\n});\n\nconst tabletStyles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 35,\n  },\n  title: {\n    fontSize: 16,\n    letterSpacing: 0.48,\n  },\n});\n\nexport default React.memo(SurveyPageIndicator);\n"]}