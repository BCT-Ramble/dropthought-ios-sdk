{"version":3,"sources":["SmileyRatingQuestionOption4.tsx"],"names":["SmileyRatingQuestionOption4","survey","pageIndex","question","forgot","onClose","onPrevPage","onNextPage","onFeedback","feedback","answered","answers","answeredValue","parseInt","windowHeight","Dimensions","get","height","questionId","scale","options","selectedIndex","setSelectedIndex","React","useState","score","setScore","isLoop","setIsLoop","loopLotties","setLoopLotties","transformLotties","setTransformLotties","scoreContainerOpacity","useRef","Animated","Value","current","scoreOpacity","descriptionYAxis","lottieRef","totalScore","Number","renderScore","hasEdited","scaleLogicList","scaleLogic","loopList","map","value","index","scaleKey","String","faceTable","loopFaceTable","transformList","array","fromScale","toScale","key","transformTable","imageLignt","require","imageDark","updateScore","useCallback","number","isAtCoverScreen","newScore","setTimeout","play","setValue","sequence","timing","toValue","duration","useNativeDriver","start","type","hexCode","backgroundColor","fontColor","colorScheme","dimensionWidthType","isPhone","DimensionWidthType","phone","styles","phoneStyles","tabletStyles","containerStyle","commonStyles","container","scoreSelectedStyle","scoreSelected","opacity","color","descStyle","desc","transform","translateY","slashStyle","slash","marginBottom","Platform","OS","scoreTotalStyle","scoreTotal","hintContainerStyle","hintContainer","hintTextStyle","hintText","hintSubTextStyle","hintSubText","handleDecreaseScore","lottieContainer","isCancel","infoImage","COLOR_SCHEMES","dark","scoreContainer","scoreText","mandatoryErrorMessage","contentContainer","i18n","t","count","submitSurvey","pageOrder","length","StyleSheet","create","flex","paddingHorizontal","flexDirection","alignItems","Colors","white","paddingBottom","width","justifyContent","fontSize","fontWeight","textAlign","marginVertical","smileyRatingScoreGray"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport {\n  View,\n  StyleSheet,\n  Text,\n  TouchableWithoutFeedback,\n  Animated,\n  TouchableOpacity,\n  Dimensions,\n  Image,\n  Platform,\n} from 'react-native';\nimport { Colors } from '../styles';\nimport i18n from '../translation';\nimport {\n  DimensionWidthType,\n  useDimensionWidthType,\n} from '../hooks/useWindowDimensions';\nimport type {\n  Feedback as OriginFeedback,\n  Question as OriginQuestion,\n  Survey,\n} from '../data';\nimport LottieView from 'lottie-react-native';\nimport SurveyFooter from '../containers/SurveyFooter';\nimport SurveyHeader from '../containers/SurveyHeader';\nimport { useTheme, COLOR_SCHEMES } from '../contexts/theme';\nimport MandatoryTitle from './MandatoryTitle';\nimport {\n  scaleLogic,\n  option4FaceTable as faceTable,\n  option4LoopFaceTable as loopFaceTable,\n  option4TransformTable as transformTable,\n} from '../utils/data';\nimport { isNil } from 'ramda';\n\ntype Feedback = OriginFeedback & {\n  answers: string[];\n};\n\ntype Question = OriginQuestion & {\n  options: string[];\n  scale: string;\n};\n\ntype Props = {\n  survey: Survey;\n  pageIndex: number;\n  question: Question;\n  forgot: boolean;\n  onClose: () => void;\n  onPrevPage: () => void;\n  onNextPage: () => void;\n  onFeedback: ({\n    questionId,\n    answers,\n    type,\n  }: {\n    questionId: string;\n    answers: number[];\n    type: string;\n  }) => void;\n  feedback: Feedback;\n};\n\nconst SmileyRatingQuestionOption4 = ({\n  survey,\n  pageIndex,\n  question,\n  forgot,\n  onClose,\n  onPrevPage,\n  onNextPage,\n  onFeedback,\n  feedback,\n}: Props) => {\n  const answered =\n    feedback &&\n    feedback.answers &&\n    !isNil(feedback.answers[0]) &&\n    typeof feedback.answers[0] === 'number';\n  const answeredValue: number = answered\n    ? parseInt(feedback.answers[0], 10)\n    : 0;\n\n  const windowHeight = Dimensions.get('window').height;\n  const { questionId, scale, options } = question;\n  const [selectedIndex, setSelectedIndex] = React.useState<number>(\n    answered ? answeredValue : 0\n  );\n  const [score, setScore] = React.useState<number>(\n    answered ? answeredValue : -1\n  );\n  const [isLoop, setIsLoop] = React.useState<boolean>(true);\n  const [loopLotties, setLoopLotties] = React.useState<string[]>([]);\n  const [transformLotties, setTransformLotties] = React.useState<string[]>([]);\n  const scoreContainerOpacity = React.useRef(\n    new Animated.Value(answered ? 1 : 0)\n  ).current;\n  const scoreOpacity = React.useRef(\n    new Animated.Value(answered ? 1 : 0)\n  ).current;\n  const descriptionYAxis = React.useRef(\n    new Animated.Value(answered ? 1 : windowHeight / 2 - 246 + 37)\n  ).current;\n  // 37 -> one text line height\n  // 246 -> Padding Vertical 123\n\n  const lottieRef = React.useRef<LottieView>();\n\n  const totalScore = Number(scale);\n  const renderScore = score + 1;\n  const hasEdited = score >= 0;\n\n  // choose which scale logic we want to use.\n  const scaleLogicList = scaleLogic[scale];\n\n  useEffect(() => {\n    const loopList = scaleLogicList.map((value, index) => {\n      const scaleKey = String(index + 1) + faceTable[value];\n      return loopFaceTable.get(scaleKey);\n    });\n\n    const transformList = scaleLogicList.map((value, index, array) => {\n      if (index === 0) return '';\n      const fromScale = String(index) + faceTable[array[index - 1]];\n      const toScale = String(index + 1) + faceTable[value];\n      const key = `${fromScale}-${toScale}`;\n      return transformTable.get(key);\n    });\n\n    setLoopLotties(loopList);\n    setTransformLotties(transformList);\n  }, [scaleLogicList]);\n\n  const imageLignt = require('../assets/icOption4Info.png');\n  const imageDark = require('../assets/icOption4InfoDark.png');\n\n  const updateScore = React.useCallback(\n    (number) => {\n      const isAtCoverScreen = score === -1;\n      const newScore = score + number;\n\n      setScore(newScore);\n\n      if (!isAtCoverScreen) {\n        setSelectedIndex(newScore);\n        if (number > 0) {\n          setIsLoop(false);\n        } else {\n          setIsLoop(true);\n          setTimeout(() => {\n            lottieRef.current?.play();\n          }, 100);\n        }\n      }\n\n      //animtaion--\n      scoreOpacity.setValue(0);\n      if (isAtCoverScreen) {\n        Animated.sequence([\n          Animated.timing(descriptionYAxis, {\n            toValue: 0,\n            duration: 500,\n            useNativeDriver: true,\n          }),\n          Animated.timing(scoreContainerOpacity, {\n            toValue: 1,\n            duration: 500,\n            useNativeDriver: true,\n          }),\n          Animated.timing(scoreOpacity, {\n            toValue: 1,\n            duration: 500,\n            useNativeDriver: true,\n          }),\n        ]).start();\n      } else {\n        Animated.timing(scoreOpacity, {\n          toValue: 1,\n          duration: 500,\n          useNativeDriver: true,\n        }).start();\n      }\n      //animtaion--\n\n      onFeedback({\n        questionId,\n        answers: [newScore],\n        type: 'rating',\n      });\n    },\n    [\n      score,\n      scoreOpacity,\n      onFeedback,\n      questionId,\n      descriptionYAxis,\n      scoreContainerOpacity,\n    ]\n  );\n  const { hexCode, backgroundColor, fontColor, colorScheme } = useTheme();\n\n  const dimensionWidthType = useDimensionWidthType();\n  const isPhone = dimensionWidthType === DimensionWidthType.phone;\n  const styles = isPhone ? phoneStyles : tabletStyles;\n\n  const containerStyle = [commonStyles.container, { backgroundColor }];\n\n  const scoreSelectedStyle = [\n    styles.scoreSelected,\n    { opacity: scoreOpacity, color: fontColor },\n  ];\n\n  const descStyle = [\n    styles.desc,\n    {\n      transform: [{ translateY: descriptionYAxis }],\n      opacity: scoreContainerOpacity,\n      color: fontColor,\n    },\n  ];\n\n  const slashStyle = [\n    styles.slash,\n    {\n      opacity: scoreContainerOpacity,\n      marginBottom: Platform.OS === 'ios' ? 14 : 7,\n    },\n  ];\n\n  const scoreTotalStyle = [\n    styles.scoreTotal,\n    {\n      opacity: scoreContainerOpacity,\n      marginBottom: Platform.OS === 'ios' ? 5 : 4,\n    },\n  ];\n\n  const hintContainerStyle = hasEdited ? null : commonStyles.hintContainer;\n\n  const hintTextStyle = [commonStyles.hintText, { color: fontColor }];\n\n  const hintSubTextStyle = [commonStyles.hintSubText, { color: fontColor }];\n\n  useEffect(() => {\n    if (isLoop) {\n      setTimeout(() => {\n        lottieRef.current?.play();\n      }, 100);\n    }\n  }, [isLoop]);\n\n  const handleDecreaseScore = () => {\n    if (score > 0) updateScore(-1);\n  };\n\n  const lottieContainer = isLoop ? (\n    <View style={commonStyles.lottieContainer}>\n      <TouchableWithoutFeedback onPress={handleDecreaseScore}>\n        <LottieView\n          // @ts-ignore\n          ref={lottieRef}\n          source={loopLotties[selectedIndex]}\n          autoPlay\n          loop\n        />\n      </TouchableWithoutFeedback>\n    </View>\n  ) : (\n    <View style={commonStyles.lottieContainer}>\n      <TouchableWithoutFeedback onPress={handleDecreaseScore}>\n        <LottieView\n          source={transformLotties[selectedIndex]}\n          autoPlay\n          loop={false}\n          onAnimationFinish={(isCancel) => {\n            if (!isCancel) setIsLoop(true);\n          }}\n        />\n      </TouchableWithoutFeedback>\n    </View>\n  );\n\n  const infoImage = (\n    <Image\n      style={commonStyles.infoImage}\n      source={colorScheme === COLOR_SCHEMES.dark ? imageDark : imageLignt}\n    />\n  );\n\n  const scoreContainer = (\n    <TouchableWithoutFeedback\n      onPress={() => {\n        if (renderScore < totalScore) updateScore(1);\n      }}\n    >\n      <View style={commonStyles.scoreContainer}>\n        <View style={commonStyles.scoreText}>\n          <Animated.Text style={scoreSelectedStyle}>\n            {renderScore}\n          </Animated.Text>\n          <Animated.Text style={slashStyle}>{'/'}</Animated.Text>\n          <Animated.Text style={scoreTotalStyle}>{totalScore}</Animated.Text>\n        </View>\n        <Animated.Text style={descStyle}>\n          {options[selectedIndex]}\n        </Animated.Text>\n      </View>\n    </TouchableWithoutFeedback>\n  );\n\n  return (\n    <>\n      <SurveyHeader\n        survey={survey}\n        pageIndex={pageIndex}\n        backgroundColor={backgroundColor}\n        onClose={onClose}\n      />\n      <View style={containerStyle}>\n        <MandatoryTitle\n          question={question}\n          mandatoryErrorMessage={survey.mandatoryErrorMessage}\n          forgot={forgot}\n        />\n        <View style={commonStyles.contentContainer}>\n          {hasEdited ? (\n            <>\n              {lottieContainer}\n              {scoreContainer}\n            </>\n          ) : null}\n          <TouchableOpacity\n            style={hintContainerStyle}\n            disabled={score > -1}\n            onPress={() => updateScore(1)}\n          >\n            <>\n              {hasEdited ? null : infoImage}\n              <Text style={hintTextStyle}>\n                {i18n.t('option4HintDescription:title')}\n              </Text>\n              <Text style={hintSubTextStyle}>\n                {i18n.t('option4HintDescription:subTitle', {\n                  count: totalScore,\n                })}\n              </Text>\n            </>\n          </TouchableOpacity>\n        </View>\n      </View>\n      <SurveyFooter\n        submitSurvey={survey.submitSurvey}\n        surveyColor={hexCode}\n        isFirstPage={pageIndex === 0}\n        isLastPage={pageIndex === survey.pageOrder.length - 1}\n        onPrevPage={onPrevPage}\n        onNextPage={onNextPage}\n        backgroundColor={backgroundColor}\n      />\n    </>\n  );\n};\n\nexport default SmileyRatingQuestionOption4;\n\nconst commonStyles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingHorizontal: 42,\n    flexDirection: 'column',\n    alignItems: 'center',\n    backgroundColor: Colors.white,\n    paddingBottom: 7,\n  },\n  contentContainer: {\n    width: '100%',\n    flex: 5,\n    alignItems: 'center',\n  },\n  infoImage: {\n    marginBottom: 30,\n  },\n  hintContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  hintText: {\n    fontSize: 16,\n    fontWeight: '500',\n    textAlign: 'center',\n    marginBottom: 6,\n  },\n  hintSubText: {\n    fontSize: 12,\n    fontWeight: '400',\n    textAlign: 'center',\n  },\n  lottieContainer: {\n    height: 60,\n    width: '100%',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  scoreContainer: {\n    flex: 1,\n    width: '100%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginVertical: 10,\n  },\n  scoreText: {\n    flexDirection: 'row',\n    alignItems: 'flex-end',\n  },\n});\n\nconst phoneStyles = StyleSheet.create({\n  desc: {\n    fontSize: 20,\n    fontWeight: '600',\n    textAlign: 'center',\n  },\n  scoreSelected: {\n    fontSize: 74,\n    textAlign: 'center',\n    alignItems: 'baseline',\n  },\n  scoreTotal: {\n    fontSize: 55,\n    color: Colors.smileyRatingScoreGray,\n  },\n  slash: {\n    fontSize: 55,\n    color: Colors.smileyRatingScoreGray,\n  },\n});\n\nconst tabletStyles = StyleSheet.create({\n  desc: {\n    fontSize: 20,\n    fontWeight: '600',\n    textAlign: 'center',\n  },\n  scoreSelected: {\n    fontSize: 74,\n    textAlign: 'center',\n    alignItems: 'baseline',\n  },\n  scoreTotal: {\n    fontSize: 55,\n    color: Colors.smileyRatingScoreGray,\n  },\n  slash: {\n    fontSize: 37,\n    color: Colors.smileyRatingScoreGray,\n  },\n});\n"]}