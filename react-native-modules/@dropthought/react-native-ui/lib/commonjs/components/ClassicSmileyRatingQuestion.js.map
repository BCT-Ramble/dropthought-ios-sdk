{"version":3,"sources":["ClassicSmileyRatingQuestion.tsx"],"names":["noop","undefined","getInitialSelectedValue","feedback","question","prevAnswer","answers","parseInt","options","map","_option","index","VeryDislikeIcon","selected","onPress","label","restProps","colorScheme","require","COLOR_SCHEMES","dark","VeryLikeIcon","NotSureIcon","LikeIcon","DislikeIcon","ClassicSmileyRatingQuestion","mandatoryErrorMessage","onFeedback","forgot","setSelected","React","useState","setSelectedAndFeedback","useCallback","selectedMap","questionId","type","rtl","i18n","dir","dimensionWidthType","isPhone","DimensionWidthType","phone","styles","phoneStyles","tabletStyles","fakeSmiley","renderSmiley","viewStyle","containter","GlobalStyle","flexRowReverse","length","questionContainer","smileyRowContainer","flexEnd","memo","StyleSheet","create","flex","paddingLeft","paddingRight","justifyContent","flexDirection","paddingTop","maxWidth"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { isNil } from 'ramda';\nimport SmileyIcon from './SmileyIcon';\nimport ClassicMandatoryTitle from './ClassicMandatoryTitle';\nimport GlobalStyle from '../styles';\nimport i18n from '../translation';\nimport {\n  DimensionWidthType,\n  useDimensionWidthType,\n} from '../hooks/useWindowDimensions';\nimport { useTheme, COLOR_SCHEMES } from '../contexts/theme';\nimport type {\n  Feedback as OriginFeedback,\n  Question as OriginQuestion,\n} from '../data';\n\ntype Feedback = OriginFeedback & {\n  answers: string[];\n};\n\ntype Question = OriginQuestion & {\n  options: string[];\n  scale: string;\n};\n\nconst noop = () => undefined;\n\nconst getInitialSelectedValue = (feedback: Feedback, question: Question) => {\n  let prevAnswer: number | undefined;\n  if (feedback && feedback.answers && !isNil(feedback.answers[0])) {\n    prevAnswer = parseInt(feedback.answers[0], 10);\n  }\n  return question.options.map((_option, index) => prevAnswer === index);\n};\n\nconst VeryDislikeIcon = ({\n  selected,\n  onPress,\n  label,\n  ...restProps\n}: {\n  selected: boolean;\n  onPress: () => void;\n  label: string;\n}) => {\n  const { colorScheme } = useTheme();\n  return (\n    <SmileyIcon\n      selected={selected}\n      onPress={onPress}\n      label={label}\n      {...restProps}\n      source={\n        selected\n          ? require('../assets/btn_very_dislike_selected.png')\n          : colorScheme === COLOR_SCHEMES.dark\n          ? require('../assets/btn_very_dislike_dark.png')\n          : require('../assets/btn_very_dislike.png')\n      }\n    />\n  );\n};\n\nconst VeryLikeIcon = ({\n  selected,\n  onPress,\n  label,\n  ...restProps\n}: {\n  selected: boolean;\n  onPress: () => void;\n  label: string;\n}) => {\n  const { colorScheme } = useTheme();\n  return (\n    <SmileyIcon\n      selected={selected}\n      onPress={onPress}\n      label={label}\n      {...restProps}\n      source={\n        selected\n          ? require('../assets/btn_very_like_selected.png')\n          : colorScheme === COLOR_SCHEMES.dark\n          ? require('../assets/btn_very_like_dark.png')\n          : require('../assets/btn_very_like.png')\n      }\n    />\n  );\n};\n\nconst NotSureIcon = ({\n  selected,\n  onPress,\n  label,\n  ...restProps\n}: {\n  selected: boolean;\n  onPress: () => void;\n  label: string;\n}) => {\n  const { colorScheme } = useTheme();\n  return (\n    <SmileyIcon\n      selected={selected}\n      onPress={onPress}\n      label={label}\n      {...restProps}\n      source={\n        selected\n          ? require('../assets/btn_not_sure_selected.png')\n          : colorScheme === COLOR_SCHEMES.dark\n          ? require('../assets/btn_not_sure_dark.png')\n          : require('../assets/btn_not_sure.png')\n      }\n    />\n  );\n};\n\nconst LikeIcon = ({\n  selected,\n  onPress,\n  label,\n  ...restProps\n}: {\n  selected: boolean;\n  onPress: () => void;\n  label: string;\n}) => {\n  const { colorScheme } = useTheme();\n  return (\n    <SmileyIcon\n      selected={selected}\n      onPress={onPress}\n      label={label}\n      {...restProps}\n      source={\n        selected\n          ? require('../assets/btn_like_selected.png')\n          : colorScheme === COLOR_SCHEMES.dark\n          ? require('../assets/btn_like_dark.png')\n          : require('../assets/btn_like.png')\n      }\n    />\n  );\n};\n\nconst DislikeIcon = ({\n  selected,\n  onPress,\n  label,\n  ...restProps\n}: {\n  selected: boolean;\n  onPress: () => void;\n  label: string;\n}) => {\n  const { colorScheme } = useTheme();\n  return (\n    <SmileyIcon\n      selected={selected}\n      onPress={onPress}\n      label={label}\n      {...restProps}\n      source={\n        selected\n          ? require('../assets/btn_dislike_selected.png')\n          : colorScheme === COLOR_SCHEMES.dark\n          ? require('../assets/btn_dislike_dark.png')\n          : require('../assets/btn_dislike.png')\n      }\n    />\n  );\n};\n\ntype Props = {\n  mandatoryErrorMessage: string;\n  question: Question;\n  onFeedback: ({\n    questionId,\n    answers,\n    type,\n  }: {\n    questionId: string;\n    answers: number[];\n    type: string;\n  }) => void;\n  feedback: Feedback;\n  forgot: boolean;\n};\n\nconst ClassicSmileyRatingQuestion = ({\n  mandatoryErrorMessage,\n  question,\n  onFeedback,\n  feedback,\n  forgot,\n}: Props) => {\n  const [selected, setSelected] = React.useState<boolean[]>(\n    getInitialSelectedValue(feedback, question)\n  );\n\n  const setSelectedAndFeedback = React.useCallback(\n    (index) => {\n      let selectedMap = question.options.map(() => false);\n      selectedMap[index] = true;\n      setSelected(selectedMap);\n      onFeedback({\n        questionId: question.questionId,\n        answers: [index],\n        type: 'rating',\n      });\n    },\n    [onFeedback, question.options, question.questionId]\n  );\n\n  const rtl = i18n.dir() === 'rtl';\n  const dimensionWidthType = useDimensionWidthType();\n  const isPhone = dimensionWidthType === DimensionWidthType.phone;\n  const styles = isPhone ? phoneStyles : tabletStyles;\n\n  const fakeSmiley = !isPhone && (\n    <SmileyIcon selected={false} onPress={noop} label=\"\" />\n  );\n\n  const renderSmiley = () => {\n    const viewStyle = isPhone\n      ? styles.containter\n      : [styles.containter, rtl && GlobalStyle.flexRowReverse];\n\n    const { options } = question;\n    switch (options.length) {\n      case 2:\n        return (\n          <View style={viewStyle}>\n            <VeryDislikeIcon\n              selected={selected[0]}\n              onPress={() => setSelectedAndFeedback(0)}\n              label={options[0]}\n            />\n            <VeryLikeIcon\n              selected={selected[1]}\n              onPress={() => setSelectedAndFeedback(1)}\n              label={options[1]}\n            />\n            {fakeSmiley}\n            {fakeSmiley}\n            {fakeSmiley}\n          </View>\n        );\n      case 3:\n        return (\n          <View style={viewStyle}>\n            <VeryDislikeIcon\n              selected={selected[0]}\n              onPress={() => setSelectedAndFeedback(0)}\n              label={options[0]}\n            />\n            <NotSureIcon\n              selected={selected[1]}\n              onPress={() => setSelectedAndFeedback(1)}\n              label={options[1]}\n            />\n            <VeryLikeIcon\n              selected={selected[2]}\n              onPress={() => setSelectedAndFeedback(2)}\n              label={options[2]}\n            />\n            {fakeSmiley}\n            {fakeSmiley}\n          </View>\n        );\n      case 4:\n        return (\n          <View style={viewStyle}>\n            <VeryDislikeIcon\n              selected={selected[0]}\n              onPress={() => setSelectedAndFeedback(0)}\n              label={options[0]}\n            />\n            <NotSureIcon\n              selected={selected[1]}\n              onPress={() => setSelectedAndFeedback(1)}\n              label={options[1]}\n            />\n            <LikeIcon\n              selected={selected[2]}\n              onPress={() => setSelectedAndFeedback(2)}\n              label={options[2]}\n            />\n            <VeryLikeIcon\n              selected={selected[3]}\n              onPress={() => setSelectedAndFeedback(3)}\n              label={options[3]}\n            />\n            {fakeSmiley}\n          </View>\n        );\n      case 5:\n        return (\n          <View style={viewStyle}>\n            <VeryDislikeIcon\n              selected={selected[0]}\n              onPress={() => setSelectedAndFeedback(0)}\n              label={options[0]}\n            />\n            <DislikeIcon\n              selected={selected[1]}\n              onPress={() => setSelectedAndFeedback(1)}\n              label={options[1]}\n            />\n            <NotSureIcon\n              selected={selected[2]}\n              onPress={() => setSelectedAndFeedback(2)}\n              label={options[2]}\n            />\n            <LikeIcon\n              selected={selected[3]}\n              onPress={() => setSelectedAndFeedback(3)}\n              label={options[3]}\n            />\n            <VeryLikeIcon\n              selected={selected[4]}\n              onPress={() => setSelectedAndFeedback(4)}\n              label={options[4]}\n            />\n          </View>\n        );\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <View style={GlobalStyle.questionContainer}>\n      <ClassicMandatoryTitle\n        forgot={forgot}\n        mandatoryErrorMessage={mandatoryErrorMessage}\n        question={question}\n      />\n      <View style={[styles.smileyRowContainer, rtl && GlobalStyle.flexEnd]}>\n        {renderSmiley()}\n      </View>\n    </View>\n  );\n};\n\nexport default React.memo(ClassicSmileyRatingQuestion);\n\nconst phoneStyles = StyleSheet.create({\n  containter: {\n    flex: 1,\n    paddingLeft: 10,\n    paddingRight: 10,\n    justifyContent: 'space-between',\n  },\n  smileyRowContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    paddingTop: 6,\n  },\n});\n\nconst tabletStyles = StyleSheet.create({\n  containter: {\n    flex: 1,\n    flexDirection: 'row',\n    maxWidth: 560,\n    paddingLeft: 10,\n    justifyContent: 'space-between',\n  },\n  smileyRowContainer: {\n    flex: 1,\n    flexDirection: 'row',\n  },\n});\n"]}