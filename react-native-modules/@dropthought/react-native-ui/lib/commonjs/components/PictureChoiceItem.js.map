{"version":3,"sources":["PictureChoiceItem.tsx"],"names":["ChooseIcon","isMultipleChoice","selected","themeColor","iconStyle","tintColor","height","width","cubeStyle","styles","nonSelectedSquare","borderColor","nonSelectedCirle","require","PictureChoiceItem","title","uri","columnGap","onPress","index","fontColor","colorScheme","Dimensions","get","questionMargin","itemWidth","loadingImage","setLoadingImage","imageLoadError","setImageLoadError","photo","photoStyle","picture","marginRight","reloadStyle","pictureReloadContainer","reloadPlaceholderImage","GlobalStyle","row","reloadText","i18n","t","_error","border","containerStyle","borderContainer","borderWidth","Colors","rankingBorder","selection","optionContainer","textStyle","COLOR_SCHEMES","dark","optionText","color","appearanceSubBlack","React","memo","StyleSheet","create","flexDirection","marginTop","marginBottom","minHeight","marginLeft","flex","fontSize","borderRadius","alignItems","justifyContent","nonSelectCircle","position"],"mappings":"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","sourcesContent":["import React, { useMemo, useState } from 'react';\nimport {\n  View,\n  StyleSheet,\n  Image,\n  TouchableOpacity,\n  Text,\n  Dimensions,\n} from 'react-native';\nimport GlobalStyle, { Colors } from '../styles';\nimport ActivityIndicatorMask from './ActivityIndicatorMask';\nimport { useTheme, COLOR_SCHEMES } from '../contexts/theme';\nimport i18n from '../translation';\n\ntype ChooseIconProps = {\n  isMultipleChoice: boolean;\n  selected: boolean;\n  themeColor: string;\n};\nexport const ChooseIcon = ({\n  isMultipleChoice,\n  selected,\n  themeColor,\n}: ChooseIconProps) => {\n  const iconStyle = {\n    tintColor: themeColor,\n    height: 18,\n    width: 18,\n  };\n\n  const cubeStyle = isMultipleChoice\n    ? [styles.nonSelectedSquare, { borderColor: themeColor }]\n    : [styles.nonSelectedCirle, { borderColor: themeColor }];\n\n  return selected ? (\n    <Image\n      style={iconStyle}\n      source={\n        isMultipleChoice\n          ? require('../assets/icCheckBox24Px.png')\n          : require('../assets/ic_picture_select.png')\n      }\n    />\n  ) : (\n    <View style={cubeStyle} />\n  );\n};\n\ntype Props = {\n  title: string;\n  uri: string;\n  isMultipleChoice: boolean;\n  selected: boolean;\n  columnGap: number;\n  onPress: () => void;\n  index: number;\n  themeColor: string;\n};\nconst PictureChoiceItem = ({\n  title,\n  uri,\n  isMultipleChoice,\n  selected,\n  columnGap,\n  onPress,\n  index,\n  themeColor,\n}: Props) => {\n  const { fontColor, colorScheme } = useTheme();\n\n  const { width } = Dimensions.get('window');\n  const questionMargin = 30;\n  const itemWidth = (width - 2 * questionMargin - columnGap) / 2;\n\n  const [loadingImage, setLoadingImage] = useState(true);\n  const [imageLoadError, setImageLoadError] = useState(false);\n\n  const photo = useMemo(() => {\n    const photoStyle = [\n      styles.picture,\n      { width: itemWidth, marginRight: index % 2 === 0 ? columnGap : 0 },\n    ];\n    if (imageLoadError) {\n      const reloadStyle = [\n        styles.pictureReloadContainer,\n        { width: itemWidth, marginRight: index % 2 === 0 ? columnGap : 0 },\n      ];\n      return (\n        <View style={reloadStyle}>\n          <Image\n            style={styles.reloadPlaceholderImage}\n            source={require('../assets/ic_image_placeholder.png')}\n          />\n          <View style={GlobalStyle.row}>\n            <Image source={require('../assets/ic_reload.png')} />\n            <Text style={styles.reloadText}>\n              {`${i18n.t('picture-choice:reload')}`}\n            </Text>\n          </View>\n        </View>\n      );\n    } else {\n      return (\n        <Image\n          style={photoStyle}\n          source={{ uri }}\n          onLoadStart={() => setLoadingImage(true)}\n          onLoadEnd={() => setLoadingImage(false)}\n          onError={(_error) => {\n            setImageLoadError(true);\n            setLoadingImage(false);\n          }}\n        />\n      );\n    }\n  }, [columnGap, imageLoadError, index, itemWidth, uri]);\n\n  const border = useMemo(() => {\n    const containerStyle = [\n      styles.borderContainer,\n      {\n        borderWidth: selected ? 2 : 1,\n        borderColor: selected ? themeColor : Colors.rankingBorder,\n        width: itemWidth,\n        marginRight: index % 2 === 0 ? columnGap : 0,\n      },\n    ];\n    return (\n      <View style={containerStyle}>\n        <ActivityIndicatorMask loading={loadingImage} />\n      </View>\n    );\n  }, [columnGap, index, itemWidth, loadingImage, selected, themeColor]);\n\n  const selection = useMemo(() => {\n    const containerStyle = [\n      styles.optionContainer,\n      { marginRight: index % 2 === 0 ? columnGap : 0 },\n    ];\n\n    const textStyle =\n      colorScheme === COLOR_SCHEMES.dark\n        ? [styles.optionText, { color: fontColor ?? Colors.appearanceSubBlack }]\n        : [styles.optionText, { color: fontColor }];\n    return (\n      <View style={containerStyle}>\n        <ChooseIcon\n          isMultipleChoice={isMultipleChoice}\n          selected={selected}\n          themeColor={themeColor}\n        />\n        <Text style={textStyle}>{title}</Text>\n      </View>\n    );\n  }, [\n    colorScheme,\n    columnGap,\n    fontColor,\n    index,\n    isMultipleChoice,\n    selected,\n    themeColor,\n    title,\n  ]);\n\n  return (\n    <TouchableOpacity\n      onPress={() => {\n        if (imageLoadError) {\n          setImageLoadError(false);\n          setLoadingImage(true);\n        } else {\n          onPress();\n        }\n      }}\n    >\n      {/* keep this <View>, otherwise the photo's height will increase accroding to PictureChoiceOtherItem */}\n      <View>\n        {photo}\n        {border}\n        {selection}\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nexport default React.memo(PictureChoiceItem);\n\nconst styles = StyleSheet.create({\n  optionContainer: {\n    flexDirection: 'row',\n    marginTop: 16,\n    marginBottom: 25,\n    minHeight: 20,\n  },\n  optionText: {\n    marginLeft: 5,\n    flex: 1,\n    fontSize: 16,\n  },\n  picture: {\n    height: 138,\n    borderRadius: 12,\n    borderWidth: 1,\n    borderColor: Colors.rankingBorder,\n  },\n  pictureReloadContainer: {\n    height: 138,\n    borderRadius: 12,\n    borderWidth: 1,\n    borderColor: Colors.rankingBorder,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  reloadPlaceholderImage: {\n    marginBottom: 8,\n  },\n  reloadText: {\n    fontSize: 12,\n    marginLeft: 4,\n  },\n  nonSelectedCirle: {\n    width: 18,\n    height: 18,\n    borderColor: Colors.nonSelectCircle,\n    borderWidth: 1,\n    borderRadius: 9,\n    marginTop: 1,\n  },\n  nonSelectedSquare: {\n    width: 18,\n    height: 18,\n    borderColor: Colors.nonSelectCircle,\n    borderWidth: 1,\n    borderRadius: 2,\n    marginTop: 1,\n  },\n  borderContainer: {\n    position: 'absolute',\n    height: 138,\n    borderRadius: 12,\n    borderColor: 'red',\n  },\n});\n"]}