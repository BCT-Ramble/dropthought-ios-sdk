{"version":3,"sources":["PictureChoiceItem.tsx"],"names":["ChooseIcon","isMultipleChoice","selected","themeColor","iconStyle","tintColor","height","width","cubeStyle","styles","nonSelectedSquare","borderColor","nonSelectedCirle","require","PictureChoiceItem","title","uri","columnGap","onPress","index","fontColor","colorScheme","rtl","i18n","dir","itemGapStyle","marginLeft","marginRight","Dimensions","get","questionMargin","itemWidth","loadingImage","setLoadingImage","imageLoadError","setImageLoadError","photo","photoStyle","picture","reloadTextStyle","reloadText","color","reloadStyle","pictureReloadContainer","backgroundColor","reloadPlacholderStyle","reloadPlaceholderImage","GlobalStyle","row","t","_error","border","containerStyle","borderContainer","borderWidth","Colors","rankingBorder","maskStyle","selection","optionContainer","flexRowReverse","textStyle","COLOR_SCHEMES","dark","optionText","appearanceSubBlack","React","memo","StyleSheet","create","flexDirection","marginTop","marginBottom","minHeight","flex","fontSize","paddingHorizontal","borderRadius","alignItems","justifyContent","nonSelectCircle","position","overflow"],"mappings":"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","sourcesContent":["import React, { useMemo, useState } from 'react';\nimport {\n  View,\n  StyleSheet,\n  Image,\n  TouchableOpacity,\n  Text,\n  Dimensions,\n} from 'react-native';\nimport GlobalStyle, { Colors, addOpacityToHex } from '../styles';\nimport ActivityIndicatorMask from './ActivityIndicatorMask';\nimport { useTheme, COLOR_SCHEMES } from '../contexts/theme';\nimport i18n from '../translation';\n\ntype ChooseIconProps = {\n  isMultipleChoice: boolean;\n  selected: boolean;\n  themeColor: string;\n};\nexport const ChooseIcon = ({\n  isMultipleChoice,\n  selected,\n  themeColor,\n}: ChooseIconProps) => {\n  const iconStyle = {\n    tintColor: themeColor,\n    height: 18,\n    width: 18,\n  };\n\n  const cubeStyle = isMultipleChoice\n    ? [styles.nonSelectedSquare, { borderColor: themeColor }]\n    : [styles.nonSelectedCirle, { borderColor: themeColor }];\n\n  return selected ? (\n    <Image\n      style={iconStyle}\n      source={\n        isMultipleChoice\n          ? require('../assets/icCheckBox24Px.png')\n          : require('../assets/ic_picture_select.png')\n      }\n    />\n  ) : (\n    <View style={cubeStyle} />\n  );\n};\n\ntype Props = {\n  title: string;\n  uri: string;\n  isMultipleChoice: boolean;\n  selected: boolean;\n  columnGap: number;\n  onPress: () => void;\n  index: number;\n  themeColor: string;\n};\nconst PictureChoiceItem = ({\n  title,\n  uri,\n  isMultipleChoice,\n  selected,\n  columnGap,\n  onPress,\n  index,\n  themeColor,\n}: Props) => {\n  const { fontColor, colorScheme } = useTheme();\n  const rtl = i18n.dir() === 'rtl';\n\n  const itemGapStyle = useMemo(() => {\n    if (rtl) {\n      return {\n        marginLeft: index % 2 === 0 ? columnGap : 0,\n      };\n    } else {\n      return {\n        marginRight: index % 2 === 0 ? columnGap : 0,\n      };\n    }\n  }, [columnGap, index, rtl]);\n\n  const { width } = Dimensions.get('window');\n  const questionMargin = 30;\n  const itemWidth = (width - 2 * questionMargin - columnGap) / 2;\n\n  const [loadingImage, setLoadingImage] = useState(true);\n  const [imageLoadError, setImageLoadError] = useState(false);\n\n  const photo = useMemo(() => {\n    const iconStyle = { tintColor: themeColor };\n    const photoStyle = [styles.picture, { width: itemWidth }];\n    const reloadTextStyle = [\n      styles.reloadText,\n      {\n        color: fontColor,\n      },\n    ];\n    if (imageLoadError) {\n      const reloadStyle = [\n        styles.pictureReloadContainer,\n        {\n          width: itemWidth,\n          backgroundColor: addOpacityToHex(themeColor, 0.1),\n          borderColor: themeColor,\n          ...itemGapStyle,\n        },\n      ];\n      const reloadPlacholderStyle = [styles.reloadPlaceholderImage, iconStyle];\n      return (\n        <View style={reloadStyle}>\n          <Image\n            style={reloadPlacholderStyle}\n            source={require('../assets/ic_image_placeholder.png')}\n          />\n          <View style={GlobalStyle.row}>\n            <Image\n              style={iconStyle}\n              source={require('../assets/ic_reload.png')}\n            />\n            <Text style={reloadTextStyle}>\n              {`${i18n.t('picture-choice:reload')}`}\n            </Text>\n          </View>\n        </View>\n      );\n    } else {\n      return (\n        <Image\n          style={photoStyle}\n          source={{ uri }}\n          onLoadStart={() => setLoadingImage(true)}\n          onLoadEnd={() => setLoadingImage(false)}\n          onError={(_error) => {\n            setImageLoadError(true);\n            setLoadingImage(false);\n          }}\n        />\n      );\n    }\n  }, [fontColor, imageLoadError, itemGapStyle, itemWidth, themeColor, uri]);\n\n  const border = useMemo(() => {\n    const containerStyle = [\n      styles.borderContainer,\n      {\n        borderWidth: selected ? 2 : 1,\n        borderColor: selected ? themeColor : Colors.rankingBorder,\n        width: itemWidth,\n      },\n    ];\n    const maskStyle = {\n      backgroundColor: addOpacityToHex(themeColor, 0.1),\n    };\n    return (\n      <View style={containerStyle}>\n        <ActivityIndicatorMask loading={loadingImage} style={maskStyle} />\n      </View>\n    );\n  }, [itemWidth, loadingImage, selected, themeColor]);\n\n  const selection = useMemo(() => {\n    const containerStyle = [\n      styles.optionContainer,\n      rtl && GlobalStyle.flexRowReverse,\n    ];\n\n    const textStyle =\n      colorScheme === COLOR_SCHEMES.dark\n        ? [styles.optionText, { color: fontColor ?? Colors.appearanceSubBlack }]\n        : [styles.optionText, { color: fontColor }];\n    return (\n      <View style={containerStyle}>\n        <ChooseIcon\n          isMultipleChoice={isMultipleChoice}\n          selected={selected}\n          themeColor={themeColor}\n        />\n        <Text style={textStyle}>{title}</Text>\n      </View>\n    );\n  }, [\n    colorScheme,\n    fontColor,\n    isMultipleChoice,\n    rtl,\n    selected,\n    themeColor,\n    title,\n  ]);\n\n  return (\n    <TouchableOpacity\n      style={itemGapStyle}\n      onPress={() => {\n        if (imageLoadError) {\n          setImageLoadError(false);\n          setLoadingImage(true);\n        } else {\n          onPress();\n        }\n      }}\n    >\n      {/* keep this <View>, otherwise the photo's height will increase accroding to PictureChoiceOtherItem */}\n      <View>\n        {photo}\n        {border}\n        {selection}\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nexport default React.memo(PictureChoiceItem);\n\nconst styles = StyleSheet.create({\n  optionContainer: {\n    flexDirection: 'row',\n    marginTop: 16,\n    marginBottom: 25,\n    minHeight: 20,\n  },\n  optionText: {\n    flex: 1,\n    fontSize: 16,\n    paddingHorizontal: 5,\n  },\n  picture: {\n    height: 138,\n    borderRadius: 12,\n    borderWidth: 1,\n    borderColor: Colors.rankingBorder,\n  },\n  pictureReloadContainer: {\n    height: 138,\n    borderRadius: 12,\n    borderWidth: 1,\n    borderColor: Colors.rankingBorder,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  reloadPlaceholderImage: {\n    marginBottom: 8,\n  },\n  reloadText: {\n    fontSize: 12,\n    marginLeft: 4,\n  },\n  nonSelectedCirle: {\n    width: 18,\n    height: 18,\n    borderColor: Colors.nonSelectCircle,\n    borderWidth: 1,\n    borderRadius: 9,\n    marginTop: 1,\n  },\n  nonSelectedSquare: {\n    width: 18,\n    height: 18,\n    borderColor: Colors.nonSelectCircle,\n    borderWidth: 1,\n    borderRadius: 2,\n    marginTop: 1,\n  },\n  borderContainer: {\n    position: 'absolute',\n    height: 138,\n    borderRadius: 12,\n    borderColor: 'red',\n    overflow: 'hidden',\n  },\n});\n"]}