{"version":3,"sources":["index.js"],"names":["Object","defineProperty","exports","value","Greeter","name","EvaluateRuleSet","ruleSet","pageFeedback","result","rule","condition","indexOf","andArr","split","evalCond","andCond","filteredFeedback","filterFeedback","conditionArr","handleSplit","type","length","logDetails","evaluateCondition","questionId","e","eval","toPageId","orArr","orCond","filter","el","conditionArrMax","lastString","i","feedback","targetAnswer","lastIndex","targetOption","skiplogicType","selectedAnswer","selectedMatrix","conditionMatrixArr","textOrIndexArr","findIndex","parseInt","selectedIndex","Number","map","selected","includes","some","conditionValueArr","isIncluding","text","trim","feedbackAnswers","forEach","otherFlag","feedbackArr","multiChoiceFeedbackArr","every"],"mappings":"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","sourcesContent":["'use strict';\nObject.defineProperty(exports, '__esModule', {value: true});\n// dummy integration test\nexports.Greeter = name => `Nĭ hăo ${name}`;\n/**\n * This function is used to evaluate skip logic rule based on the skip authoring rules\n * and the page feedback passed to evaluate and provide the next page index on condition met\n * it will return empty string for conditions not met.\n * @param {Rule[]} ruleSet\n * @param {IQAData[]} pageFeedback\n */\nexports.EvaluateRuleSet = (ruleSet, pageFeedback) => {\n  let result = '';\n  for (const rule of ruleSet) {\n    if (rule.condition.indexOf('&&') > -1) {\n      const andArr = rule.condition.split('&&');\n      let evalCond = '';\n      for (const andCond of andArr) {\n        const filteredFeedback = filterFeedback(\n          pageFeedback,\n          andCond.split('.')[0],\n        );\n        const conditionArr = handleSplit(andCond, filteredFeedback[0].type);\n        if (filteredFeedback.length > 0) {\n          logDetails(conditionArr, filteredFeedback);\n          if (\n            evaluateCondition(\n              conditionArr,\n              filteredFeedback[0].questionId,\n              filteredFeedback[0].type,\n              filteredFeedback[0],\n            )\n          ) {\n            evalCond =\n              evalCond.length > 0 ? evalCond + ' && ' + true : evalCond + true;\n          } else {\n            evalCond =\n              evalCond.length > 0\n                ? evalCond + ' && ' + false\n                : evalCond + false;\n          }\n        }\n      }\n      const e = eval;\n      result = e(evalCond) ? rule.toPageId : '';\n    } else if (rule.condition.indexOf('||') > -1) {\n      const orArr = rule.condition.split('||');\n      for (const orCond of orArr) {\n        const filteredFeedback = filterFeedback(\n          pageFeedback,\n          orCond.split('.')[0],\n        );\n        const conditionArr = handleSplit(orCond, filteredFeedback[0].type);\n        if (filteredFeedback.length > 0) {\n          logDetails(conditionArr, filteredFeedback);\n          if (\n            evaluateCondition(\n              conditionArr,\n              filteredFeedback[0].questionId,\n              filteredFeedback[0].type,\n              filteredFeedback[0],\n            )\n          ) {\n            result = rule.toPageId;\n          }\n        }\n      }\n    } else {\n      const filteredFeedback = filterFeedback(\n        pageFeedback,\n        rule.condition.split('.')[0],\n      );\n      const conditionArr = handleSplit(\n        rule.condition,\n        filteredFeedback[0].type,\n      );\n      if (filteredFeedback.length > 0) {\n        logDetails(conditionArr, filteredFeedback);\n        if (\n          evaluateCondition(\n            conditionArr,\n            filteredFeedback[0].questionId,\n            filteredFeedback[0].type,\n            filteredFeedback[0],\n          )\n        ) {\n          result = rule.toPageId;\n        }\n      }\n    }\n    if (result.length > 0) {\n      break;\n    }\n  }\n  return result;\n};\n\n/**\n * @param {IQAData[]} pageFeedback\n * @param {string} questionId\n */\nconst filterFeedback = (pageFeedback, questionId) => {\n  return pageFeedback.filter(el => {\n    return (\n      el.questionId === questionId\n      // && el.textOrIndexArr === (conditionArr.length === 3 ? [conditionArr[2]] : [''])\n    );\n  });\n};\nconst logDetails = (conditionArr, filteredFeedback) => {\n  // console.log('conditionArr[1] => ' + conditionArr[1]);\n  // console.log('value=> ' + (conditionArr.length === 3 ? conditionArr[2] : ''));\n  // console.log('filteredFeedback=> ' + JSON.stringify(filteredFeedback[0]));\n  // console.log('evaluateCondition=> ' + evaluateCondition(conditionArr, filteredFeedback[0].questionId, filteredFeedback[0].textOrIndexArr[0]));\n};\n/**\n * @param {string} condition\n * @param {QuestionType} type\n * @returns\n */\nconst handleSplit = (condition, type) => {\n  const conditionArr = condition.split('.');\n  let conditionArrMax;\n  // if the condition include '.' text, we need to merge the condition\n  if (type === 'open') {\n    // open's array length is 4\n    conditionArrMax = 3;\n  } else if (type === 'multipleOpenEnded') {\n    // multipleOpenEnded's array length is 4\n    conditionArrMax = 4;\n  }\n  if (\n    typeof conditionArrMax === 'number' &&\n    conditionArr.length > conditionArrMax\n  ) {\n    let lastString = '';\n    for (let i = conditionArrMax - 1; i < conditionArr.length; i++) {\n      lastString =\n        lastString +\n        conditionArr[i] +\n        (i !== conditionArr.length - 1 ? '.' : '');\n    }\n    conditionArr[conditionArrMax - 1] = lastString;\n    conditionArr.length = conditionArrMax;\n    return conditionArr;\n  }\n  return conditionArr;\n};\n/**\n *\n * @param {string[]} conditionArr\n * @param {string} questionId\n * @param {QuestionType} type\n * @param {IQAData} feedback\n */\nexport const evaluateCondition = (conditionArr, questionId, type, feedback) => {\n  let result = false;\n  let targetAnswer;\n  const lastIndex = conditionArr.length - 1;\n  if (questionId === conditionArr[0]) {\n    if (conditionArr.length === 4) {\n      // e.g. 092f3c13-940c-4b52-968d-b852da681858.1.answ.1\n      const targetOption = conditionArr[1];\n      const skiplogicType = conditionArr[2];\n      let selectedAnswer = -1;\n      /** @type {number[]} */\n      let selectedMatrix = [-1];\n      /** @type {number[]} */\n      let conditionMatrixArr = [];\n      let condition = -1;\n      switch (type) {\n        case 'ranking': {\n          selectedAnswer = feedback.textOrIndexArr.findIndex(\n            value => value === targetOption,\n          );\n          // can not find index (should be set to 'N/A')\n          if (selectedAnswer === -1) return false;\n\n          targetAnswer = parseInt(conditionArr[3], 10);\n\n          condition = targetAnswer - 1;\n          break;\n        }\n        case 'matrixRating': {\n          // e.g. 092f3c13-940c-4b52-968d-b852da681858.1.answ.1\n          const selectedIndex = parseInt(targetOption, 10);\n          const textOrIndexArr = `${feedback.textOrIndexArr[selectedIndex]}`;\n          selectedAnswer = parseInt(textOrIndexArr, 10);\n          // e.g. conditionArr[3] => '1', '1-2', '1,2'\n          condition = Number(conditionArr[3]) - 1;\n          break;\n        }\n        case 'matrixChoice': {\n          const selectedIndex = parseInt(targetOption, 10);\n          const textOrIndexArr = `${feedback.textOrIndexArr[selectedIndex]}`;\n          conditionMatrixArr = conditionArr[3]\n            .split(',')\n            .map(condition => parseInt(condition, 10));\n          selectedMatrix = textOrIndexArr\n            .split(',')\n            .map(selected => parseInt(selected, 10));\n          break;\n        }\n        case 'multipleOpenEnded': {\n          // e.g. 092f3c13-940c-4b52-968d-b852da681858.1.answ.1\n          const selectedIndex = parseInt(targetOption, 10);\n          const textOrIndexArr = `${feedback.textOrIndexArr[selectedIndex]}`;\n          if (textOrIndexArr.length === 0) {\n            selectedAnswer = -1;\n          } else {\n            selectedAnswer = parseInt(textOrIndexArr, 10);\n          }\n          break;\n        }\n        default:\n      }\n      switch (skiplogicType) {\n        case 'mtch':\n          //['5e3480b2-6e4b-475c-a916-1f0bab87033b','5','mtch','amazon.com',]\n          // If the answer to this question Contains the text \"logic test\"\n          result = feedback.textOrIndexArr[conditionArr[1]].includes(\n            conditionArr[lastIndex],\n          );\n          break;\n        case 'nmtch': {\n          //['5e3480b2-6e4b-475c-a916-1f0bab87033b','5','nmtch','amazon.com',]\n          // If the answer to this question do not contains the text \"logic test\"\n          if (feedback.textOrIndexArr[conditionArr[1]] === '') {\n            result = true;\n          } else {\n            result = !feedback.textOrIndexArr[conditionArr[1]].includes(\n              conditionArr[lastIndex],\n            );\n          }\n          break;\n        }\n        case 'answ':\n          //['87700a1c-ff7a-43da-9c0a-fca87864a3e5', '1', 'answ', '2,3']\n          // e.g. If the answer to this question is Staff Service and is Ranked with \"2,3\"\n          switch (type) {\n            case 'matrixChoice': {\n              result = conditionMatrixArr.some(condition =>\n                selectedMatrix.includes(condition),\n              );\n              break;\n            }\n            default: {\n              const conditionValueArr = conditionArr[lastIndex]\n                .split(',')\n                .map(value => Number(value) - 1); //[2,3]\n              result = conditionValueArr.includes(selectedAnswer);\n              break;\n            }\n          }\n          break;\n        case 'ansr':\n          //['ea7072a9-a7fb-4957-8912-5908ff664c69', '0', 'ansr', '']\n          //If the answer to this question is Timeliness of Service and is Answered\n          switch (type) {\n            case 'matrixChoice':\n              {\n                result = selectedMatrix[0] !== -1;\n              }\n              break;\n            default:\n              {\n                result = selectedAnswer !== -1;\n              }\n              break;\n          }\n          break;\n        case 'nasr':\n          //['ea7072a9-a7fb-4957-8912-5908ff664c69', '2', 'nasr', '']\n          //If the answer to this question is Communication and is Not Answered\n          result = selectedAnswer === -1;\n          switch (type) {\n            case 'matrixChoice':\n              {\n                result = selectedMatrix[0] === -1;\n              }\n              break;\n            default:\n              {\n                result = selectedAnswer === -1;\n              }\n              break;\n          }\n          break;\n        case 'nasw': {\n          // ['ea7072a9-a7fb-4957-8912-5908ff664c69', '3', 'nasw', '3']\n          //first is question index, second is condition\n          // e.g. If the answer to this question is Problem Resolution and is Not Answered with \"3\"\n          switch (type) {\n            case 'matrixChoice': {\n              const isIncluding = conditionMatrixArr.some(condition =>\n                selectedMatrix.includes(condition),\n              );\n              result = !isIncluding;\n              break;\n            }\n            default: {\n              const conditionValueArr = conditionArr[lastIndex]\n                .split(',')\n                .map(text => parseInt(text, 10) - 1); //[3]\n              const isIncluding = conditionValueArr.includes(selectedAnswer);\n              result = !isIncluding;\n              break;\n            }\n          }\n          break;\n        }\n        case 'eq':\n          //['4f643963-e6fe-4111-aaf9-5008ce9af3a2', '0', 'eq', '3']\n          // e.g. If the answer to this question is Availability of Resources and is Equal to \"3\"\n          result = selectedAnswer === condition;\n          break;\n        case 'btwn': {\n          //['4f643963-e6fe-4111-aaf9-5008ce9af3a2', '2', 'btwn', '2-5']\n          // e.g. If the answer to this question is Staff Friendliness and is Between \"2-5\"\n          // between is not include the first and the last\n          const conditionValueArr = conditionArr[lastIndex]\n            .split('-')\n            .map(value => Number(value)); //[2,5]\n          result =\n            selectedAnswer > conditionValueArr[0] - 1 &&\n            selectedAnswer < conditionValueArr[1] - 1;\n          break;\n        }\n        case 'lt':\n          result = selectedAnswer < condition;\n          break;\n        case 'lteq':\n          result = selectedAnswer <= condition;\n          break;\n        case 'gt':\n          result = selectedAnswer > condition;\n          break;\n        case 'gteq':\n          result = selectedAnswer >= condition;\n          break;\n      }\n    } else {\n      // For other type of questions\n      // e.g. 69e6aab5-6433-4a8f-a6d8-5c79d7e0d7df.btwn.3-8\n      const skiplogicType = conditionArr[1];\n      let selectedAnswer = parseInt(`${feedback.textOrIndexArr[0]}`, 10);\n      let condition = parseInt(conditionArr[2], 10);\n      switch (type) {\n        case 'ratingSlider':\n          selectedAnswer++;\n          break;\n        default:\n      }\n      switch (skiplogicType) {\n        case 'mtch': {\n          //new\n          //['8ce47319-7ea2-423b-b322-cac316384314', 'mtch', 'logic test']\n          // If the answer to this question Contains the text \"logic test\"\n          const textOrIndexArr = `${feedback.textOrIndexArr[0]}`;\n          result = textOrIndexArr.includes(conditionArr[lastIndex]);\n          break;\n        }\n        case 'nmtch': {\n          //['8ce47319-7ea2-423b-b322-cac316384314', 'nmtch', 'logic test']\n          // If the answer to this question do not contains the text \"logic test\"\n          const textOrIndexArr = `${feedback.textOrIndexArr[0]}`;\n          if (textOrIndexArr === '') {\n            result = true;\n          } else {\n            result = !textOrIndexArr.includes(conditionArr[lastIndex]);\n          }\n          break;\n        }\n        case 'ansr': {\n          //['48218a84-1fbe-413e-af15-502669199623', 'ansr']\n          //If the answer to this question is Answered\n          const textOrIndexArr = `${feedback.textOrIndexArr[0]}`;\n          result = textOrIndexArr.trim().length > 0;\n          break;\n        }\n        case 'nasr': {\n          const textOrIndexArr = `${feedback.textOrIndexArr[0]}`;\n          result = textOrIndexArr.trim().length === 0;\n          break;\n        }\n        case 'answ': {\n          //['382b3998-25c5-4d02-bc3b-8d5153efa7fe', 'answ', '1,-2']\n          //If the answer to this question is Answered with \"False,Other\"\n          const conditionValueArr = conditionArr[2].split(',');\n          const feedbackAnswers = feedback.textOrIndexArr.map(\n            feedback => `${feedback}`,\n          );\n          conditionValueArr.forEach(condition => {\n            if (!result) {\n              // check \"other\" case\n              if (condition === '-2') {\n                if (feedback.otherFlag) {\n                  result = true;\n                }\n              } else {\n                const isIncluding = feedbackAnswers.includes(condition);\n                if (isIncluding) {\n                  result = true;\n                }\n              }\n            }\n          });\n          break;\n        }\n        case 'nasw': {\n          const textOrIndexArr = `${feedback.textOrIndexArr[0]}`;\n          // e.g. is Not Answered with \"1,2\"\n          // skip target answer check, if user doesn't have any feedback (skip optional question)\n          if (textOrIndexArr.trim().length === 0) {\n            //if user didn't answer the question, and it will be judged as not answering to the assigned answer.\n            result = true;\n            break;\n          }\n          const conditionValueArr = conditionArr[2]\n            .split(',')\n            .map(text => parseInt(text, 10)); //[1,3]\n          const feedbackArr = textOrIndexArr\n            .split(',')\n            .map(text => parseInt(text, 10));\n          switch (type) {\n            case 'ratingSlider':\n              result = !conditionValueArr.includes(selectedAnswer);\n              break;\n            case 'multiChoice':\n              const multiChoiceFeedbackArr = feedback.textOrIndexArr.map(text =>\n                parseInt(text, 10),\n              );\n              result = conditionValueArr.every(\n                condition => !multiChoiceFeedbackArr.includes(condition),\n              );\n              break;\n\n            default:\n              result = conditionValueArr.every(\n                feedback => !feedbackArr.includes(feedback),\n              );\n              break;\n          }\n          break;\n        }\n        case 'btwn': {\n          //new\n          //ratingSlider\n          //['69e6aab5-6433-4a8f-a6d8-5c79d7e0d7df', 'btwn', '3-8']\n          // e.g. If the answer to the question \"Q17. Slider rating 6, no custom label and center label, 1 to 10, not required\" is Between \"3-8\"\n          // between is not include the first and the last\n          const conditionValueArr = conditionArr[lastIndex]\n            .split('-')\n            .map(value => Number(value)); //[3,8]\n          result =\n            selectedAnswer > conditionValueArr[0] &&\n            selectedAnswer < conditionValueArr[1];\n          break;\n        }\n\n        //ratingSlider\n        case 'eq':\n          result = selectedAnswer === condition;\n          break;\n        case 'lt':\n          result = selectedAnswer < condition;\n          break;\n        case 'lteq':\n          result = selectedAnswer <= condition;\n          break;\n        case 'gt':\n          result = selectedAnswer > condition;\n          break;\n        case 'gteq':\n          result = selectedAnswer >= condition;\n          break;\n      }\n    }\n  }\n  return result;\n};\n\n/** @typedef {import('../types/data').Rule} Rule */\n/** @typedef {import('../types/data').QuestionType} QuestionType */\n/** @typedef {import('./IfcRule').IQAData} IQAData */\n\nexport * from './SkipLogic';\nexport * from './IfcRule';\n"]}