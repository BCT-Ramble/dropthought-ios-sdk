{"version":3,"sources":["index.js"],"names":["Object","defineProperty","exports","value","Greeter","name","EvaluateRuleSet","ruleSet","pageFeedback","result","rule","condition","indexOf","andArr","split","evalCond","andCond","conditionArr","filteredFeedback","filterFeedback","length","evaluateCondition","questionId","type","e","eval","toPageId","orArr","orCond","filter","el","logDetails","feedback","targetAnswer","targetOption","skiplogicType","selectedAnswer","textOrIndexArr","findIndex","parseInt","selectedIndex","Number","includes","conditionValueArr","map","text","isIncludes","trim","feedbackAnswers","forEach","otherFlag","feedbackArr","multiChoiceFeedbackArr","every"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C,E,CACA;;AACAD,OAAO,CAACE,OAAR,GAAmBC,IAAD,IAAW,UAASA,IAAK,EAA3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAH,OAAO,CAACI,eAAR,GAA0B,CAACC,OAAD,EAAUC,YAAV,KAA2B;AACnD,MAAIC,MAAM,GAAG,EAAb;;AACA,OAAK,MAAMC,IAAX,IAAmBH,OAAnB,EAA4B;AAC1B,QAAIG,IAAI,CAACC,SAAL,CAAeC,OAAf,CAAuB,IAAvB,IAA+B,CAAC,CAApC,EAAuC;AACrC,YAAMC,MAAM,GAAGH,IAAI,CAACC,SAAL,CAAeG,KAAf,CAAqB,IAArB,CAAf;AACA,UAAIC,QAAQ,GAAG,EAAf;;AACA,WAAK,MAAMC,OAAX,IAAsBH,MAAtB,EAA8B;AAC5B,cAAMI,YAAY,GAAGD,OAAO,CAACF,KAAR,CAAc,GAAd,CAArB;AACA,cAAMI,gBAAgB,GAAGC,cAAc,CAACX,YAAD,EAAeS,YAAY,CAAC,CAAD,CAA3B,CAAvC;;AACA,YAAIC,gBAAgB,CAACE,MAAjB,GAA0B,CAA9B,EAAiC;AAC/B;AACA,cACEC,iBAAiB,CACfJ,YADe,EAEfC,gBAAgB,CAAC,CAAD,CAAhB,CAAoBI,UAFL,EAGfJ,gBAAgB,CAAC,CAAD,CAAhB,CAAoBK,IAHL,EAIfL,gBAAgB,CAAC,CAAD,CAJD,CADnB,EAOE;AACAH,YAAAA,QAAQ,GACNA,QAAQ,CAACK,MAAT,GAAkB,CAAlB,GAAsBL,QAAQ,GAAG,MAAX,GAAoB,IAA1C,GAAiDA,QAAQ,GAAG,IAD9D;AAED,WAVD,MAUO;AACLA,YAAAA,QAAQ,GACNA,QAAQ,CAACK,MAAT,GAAkB,CAAlB,GACIL,QAAQ,GAAG,MAAX,GAAoB,KADxB,GAEIA,QAAQ,GAAG,KAHjB;AAID;AACF;AACF,OAzBoC,CA0BrC;AACA;;;AACA,YAAMS,CAAC,GAAGC,IAAV;AACAhB,MAAAA,MAAM,GAAGe,CAAC,CAACT,QAAD,CAAD,GAAcL,IAAI,CAACgB,QAAnB,GAA8B,EAAvC;AACD,KA9BD,MA8BO,IAAIhB,IAAI,CAACC,SAAL,CAAeC,OAAf,CAAuB,IAAvB,IAA+B,CAAC,CAApC,EAAuC;AAC5C,YAAMe,KAAK,GAAGjB,IAAI,CAACC,SAAL,CAAeG,KAAf,CAAqB,IAArB,CAAd;;AACA,WAAK,MAAMc,MAAX,IAAqBD,KAArB,EAA4B;AAC1B,cAAMV,YAAY,GAAGW,MAAM,CAACd,KAAP,CAAa,GAAb,CAArB;AACA,cAAMI,gBAAgB,GAAGC,cAAc,CAACX,YAAD,EAAeS,YAAY,CAAC,CAAD,CAA3B,CAAvC;;AACA,YAAIC,gBAAgB,CAACE,MAAjB,GAA0B,CAA9B,EAAiC;AAC/B;AACA,cACEC,iBAAiB,CACfJ,YADe,EAEfC,gBAAgB,CAAC,CAAD,CAAhB,CAAoBI,UAFL,EAGfJ,gBAAgB,CAAC,CAAD,CAAhB,CAAoBK,IAHL,EAIfL,gBAAgB,CAAC,CAAD,CAJD,CADnB,EAOE;AACAT,YAAAA,MAAM,GAAGC,IAAI,CAACgB,QAAd;AACD;AACF;AACF;AACF,KAnBM,MAmBA;AACL,YAAMT,YAAY,GAAGP,IAAI,CAACC,SAAL,CAAeG,KAAf,CAAqB,GAArB,CAArB;AACA,YAAMI,gBAAgB,GAAGC,cAAc,CAACX,YAAD,EAAeS,YAAY,CAAC,CAAD,CAA3B,CAAvC;;AACA,UAAIC,gBAAgB,CAACE,MAAjB,GAA0B,CAA9B,EAAiC;AAC/B;AACA,YACEC,iBAAiB,CACfJ,YADe,EAEfC,gBAAgB,CAAC,CAAD,CAAhB,CAAoBI,UAFL,EAGfJ,gBAAgB,CAAC,CAAD,CAAhB,CAAoBK,IAHL,EAIfL,gBAAgB,CAAC,CAAD,CAJD,CADnB,EAOE;AACAT,UAAAA,MAAM,GAAGC,IAAI,CAACgB,QAAd;AACD;AACF;AACF;;AACD,QAAIjB,MAAM,CAACW,MAAP,GAAgB,CAApB,EAAuB;AACrB;AACD;AACF;;AACD,SAAOX,MAAP;AACD,CA1ED;;AA2EA,MAAMU,cAAc,GAAG,CAACX,YAAD,EAAec,UAAf,KAA8B;AACnD,SAAOd,YAAY,CAACqB,MAAb,CAAqBC,EAAD,IAAQ;AACjC,WACEA,EAAE,CAACR,UAAH,KAAkBA,UADpB,CAEE;AAFF;AAID,GALM,CAAP;AAMD,CAPD,C,CAQA;;;AACA,MAAMS,UAAU,GAAG,CAACd,YAAD,EAAeC,gBAAf,KAAoC,CACrD;AACA;AACA;AACA;AACD,CALD;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMG,iBAAiB,GAAG,CAACJ,YAAD,EAAeK,UAAf,EAA2BC,IAA3B,EAAiCS,QAAjC,KAA8C;AACtE,MAAIvB,MAAM,GAAG,KAAb;AACA,MAAIwB,YAAJ;;AACA,MAAIX,UAAU,KAAKL,YAAY,CAAC,CAAD,CAA/B,EAAoC;AAClC,QAAIA,YAAY,CAACG,MAAb,KAAwB,CAA5B,EAA+B;AAC7B;AACA,YAAMc,YAAY,GAAGjB,YAAY,CAAC,CAAD,CAAjC;AACA,YAAMkB,aAAa,GAAGlB,YAAY,CAAC,CAAD,CAAlC;AACA,UAAImB,cAAc,GAAG,CAAC,CAAtB;AACA,UAAIzB,SAAS,GAAG,CAAC,CAAjB;;AACA,cAAQY,IAAR;AACE,aAAK,SAAL;AAAgB;AACda,YAAAA,cAAc,GAAGJ,QAAQ,CAACK,cAAT,CAAwBC,SAAxB,CACdnC,KAAD,IAAWA,KAAK,KAAK+B,YADN,CAAjB,CADc,CAId;;AACA,gBAAIE,cAAc,KAAK,CAAC,CAAxB,EAA2B,OAAO,KAAP;AAE3BH,YAAAA,YAAY,GAAGM,QAAQ,CAACtB,YAAY,CAAC,CAAD,CAAb,EAAkB,EAAlB,CAAvB;AAEAN,YAAAA,SAAS,GAAGsB,YAAY,GAAG,CAA3B;AACA;AACD;;AACD,aAAK,cAAL;AAAqB;AACnB;AACA,kBAAMO,aAAa,GAAGD,QAAQ,CAACL,YAAD,EAAe,EAAf,CAA9B;AACAE,YAAAA,cAAc,GAAGG,QAAQ,CAACP,QAAQ,CAACK,cAAT,CAAwBG,aAAxB,CAAD,EAAyC,EAAzC,CAAzB,CAHmB,CAInB;;AACA7B,YAAAA,SAAS,GAAG8B,MAAM,CAACxB,YAAY,CAAC,CAAD,CAAb,CAAN,GAA0B,CAAtC;AACA;AACD;;AACD,aAAK,mBAAL;AAA0B;AACxB;AACA,kBAAMuB,aAAa,GAAGD,QAAQ,CAACL,YAAD,EAAe,EAAf,CAA9B;AACAE,YAAAA,cAAc,GAAGJ,QAAQ,CAACK,cAAT,CAAwBG,aAAxB,CAAjB;AACA;AACD;;AACD;AA3BF;;AA6BA,cAAQL,aAAR;AACE,aAAK,MAAL;AACE;AACA;AACA1B,UAAAA,MAAM,GAAGuB,QAAQ,CAACK,cAAT,CAAwBpB,YAAY,CAAC,CAAD,CAApC,EAAyCyB,QAAzC,CACPzB,YAAY,CAACA,YAAY,CAACG,MAAb,GAAsB,CAAvB,CADL,CAAT;AAGA;;AACF,aAAK,OAAL;AAAc;AACZ;AACA;AACA,gBAAIY,QAAQ,CAACK,cAAT,CAAwBpB,YAAY,CAAC,CAAD,CAApC,MAA6C,EAAjD,EAAqD;AACnDR,cAAAA,MAAM,GAAG,IAAT;AACD,aAFD,MAEO;AACLA,cAAAA,MAAM,GAAG,CAACuB,QAAQ,CAACK,cAAT,CAAwBpB,YAAY,CAAC,CAAD,CAApC,EAAyCyB,QAAzC,CACRzB,YAAY,CAACA,YAAY,CAACG,MAAb,GAAsB,CAAvB,CADJ,CAAV;AAGD;;AACD;AACD;;AACD,aAAK,MAAL;AACE;AACA;AACA,gBAAMuB,iBAAiB,GAAG1B,YAAY,CAACA,YAAY,CAACG,MAAb,GAAsB,CAAvB,CAAZ,CACvBN,KADuB,CACjB,GADiB,EAEvB8B,GAFuB,CAElBzC,KAAD,IAAWsC,MAAM,CAACtC,KAAD,CAAN,GAAgB,CAFR,CAA1B,CAHF,CAKwC;;AACtCM,UAAAA,MAAM,GAAGkC,iBAAiB,CAACD,QAAlB,CAA2BN,cAA3B,CAAT;AACA;;AACF,aAAK,MAAL;AACE;AACA;AACA3B,UAAAA,MAAM,GAAG2B,cAAc,KAAK,CAAC,CAApB,IAAyBA,cAAc,KAAK,EAArD;AACA;;AACF,aAAK,MAAL;AACE;AACA;AACA3B,UAAAA,MAAM,GAAG2B,cAAc,KAAK,CAAC,CAApB,IAAyBA,cAAc,KAAK,EAArD;AACA;;AACF,aAAK,MAAL;AAAa;AACX;AACA;AACA;AACA,kBAAMO,iBAAiB,GAAG1B,YAAY,CAACA,YAAY,CAACG,MAAb,GAAsB,CAAvB,CAAZ,CACvBN,KADuB,CACjB,GADiB,EAEvB8B,GAFuB,CAElBC,IAAD,IAAUN,QAAQ,CAACM,IAAD,EAAO,EAAP,CAAR,GAAqB,CAFZ,CAA1B,CAJW,CAM+B;;AAC1C,kBAAMC,UAAU,GAAGH,iBAAiB,CAACD,QAAlB,CAA2BN,cAA3B,CAAnB;AACA3B,YAAAA,MAAM,GAAG,CAACqC,UAAV;AACA;AACD;;AACD,aAAK,IAAL;AACE;AACA;AACArC,UAAAA,MAAM,GAAG2B,cAAc,KAAKzB,SAA5B;AACA;;AACF,aAAK,MAAL;AAAa;AACX;AACA;AACA;AACA,kBAAMgC,iBAAiB,GAAG1B,YAAY,CAACA,YAAY,CAACG,MAAb,GAAsB,CAAvB,CAAZ,CACvBN,KADuB,CACjB,GADiB,EAEvB8B,GAFuB,CAElBzC,KAAD,IAAWsC,MAAM,CAACtC,KAAD,CAFE,CAA1B,CAJW,CAMuB;;AAClCM,YAAAA,MAAM,GACJ2B,cAAc,GAAGO,iBAAiB,CAAC,CAAD,CAAjB,GAAuB,CAAxC,IACAP,cAAc,GAAGO,iBAAiB,CAAC,CAAD,CAAjB,GAAuB,CAF1C;AAGA;AACD;;AACD,aAAK,IAAL;AACElC,UAAAA,MAAM,GAAG2B,cAAc,GAAGzB,SAA1B;AACA;;AACF,aAAK,MAAL;AACEF,UAAAA,MAAM,GAAG2B,cAAc,IAAIzB,SAA3B;AACA;;AACF,aAAK,IAAL;AACEF,UAAAA,MAAM,GAAG2B,cAAc,GAAGzB,SAA1B;AACA;;AACF,aAAK,MAAL;AACEF,UAAAA,MAAM,GAAG2B,cAAc,IAAIzB,SAA3B;AACA;AA7EJ;AA+ED,KAlHD,MAkHO;AACL;AACA;AACA,YAAMwB,aAAa,GAAGlB,YAAY,CAAC,CAAD,CAAlC;AACA,UAAImB,cAAc,GAAGG,QAAQ,CAACP,QAAQ,CAACK,cAAT,CAAwB,CAAxB,CAAD,EAA6B,EAA7B,CAA7B;AACA,UAAI1B,SAAS,GAAG4B,QAAQ,CAACtB,YAAY,CAAC,CAAD,CAAb,EAAkB,EAAlB,CAAxB;;AACA,cAAQM,IAAR;AACE,aAAK,cAAL;AACEa,UAAAA,cAAc;AACd;;AACF;AAJF;;AAMA,cAAQD,aAAR;AACE,aAAK,MAAL;AACE;AACA;AACA;AACA1B,UAAAA,MAAM,GAAGuB,QAAQ,CAACK,cAAT,CAAwB,CAAxB,EAA2BK,QAA3B,CACPzB,YAAY,CAACA,YAAY,CAACG,MAAb,GAAsB,CAAvB,CADL,CAAT;AAGA;;AACF,aAAK,OAAL;AAAc;AACZ;AACA;AACA,gBAAIY,QAAQ,CAACK,cAAT,CAAwB,CAAxB,MAA+B,EAAnC,EAAuC;AACrC5B,cAAAA,MAAM,GAAG,IAAT;AACD,aAFD,MAEO;AACLA,cAAAA,MAAM,GAAG,CAACuB,QAAQ,CAACK,cAAT,CAAwB,CAAxB,EAA2BK,QAA3B,CACRzB,YAAY,CAACA,YAAY,CAACG,MAAb,GAAsB,CAAvB,CADJ,CAAV;AAGD;;AACD;AACD;;AACD,aAAK,MAAL;AACE;AACA;AACAX,UAAAA,MAAM,GAAGuB,QAAQ,CAACK,cAAT,CAAwB,CAAxB,EAA2BU,IAA3B,GAAkC3B,MAAlC,GAA2C,CAApD;AACA;;AACF,aAAK,MAAL;AACEX,UAAAA,MAAM,GAAGuB,QAAQ,CAACK,cAAT,CAAwB,CAAxB,EAA2BU,IAA3B,GAAkC3B,MAAlC,KAA6C,CAAtD;AACA;;AACF,aAAK,MAAL;AAAa;AACX;AACA;AACA,kBAAMuB,iBAAiB,GAAG1B,YAAY,CAAC,CAAD,CAAZ,CACvBH,KADuB,CACjB,GADiB,EAEvB8B,GAFuB,CAElBC,IAAD,IAAUJ,MAAM,CAACI,IAAD,CAFG,CAA1B,CAHW,CAKqB;;AAChC,kBAAMG,eAAe,GAAGhB,QAAQ,CAACK,cAAT,CAAwBO,GAAxB,CAA6BC,IAAD,IAClDJ,MAAM,CAACI,IAAD,CADgB,CAAxB;AAGAG,YAAAA,eAAe,CAACC,OAAhB,CAAyB9C,KAAD,IAAW;AACjC,kBAAI6B,QAAQ,CAACkB,SAAb,EAAwB;AACtB;AACAzC,gBAAAA,MAAM,GAAGuB,QAAQ,CAACkB,SAAlB;AACD,eAHD,MAGO,IAAI,CAACzC,MAAL,EAAa;AAClB;AACAA,gBAAAA,MAAM,GAAGkC,iBAAiB,CAACD,QAAlB,CAA2BvC,KAA3B,CAAT;AACD;AACF,aARD;AASA;AACD;;AACD,aAAK,MAAL;AAAa;AACX;AACA;AACA,gBAAI6B,QAAQ,CAACK,cAAT,CAAwB,CAAxB,EAA2BU,IAA3B,GAAkC3B,MAAlC,KAA6C,CAAjD,EAAoD;AAClD;AACAX,cAAAA,MAAM,GAAG,IAAT;AACA;AACD;;AACD,kBAAMkC,iBAAiB,GAAG1B,YAAY,CAAC,CAAD,CAAZ,CACvBH,KADuB,CACjB,GADiB,EAEvB8B,GAFuB,CAElBC,IAAD,IAAUN,QAAQ,CAACM,IAAD,EAAO,EAAP,CAFC,CAA1B,CARW,CAU2B;;AACtC,kBAAMM,WAAW,GAAGnB,QAAQ,CAACK,cAAT,CAAwB,CAAxB,EACjBvB,KADiB,CACX,GADW,EAEjB8B,GAFiB,CAEZC,IAAD,IAAUN,QAAQ,CAACM,IAAD,EAAO,EAAP,CAFL,CAApB;;AAGA,oBAAQtB,IAAR;AACE,mBAAK,cAAL;AACEd,gBAAAA,MAAM,GAAG,CAACkC,iBAAiB,CAACD,QAAlB,CAA2BN,cAA3B,CAAV;AACA;;AACF,mBAAK,aAAL;AACE,sBAAMgB,sBAAsB,GAAGpB,QAAQ,CAACK,cAAT,CAAwBO,GAAxB,CAC5BC,IAAD,IAAUN,QAAQ,CAACM,IAAD,EAAO,EAAP,CADW,CAA/B;AAGApC,gBAAAA,MAAM,GAAGkC,iBAAiB,CAACU,KAAlB,CACN1C,SAAD,IAAe,CAACyC,sBAAsB,CAACV,QAAvB,CAAgC/B,SAAhC,CADT,CAAT;AAGA;;AAEF;AACEF,gBAAAA,MAAM,GAAG0C,WAAW,CAACE,KAAZ,CACNrB,QAAD,IAAc,CAACW,iBAAiB,CAACD,QAAlB,CAA2BV,QAA3B,CADR,CAAT;AAGA;AAjBJ;;AAmBA;AACD;;AACD,aAAK,MAAL;AAAa;AACX;AACA;AACA;AACA;AACA;AACA,kBAAMW,iBAAiB,GAAG1B,YAAY,CAACA,YAAY,CAACG,MAAb,GAAsB,CAAvB,CAAZ,CACvBN,KADuB,CACjB,GADiB,EAEvB8B,GAFuB,CAElBzC,KAAD,IAAWsC,MAAM,CAACtC,KAAD,CAFE,CAA1B,CANW,CAQuB;;AAClCM,YAAAA,MAAM,GACJ2B,cAAc,GAAGO,iBAAiB,CAAC,CAAD,CAAlC,IACAP,cAAc,GAAGO,iBAAiB,CAAC,CAAD,CAFpC;AAGA;AACD;AAED;;AACA,aAAK,IAAL;AACElC,UAAAA,MAAM,GAAG2B,cAAc,KAAKzB,SAA5B;AACA;;AACF,aAAK,IAAL;AACEF,UAAAA,MAAM,GAAG2B,cAAc,GAAGzB,SAA1B;AACA;;AACF,aAAK,MAAL;AACEF,UAAAA,MAAM,GAAG2B,cAAc,IAAIzB,SAA3B;AACA;;AACF,aAAK,IAAL;AACEF,UAAAA,MAAM,GAAG2B,cAAc,GAAGzB,SAA1B;AACA;;AACF,aAAK,MAAL;AACEF,UAAAA,MAAM,GAAG2B,cAAc,IAAIzB,SAA3B;AACA;AAlHJ;AAoHD;AACF;;AACD,SAAOF,MAAP;AACD,CAzPD","sourcesContent":["'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\n// dummy integration test\nexports.Greeter = (name) => `Nĭ hăo ${name}`;\n/**\n * This function is used to evaluate skip logic rule based on the skip authoring rules\n * and the page feedback passed to evaluate and provide the next page index on condition met\n * it will return empty string for conditions not met.\n * @param ruleSet\n * @param pageFeedback\n */\nexports.EvaluateRuleSet = (ruleSet, pageFeedback) => {\n  let result = '';\n  for (const rule of ruleSet) {\n    if (rule.condition.indexOf('&&') > -1) {\n      const andArr = rule.condition.split('&&');\n      let evalCond = '';\n      for (const andCond of andArr) {\n        const conditionArr = andCond.split('.');\n        const filteredFeedback = filterFeedback(pageFeedback, conditionArr[0]);\n        if (filteredFeedback.length > 0) {\n          // logDetails(conditionArr, filteredFeedback);\n          if (\n            evaluateCondition(\n              conditionArr,\n              filteredFeedback[0].questionId,\n              filteredFeedback[0].type,\n              filteredFeedback[0]\n            )\n          ) {\n            evalCond =\n              evalCond.length > 0 ? evalCond + ' && ' + true : evalCond + true;\n          } else {\n            evalCond =\n              evalCond.length > 0\n                ? evalCond + ' && ' + false\n                : evalCond + false;\n          }\n        }\n      }\n      // console.log('evalCond ' + evalCond);\n      // eslint-disable-next-line no-eval\n      const e = eval;\n      result = e(evalCond) ? rule.toPageId : '';\n    } else if (rule.condition.indexOf('||') > -1) {\n      const orArr = rule.condition.split('||');\n      for (const orCond of orArr) {\n        const conditionArr = orCond.split('.');\n        const filteredFeedback = filterFeedback(pageFeedback, conditionArr[0]);\n        if (filteredFeedback.length > 0) {\n          // logDetails(conditionArr, filteredFeedback);\n          if (\n            evaluateCondition(\n              conditionArr,\n              filteredFeedback[0].questionId,\n              filteredFeedback[0].type,\n              filteredFeedback[0]\n            )\n          ) {\n            result = rule.toPageId;\n          }\n        }\n      }\n    } else {\n      const conditionArr = rule.condition.split('.');\n      const filteredFeedback = filterFeedback(pageFeedback, conditionArr[0]);\n      if (filteredFeedback.length > 0) {\n        // logDetails(conditionArr, filteredFeedback);\n        if (\n          evaluateCondition(\n            conditionArr,\n            filteredFeedback[0].questionId,\n            filteredFeedback[0].type,\n            filteredFeedback[0]\n          )\n        ) {\n          result = rule.toPageId;\n        }\n      }\n    }\n    if (result.length > 0) {\n      break;\n    }\n  }\n  return result;\n};\nconst filterFeedback = (pageFeedback, questionId) => {\n  return pageFeedback.filter((el) => {\n    return (\n      el.questionId === questionId\n      // && el.textOrIndexArr === (conditionArr.length === 3 ? [conditionArr[2]] : [''])\n    );\n  });\n};\n// eslint-disable-next-line no-unused-vars\nconst logDetails = (conditionArr, filteredFeedback) => {\n  // console.log('conditionArr[1] => ' + conditionArr[1]);\n  // console.log('value=> ' + (conditionArr.length === 3 ? conditionArr[2] : ''));\n  // console.log('filteredFeedback=> ' + JSON.stringify(filteredFeedback[0]));\n  // console.log('evaluateCondition=> ' + evaluateCondition(conditionArr, filteredFeedback[0].questionId, filteredFeedback[0].textOrIndexArr[0]));\n};\n/**\n *\n * @param condition\n * @param questionId\n * @param type\n * @param feedback\n */\nconst evaluateCondition = (conditionArr, questionId, type, feedback) => {\n  let result = false;\n  let targetAnswer;\n  if (questionId === conditionArr[0]) {\n    if (conditionArr.length === 4) {\n      // e.g. 092f3c13-940c-4b52-968d-b852da681858.1.answ.1\n      const targetOption = conditionArr[1];\n      const skiplogicType = conditionArr[2];\n      let selectedAnswer = -1;\n      let condition = -1;\n      switch (type) {\n        case 'ranking': {\n          selectedAnswer = feedback.textOrIndexArr.findIndex(\n            (value) => value === targetOption\n          );\n          // can not find index (should be set to 'N/A')\n          if (selectedAnswer === -1) return false;\n\n          targetAnswer = parseInt(conditionArr[3], 10);\n\n          condition = targetAnswer - 1;\n          break;\n        }\n        case 'matrixRating': {\n          // e.g. 092f3c13-940c-4b52-968d-b852da681858.1.answ.1\n          const selectedIndex = parseInt(targetOption, 10);\n          selectedAnswer = parseInt(feedback.textOrIndexArr[selectedIndex], 10);\n          // e.g. conditionArr[3] => '1', '1-2', '1,2'\n          condition = Number(conditionArr[3]) - 1;\n          break;\n        }\n        case 'multipleOpenEnded': {\n          // e.g. 092f3c13-940c-4b52-968d-b852da681858.1.answ.1\n          const selectedIndex = parseInt(targetOption, 10);\n          selectedAnswer = feedback.textOrIndexArr[selectedIndex];\n          break;\n        }\n        default:\n      }\n      switch (skiplogicType) {\n        case 'mtch':\n          //['5e3480b2-6e4b-475c-a916-1f0bab87033b','5','mtch','amazon.com',]\n          // If the answer to this question Contains the text \"logic test\"\n          result = feedback.textOrIndexArr[conditionArr[1]].includes(\n            conditionArr[conditionArr.length - 1]\n          );\n          break;\n        case 'nmtch': {\n          //['5e3480b2-6e4b-475c-a916-1f0bab87033b','5','nmtch','amazon.com',]\n          // If the answer to this question do not contains the text \"logic test\"\n          if (feedback.textOrIndexArr[conditionArr[1]] === '') {\n            result = true;\n          } else {\n            result = !feedback.textOrIndexArr[conditionArr[1]].includes(\n              conditionArr[conditionArr.length - 1]\n            );\n          }\n          break;\n        }\n        case 'answ':\n          //['87700a1c-ff7a-43da-9c0a-fca87864a3e5', '1', 'answ', '2,3']\n          // e.g. If the answer to this question is Staff Service and is Ranked with \"2,3\"\n          const conditionValueArr = conditionArr[conditionArr.length - 1]\n            .split(',')\n            .map((value) => Number(value) - 1); //[2,3]\n          result = conditionValueArr.includes(selectedAnswer);\n          break;\n        case 'ansr':\n          //['ea7072a9-a7fb-4957-8912-5908ff664c69', '0', 'ansr', '']\n          //If the answer to this question is Timeliness of Service and is Answered\n          result = selectedAnswer !== -1 && selectedAnswer !== '';\n          break;\n        case 'nasr':\n          //['ea7072a9-a7fb-4957-8912-5908ff664c69', '2', 'nasr', '']\n          //If the answer to this question is Communication and is Not Answered\n          result = selectedAnswer === -1 || selectedAnswer === '';\n          break;\n        case 'nasw': {\n          // ['ea7072a9-a7fb-4957-8912-5908ff664c69', '3', 'nasw', '3']\n          //first is question index, second is condition\n          // e.g. If the answer to this question is Problem Resolution and is Not Answered with \"3\"\n          const conditionValueArr = conditionArr[conditionArr.length - 1]\n            .split(',')\n            .map((text) => parseInt(text, 10) - 1); //[3]\n          const isIncludes = conditionValueArr.includes(selectedAnswer);\n          result = !isIncludes;\n          break;\n        }\n        case 'eq':\n          //['4f643963-e6fe-4111-aaf9-5008ce9af3a2', '0', 'eq', '3']\n          // e.g. If the answer to this question is Availability of Resources and is Equal to \"3\"\n          result = selectedAnswer === condition;\n          break;\n        case 'btwn': {\n          //['4f643963-e6fe-4111-aaf9-5008ce9af3a2', '2', 'btwn', '2-5']\n          // e.g. If the answer to this question is Staff Friendliness and is Between \"2-5\"\n          // between is not include the first and the last\n          const conditionValueArr = conditionArr[conditionArr.length - 1]\n            .split('-')\n            .map((value) => Number(value)); //[2,5]\n          result =\n            selectedAnswer > conditionValueArr[0] - 1 &&\n            selectedAnswer < conditionValueArr[1] - 1;\n          break;\n        }\n        case 'lt':\n          result = selectedAnswer < condition;\n          break;\n        case 'lteq':\n          result = selectedAnswer <= condition;\n          break;\n        case 'gt':\n          result = selectedAnswer > condition;\n          break;\n        case 'gteq':\n          result = selectedAnswer >= condition;\n          break;\n      }\n    } else {\n      // For other type of questions\n      // e.g. 69e6aab5-6433-4a8f-a6d8-5c79d7e0d7df.btwn.3-8\n      const skiplogicType = conditionArr[1];\n      let selectedAnswer = parseInt(feedback.textOrIndexArr[0], 10);\n      let condition = parseInt(conditionArr[2], 10);\n      switch (type) {\n        case 'ratingSlider':\n          selectedAnswer++;\n          break;\n        default:\n      }\n      switch (skiplogicType) {\n        case 'mtch':\n          //new\n          //['8ce47319-7ea2-423b-b322-cac316384314', 'mtch', 'logic test']\n          // If the answer to this question Contains the text \"logic test\"\n          result = feedback.textOrIndexArr[0].includes(\n            conditionArr[conditionArr.length - 1]\n          );\n          break;\n        case 'nmtch': {\n          //['8ce47319-7ea2-423b-b322-cac316384314', 'nmtch', 'logic test']\n          // If the answer to this question do not contains the text \"logic test\"\n          if (feedback.textOrIndexArr[0] === '') {\n            result = true;\n          } else {\n            result = !feedback.textOrIndexArr[0].includes(\n              conditionArr[conditionArr.length - 1]\n            );\n          }\n          break;\n        }\n        case 'ansr':\n          //['48218a84-1fbe-413e-af15-502669199623', 'ansr']\n          //If the answer to this question is Answered\n          result = feedback.textOrIndexArr[0].trim().length > 0;\n          break;\n        case 'nasr':\n          result = feedback.textOrIndexArr[0].trim().length === 0;\n          break;\n        case 'answ': {\n          //['382b3998-25c5-4d02-bc3b-8d5153efa7fe', 'answ', '1,-2']\n          //If the answer to this question is Answered with \"False,Other\"\n          const conditionValueArr = conditionArr[2]\n            .split(',')\n            .map((text) => Number(text)); //1,-2\n          const feedbackAnswers = feedback.textOrIndexArr.map((text) =>\n            Number(text)\n          );\n          feedbackAnswers.forEach((value) => {\n            if (feedback.otherFlag) {\n              // check \"other\" case\n              result = feedback.otherFlag;\n            } else if (!result) {\n              // check if any answer contains the target answer\n              result = conditionValueArr.includes(value);\n            }\n          });\n          break;\n        }\n        case 'nasw': {\n          // e.g. is Not Answered with \"1,2\"\n          // skip target answer check, if user doesn't have any feedback (skip optional question)\n          if (feedback.textOrIndexArr[0].trim().length === 0) {\n            //if user didn't answer the question, and it will be judged as not answering to the assigned answer.\n            result = true;\n            break;\n          }\n          const conditionValueArr = conditionArr[2]\n            .split(',')\n            .map((text) => parseInt(text, 10)); //[1,3]\n          const feedbackArr = feedback.textOrIndexArr[0]\n            .split(',')\n            .map((text) => parseInt(text, 10));\n          switch (type) {\n            case 'ratingSlider':\n              result = !conditionValueArr.includes(selectedAnswer);\n              break;\n            case 'multiChoice':\n              const multiChoiceFeedbackArr = feedback.textOrIndexArr.map(\n                (text) => parseInt(text, 10)\n              );\n              result = conditionValueArr.every(\n                (condition) => !multiChoiceFeedbackArr.includes(condition)\n              );\n              break;\n\n            default:\n              result = feedbackArr.every(\n                (feedback) => !conditionValueArr.includes(feedback)\n              );\n              break;\n          }\n          break;\n        }\n        case 'btwn': {\n          //new\n          //ratingSlider\n          //['69e6aab5-6433-4a8f-a6d8-5c79d7e0d7df', 'btwn', '3-8']\n          // e.g. If the answer to the question \"Q17. Slider rating 6, no custom label and center label, 1 to 10, not required\" is Between \"3-8\"\n          // between is not include the first and the last\n          const conditionValueArr = conditionArr[conditionArr.length - 1]\n            .split('-')\n            .map((value) => Number(value)); //[3,8]\n          result =\n            selectedAnswer > conditionValueArr[0] &&\n            selectedAnswer < conditionValueArr[1];\n          break;\n        }\n\n        //ratingSlider\n        case 'eq':\n          result = selectedAnswer === condition;\n          break;\n        case 'lt':\n          result = selectedAnswer < condition;\n          break;\n        case 'lteq':\n          result = selectedAnswer <= condition;\n          break;\n        case 'gt':\n          result = selectedAnswer > condition;\n          break;\n        case 'gteq':\n          result = selectedAnswer >= condition;\n          break;\n      }\n    }\n  }\n  return result;\n};\n"]}