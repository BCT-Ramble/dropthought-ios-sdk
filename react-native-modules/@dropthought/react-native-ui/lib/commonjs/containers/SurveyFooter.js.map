{"version":3,"sources":["SurveyFooter.tsx"],"names":["SurveyFooter","props","rtl","i18n","dir","surveyColor","isFirstPage","isLastPage","onPrevPage","onNextPage","backgroundColor","containerStyle","styles","container","GlobalStyle","flexRowReverse","colorScheme","isDarkMode","COLOR_SCHEMES","dark","iconStyle","icon","tintColor","Colors","white","iconBgStyle","iconBg","opacity","submitButtonStyle","centerButtonContainer","submitDisabled","setSubmitDisabled","React","useState","submitButton","submitText","t","leftButton","leftButtonContainer","require","rightButton","rightButtonContainer","StyleSheet","create","flexDirection","justifyContent","width","height","position","left","right","alignItems","borderRadius","top","color","fontSize","fontWeight","memo"],"mappings":"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","sourcesContent":["/**\n * @description a extension UI/UX component of SurveyScreenLayout\n * it displays three buttons:\n *  - Back, displayed when page is > 0\n *  - Next, displayed when page is not end\n *  - Submit, displayed when page is the last page\n * When \"Back\" is pressed, call props.onPrevPage\n * When \"Next\" or \"Submit\" is pressed, call props.onNextPage\n */\nimport * as React from 'react';\nimport { Image, StyleSheet, Text, TouchableOpacity, View } from 'react-native';\nimport { Colors, GlobalStyle } from '../styles';\nimport i18n from '../translation';\nimport { useTheme, COLOR_SCHEMES } from '../contexts/theme';\n\ntype Props = {\n  surveyColor: string;\n  isFirstPage: boolean;\n  isLastPage: boolean;\n  onPrevPage: () => void;\n  onNextPage: () => void;\n\n  // To apply backgroundColor for those smiley question which has full backgroundColor\n  backgroundColor?: string;\n};\n\nconst SurveyFooter = (props: Props) => {\n  const rtl = i18n.dir() === 'rtl';\n  const {\n    surveyColor,\n    isFirstPage,\n    isLastPage,\n    onPrevPage,\n    onNextPage,\n    backgroundColor,\n  } = props;\n\n  const containerStyle = [\n    styles.container,\n    rtl && GlobalStyle.flexRowReverse,\n    {\n      backgroundColor,\n    },\n  ];\n  const { colorScheme } = useTheme();\n  const isDarkMode = colorScheme === COLOR_SCHEMES.dark;\n  const iconStyle = [\n    styles.icon,\n    { tintColor: isDarkMode ? Colors.white : surveyColor },\n  ];\n  const iconBgStyle = [\n    styles.iconBg,\n    { tintColor: surveyColor, opacity: isDarkMode ? 1 : 0.1 },\n  ];\n\n  const submitButtonStyle = [\n    styles.centerButtonContainer,\n    { backgroundColor: surveyColor },\n  ];\n\n  const [submitDisabled, setSubmitDisabled] = React.useState(false);\n\n  const submitButton = (\n    <TouchableOpacity\n      style={submitButtonStyle}\n      disabled={submitDisabled}\n      onPress={() => {\n        setSubmitDisabled(true);\n        onNextPage();\n      }}\n    >\n      <Text style={styles.submitText}>{i18n.t('survey:survey-submit')}</Text>\n    </TouchableOpacity>\n  );\n\n  const leftButton = (\n    <TouchableOpacity style={styles.leftButtonContainer} onPress={onPrevPage}>\n      <>\n        <Image\n          style={iconBgStyle}\n          source={require('../assets/icPreviousButtonBg.png')}\n        />\n        <Image\n          style={iconStyle}\n          source={require('../assets/icPreviousButton.png')}\n        />\n      </>\n    </TouchableOpacity>\n  );\n\n  const rightButton = (\n    <TouchableOpacity style={styles.rightButtonContainer} onPress={onNextPage}>\n      <>\n        <Image\n          style={iconBgStyle}\n          source={require('../assets/icNextButtonBg.png')}\n        />\n        <Image\n          style={iconStyle}\n          source={require('../assets/icNextButton.png')}\n        />\n      </>\n    </TouchableOpacity>\n  );\n\n  return (\n    <View style={containerStyle}>\n      {isFirstPage ? null : leftButton}\n      {isLastPage ? submitButton : rightButton}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    width: '100%',\n    height: 100,\n  },\n  leftButtonContainer: {\n    position: 'absolute',\n    left: 0,\n  },\n  rightButtonContainer: {\n    position: 'absolute',\n    right: 0,\n  },\n  centerButtonContainer: {\n    width: 100,\n    height: 40,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 20,\n    top: 14,\n  },\n  submitText: {\n    color: Colors.white,\n    fontSize: 17,\n    fontWeight: '600',\n  },\n  icon: {\n    position: 'absolute',\n    top: 21,\n    left: 13,\n  },\n  iconBg: {\n    opacity: 0.5,\n  },\n});\n\nexport default React.memo(SurveyFooter);\n"]}