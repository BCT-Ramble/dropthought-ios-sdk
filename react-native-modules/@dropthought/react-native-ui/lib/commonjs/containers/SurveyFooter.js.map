{"version":3,"sources":["SurveyFooter.tsx"],"names":["isAndroid","Platform","OS","SurveyFooter","props","rtl","i18n","dir","surveyColor","isFirstPage","isLastPage","onPrevPage","onNextPage","backgroundColor","insets","keyboardShown","insetsBottom","bottom","containerStyle","styles","container","GlobalStyle","flexRowReverse","paddingBottom","colorScheme","isDarkMode","COLOR_SCHEMES","dark","iconStyle","icon","tintColor","Colors","white","iconBgStyle","iconBg","opacity","submitButtonStyle","centerButtonContainer","submitDisabled","setSubmitDisabled","React","useState","submitButton","setTimeout","submitText","t","leftButton","leftButtonContainer","require","rightButton","rightButtonContainer","StyleSheet","create","flexDirection","justifyContent","width","height","position","left","right","alignItems","borderRadius","top","color","fontSize","fontWeight","memo"],"mappings":"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","sourcesContent":["/**\n * @description a extension UI/UX component of SurveyScreenLayout\n * it displays three buttons:\n *  - Back, displayed when page is > 0\n *  - Next, displayed when page is not end\n *  - Submit, displayed when page is the last page\n * When \"Back\" is pressed, call props.onPrevPage\n * When \"Next\" or \"Submit\" is pressed, call props.onNextPage\n */\nimport * as React from 'react';\nimport {\n  Image,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n  Platform,\n} from 'react-native';\n//@ts-ignore\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport { useKeyboard } from '@react-native-community/hooks';\nimport { Colors, GlobalStyle } from '../styles';\nimport i18n from '../translation';\nimport { useTheme, COLOR_SCHEMES } from '../contexts/theme';\n\ntype Props = {\n  surveyColor: string;\n  isFirstPage: boolean;\n  isLastPage: boolean;\n  onPrevPage: () => void;\n  onNextPage: () => void;\n\n  // To apply backgroundColor for those smiley question which has full backgroundColor\n  backgroundColor?: string;\n};\n\nconst isAndroid = Platform.OS === 'android';\n\nconst SurveyFooter = (props: Props) => {\n  const rtl = i18n.dir() === 'rtl';\n  const {\n    surveyColor,\n    isFirstPage,\n    isLastPage,\n    onPrevPage,\n    onNextPage,\n    backgroundColor,\n  } = props;\n\n  const insets = useSafeAreaInsets();\n  const { keyboardShown } = useKeyboard();\n\n  const insetsBottom =\n    // if it is android, and the insets bottom is not normal,\n    // maybe it is because the keyboard is showed, don't use this insets\n    isAndroid && insets.bottom >= 100 ? 0 : insets.bottom;\n\n  const containerStyle = [\n    styles.container,\n    rtl && GlobalStyle.flexRowReverse,\n    {\n      backgroundColor,\n      paddingBottom: insetsBottom || 15,\n    },\n  ];\n  const { colorScheme } = useTheme();\n  const isDarkMode = colorScheme === COLOR_SCHEMES.dark;\n  const iconStyle = [\n    styles.icon,\n    { tintColor: isDarkMode ? Colors.white : surveyColor },\n  ];\n  const iconBgStyle = [\n    styles.iconBg,\n    { tintColor: surveyColor, opacity: isDarkMode ? 1 : 0.1 },\n  ];\n\n  const submitButtonStyle = [\n    styles.centerButtonContainer,\n    { backgroundColor: surveyColor },\n  ];\n\n  const [submitDisabled, setSubmitDisabled] = React.useState(false);\n\n  const submitButton = (\n    <TouchableOpacity\n      style={submitButtonStyle}\n      disabled={submitDisabled}\n      onPress={() => {\n        setSubmitDisabled(true);\n        setTimeout(() => setSubmitDisabled(false), 1000);\n        onNextPage();\n      }}\n    >\n      <Text style={styles.submitText}>{i18n.t('survey:survey-submit')}</Text>\n    </TouchableOpacity>\n  );\n\n  const leftButton = (\n    <TouchableOpacity style={styles.leftButtonContainer} onPress={onPrevPage}>\n      <>\n        <Image\n          style={iconBgStyle}\n          source={require('../assets/icPreviousButtonBg.png')}\n        />\n        <Image\n          style={iconStyle}\n          source={require('../assets/icPreviousButton.png')}\n        />\n      </>\n    </TouchableOpacity>\n  );\n\n  const rightButton = (\n    <TouchableOpacity style={styles.rightButtonContainer} onPress={onNextPage}>\n      <>\n        <Image\n          style={iconBgStyle}\n          source={require('../assets/icNextButtonBg.png')}\n        />\n        <Image\n          style={iconStyle}\n          source={require('../assets/icNextButton.png')}\n        />\n      </>\n    </TouchableOpacity>\n  );\n\n  // hide this bar when it is android and keyboard is shown\n  if (isAndroid && keyboardShown) return null;\n  return (\n    <View style={containerStyle}>\n      {isFirstPage ? null : leftButton}\n      {isLastPage ? submitButton : rightButton}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    width: '100%',\n    height: 100,\n  },\n  leftButtonContainer: {\n    position: 'absolute',\n    left: 0,\n  },\n  rightButtonContainer: {\n    position: 'absolute',\n    right: 0,\n  },\n  centerButtonContainer: {\n    width: 100,\n    height: 40,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 20,\n    top: 14,\n  },\n  submitText: {\n    color: Colors.white,\n    fontSize: 17,\n    fontWeight: '600',\n  },\n  icon: {\n    position: 'absolute',\n    top: 21,\n    left: 13,\n  },\n  iconBg: {\n    opacity: 0.5,\n  },\n});\n\nexport default React.memo(SurveyFooter);\n"]}