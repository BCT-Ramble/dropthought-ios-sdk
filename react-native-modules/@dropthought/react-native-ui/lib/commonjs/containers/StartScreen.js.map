{"version":3,"sources":["StartScreen.tsx"],"names":["defaultIconSource","require","defaultIconSize","DimensionWidthType","phone","tablet","StartScreen","onLanguageSelect","onClose","onStart","survey","insets","dimensionWidthType","hexCode","fontColor","backgroundColor","surveyProperty","surveyName","welcomeTextPlain","language","takeSurvey","image","imageHeight","setImageHeight","iconStyle","width","height","Image","getSize","_","iconSource","undefined","uri","iconView","languagesView","languages","length","languageView","map","lang","index","styles","language_label","color","buttonStyle","button","containerStyle","headerContainer","paddingTop","top","titleStyle","headerTitle","headerIconStyle","tintColor","container","headerRowContainer","closeButton","main","title","subtitle","buttonTitle","StyleSheet","create","Colors","white","flex","alignItems","justifyContent","paddingHorizontal","textAlign","marginTop","fontSize","opacity","lineHeight","paddingVertical","borderRadius","overflow","fontWeight","letterSpacing","flexDirection","maxHeight","flexWrap","marginHorizontal","marginLeft","marginRight","flexGrow"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n  ScrollView,\n  View,\n  Text,\n  Image,\n  StyleSheet,\n  TouchableOpacity,\n} from 'react-native';\nimport { Colors } from '../styles';\nimport {\n  DimensionWidthType,\n  useDimensionWidthType,\n} from '../hooks/useWindowDimensions';\nimport { useTheme } from '../contexts/theme';\nimport type { Survey as OriginSurvey } from '../data';\n// @ts-ignore\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\n\nimport { getLanguageBy } from '../utils/LanguageUtils';\n\ntype Survey = OriginSurvey & {\n  languages: string[];\n};\n\nconst defaultIconSource = require('../assets/rating.png');\nconst defaultIconSize = {\n  [DimensionWidthType.phone]: 65,\n  [DimensionWidthType.tablet]: 72,\n};\n\ntype Props = {\n  onLanguageSelect: (language: string) => void;\n  onClose: () => void;\n  onStart: () => void;\n  survey: Survey;\n};\n\nconst StartScreen = ({ onLanguageSelect, onClose, onStart, survey }: Props) => {\n  const insets = useSafeAreaInsets();\n  const dimensionWidthType = useDimensionWidthType();\n  const { hexCode, fontColor, backgroundColor } = useTheme();\n\n  const { surveyProperty, surveyName, welcomeTextPlain, language, takeSurvey } =\n    survey;\n  const { image } = surveyProperty;\n\n  const [imageHeight, setImageHeight] = useState(65);\n  const iconStyle = {\n    width: '100%',\n    height: imageHeight,\n  };\n\n  useEffect(() => {\n    Image.getSize(\n      image,\n      (_, height) => {\n        if (height < defaultIconSize[dimensionWidthType]) {\n          setImageHeight(height);\n        }\n      },\n      (_) => {}\n    );\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const iconSource = image === undefined ? defaultIconSource : { uri: image };\n\n  const iconView = (\n    <Image resizeMode=\"contain\" style={iconStyle} source={iconSource} />\n  );\n\n  const languagesView = () => {\n    const { languages } = survey;\n\n    // if there's only one language or no languages, no need to display\n    if (!languages || !languages.length || languages.length <= 1) return null;\n\n    const languageView = languages.map((lang, index) => (\n      <TouchableOpacity\n        key={index}\n        onPress={() => {\n          onLanguageSelect && onLanguageSelect(lang);\n        }}\n      >\n        <Text\n          style={[\n            styles.language_label,\n            {\n              color: lang !== language ? hexCode : fontColor,\n            },\n          ]}\n        >\n          {getLanguageBy(lang)}\n        </Text>\n      </TouchableOpacity>\n    ));\n    return <View style={styles.languages}>{languageView}</View>;\n  };\n  const buttonStyle = [styles.button, { backgroundColor: hexCode }];\n\n  const containerStyle = [\n    styles.headerContainer,\n    { paddingTop: insets.top },\n    {\n      backgroundColor,\n    },\n  ];\n  const titleStyle = [styles.headerTitle, { color: fontColor }];\n  const headerIconStyle = { tintColor: hexCode };\n  return (\n    <ScrollView contentContainerStyle={[styles.container, { backgroundColor }]}>\n      <View style={containerStyle}>\n        <View style={styles.headerRowContainer}>\n          <TouchableOpacity style={styles.closeButton} onPress={onClose}>\n            <Image\n              style={headerIconStyle}\n              source={require('../assets/icClose24Px.png')}\n            />\n          </TouchableOpacity>\n          <Text style={titleStyle} numberOfLines={1}>\n            {surveyName}\n          </Text>\n        </View>\n      </View>\n      <View style={styles.main}>\n        {iconView}\n        <Text style={[styles.title, { color: fontColor }]}>{surveyName}</Text>\n        {!!welcomeTextPlain && (\n          <Text style={[styles.subtitle, { color: fontColor }]}>\n            {welcomeTextPlain}\n          </Text>\n        )}\n        <TouchableOpacity style={buttonStyle} onPress={onStart}>\n          <Text style={styles.buttonTitle}>{takeSurvey}</Text>\n        </TouchableOpacity>\n      </View>\n      {languagesView()}\n    </ScrollView>\n  );\n};\n\nexport default StartScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: Colors.white,\n    flex: 1,\n    alignItems: 'center',\n  },\n  main: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingHorizontal: 38,\n    width: '100%',\n  },\n  title: {\n    textAlign: 'center',\n    marginTop: 12,\n    fontSize: 24,\n    opacity: 0.9,\n    lineHeight: 27,\n  },\n  subtitle: {\n    lineHeight: 23,\n    marginTop: 12,\n    fontSize: 16,\n    textAlign: 'center',\n    opacity: 0.72,\n  },\n  button: {\n    marginTop: 31,\n    paddingVertical: 12,\n    paddingHorizontal: 30,\n    borderRadius: 20,\n    overflow: 'hidden',\n  },\n  buttonTitle: {\n    color: Colors.white,\n    fontSize: 16,\n    fontWeight: '500',\n    letterSpacing: 0,\n    textAlign: 'center',\n  },\n  language_label: {\n    fontSize: 13,\n    paddingHorizontal: 8,\n  },\n  languages: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    height: '12%',\n    maxHeight: 90,\n    flexWrap: 'wrap',\n    marginHorizontal: 30,\n  },\n  headerContainer: {\n    width: '100%',\n    paddingVertical: 15,\n    paddingHorizontal: 30,\n  },\n  headerRowContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    height: 25,\n    marginTop: 17,\n  },\n  closeButton: {\n    width: 25,\n    height: 25,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  headerTitle: {\n    fontSize: 17,\n    fontWeight: '600',\n    marginLeft: 10,\n    marginRight: 30,\n    textAlign: 'center',\n    flexGrow: 1,\n  },\n});\n"]}