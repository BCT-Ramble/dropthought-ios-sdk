{"version":3,"sources":["SliderDragQuestionConstants.js"],"names":["veryAngry","require","sad","neutral","happy","veryHappy","faceList","sliderRatingAboveThumbFace","min","number","max","definition2","definition3","definition4","scale","tranNumber","interval","mapping","Math","floor"],"mappings":";;;;;;;AAAA,MAAMA,SAAS,GAAGC,OAAO,CAAC,kCAAD,CAAzB;;AACA,MAAMC,GAAG,GAAGD,OAAO,CAAC,6BAAD,CAAnB;;AACA,MAAME,OAAO,GAAGF,OAAO,CAAC,iCAAD,CAAvB;;AACA,MAAMG,KAAK,GAAGH,OAAO,CAAC,+BAAD,CAArB;;AACA,MAAMI,SAAS,GAAGJ,OAAO,CAAC,oCAAD,CAAzB;AAEA;AACA;AACA;;;AACO,MAAMK,QAAQ,GAAG,CAACN,SAAD,EAAYE,GAAZ,EAAiBC,OAAjB,EAA0BC,KAA1B,EAAiCC,SAAjC,CAAjB;AAEP;AACA;AACA;AACA;AACA;AACA;;;;AACO,MAAME,0BAA0B,GAAG,CAACC,GAAD,EAAMC,MAAN,EAAcC,GAAd,KAAsB;AAC9D,QAAMC,WAAW,GAAG,CAAC,CAAD,EAAI,CAAJ,CAApB;AACA,QAAMC,WAAW,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAApB;AACA,QAAMC,WAAW,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAApB;AACA,QAAMC,KAAK,GAAGJ,GAAG,GAAGF,GAAN,GAAY,CAA1B;AACA,QAAMO,UAAU,GAAGN,MAAM,GAAGD,GAA5B;;AACA,UAAQM,KAAR;AACE,SAAK,CAAL;AACE,aAAOR,QAAQ,CAACK,WAAW,CAACI,UAAD,CAAZ,CAAf;;AACF,SAAK,CAAL;AACE,aAAOT,QAAQ,CAACM,WAAW,CAACG,UAAD,CAAZ,CAAf;;AACF,SAAK,CAAL;AACE,aAAOT,QAAQ,CAACO,WAAW,CAACE,UAAD,CAAZ,CAAf;AANJ;;AAQA,QAAMC,QAAQ,GAAGF,KAAK,GAAG,CAAzB;AACA,QAAMG,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWJ,UAAU,GAAGC,QAAxB,CAAhB;AACA,SAAOV,QAAQ,CAACW,OAAD,CAAf;AACD,CAjBM;AAmBP;AACA;AACA","sourcesContent":["const veryAngry = require('../assets/ic_slider_very_bad.png');\nconst sad = require('../assets/ic_slider_sad.png');\nconst neutral = require('../assets/ic_slider_neutral.png');\nconst happy = require('../assets/ic_slider_happy.png');\nconst veryHappy = require('../assets/ic_slider_very_happy.png');\n\n/**\n * @type {ImageSourcePropType[]}\n */\nexport const faceList = [veryAngry, sad, neutral, happy, veryHappy];\n\n/**\n * @param {number} min\n * @param {number} number\n * @param {number} max\n * @returns {ImageSourcePropType}\n */\nexport const sliderRatingAboveThumbFace = (min, number, max) => {\n  const definition2 = [0, 4];\n  const definition3 = [1, 2, 3];\n  const definition4 = [0, 1, 3, 4];\n  const scale = max - min + 1;\n  const tranNumber = number - min;\n  switch (scale) {\n    case 2:\n      return faceList[definition2[tranNumber]];\n    case 3:\n      return faceList[definition3[tranNumber]];\n    case 4:\n      return faceList[definition4[tranNumber]];\n  }\n  const interval = scale / 5;\n  const mapping = Math.floor(tranNumber / interval);\n  return faceList[mapping];\n};\n\n/**\n * @typedef {import('react-native').ImageSourcePropType} ImageSourcePropType\n */\n"]}