{"version":3,"sources":["data.ts"],"names":["isEmpty","prop","pipe","findIndex","equals","curry","nth","map","EvaluateRuleSet","QuestionBrandType","Other","QuestionMetaDataType","Name","Email","Phone","Number","Date","String","getOptionsFromQuestion","question","options","option","isOther","title","questionBrand","push","metaDataTypeQuestionValidator","value","type","metaDataType","reg","isNaN","test","mandatoryQuestionValidator","feedback","mandatory","answers","isAnswered","undefined","answer","length","isVaildTextInput","questionFeedbackValidator","getPageIndexFromPageId","pageId","survey","transformFeedbacks","pageIndex","feedbacksMap","defaultPageIQAData","questionId","textOrIndexArr","defaultIQAData","s","toString","otherFlag","nextPage","defaultNextPage","pageOrder","pageRuleSet","rules","iQADataArr","nextPageId","scaleLogic","option3LoopFaceTable","Map","require","option3TransformTable","option4LoopFaceTable","option4TransformTable"],"mappings":"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","sourcesContent":["import { isEmpty, prop, pipe, findIndex, equals, curry, nth, map } from 'ramda';\nimport { EvaluateRuleSet } from './dt-common-lib';\nimport type { Feedback, Question, Option, Survey } from '../data';\n\n/** @enum {'other'} */\nexport const QuestionBrandType = {\n  Other: 'other',\n};\n\n/** @enum {'Date'|'Name'|'Email'|'Phone'|'Number'|'String'} */\nexport const QuestionMetaDataType = {\n  Name: 'Name',\n  Email: 'Email',\n  Phone: 'Phone',\n  Number: 'Number',\n  Date: 'Date',\n  String: 'String',\n};\n\n/**\n * given a Question type, return ['option label1', 'option label2', 'option label3', true]\n * if the type is boolean at the last, it means it is an \"other\" option\n */\nexport const getOptionsFromQuestion = (question: Question): Option[] => {\n  // copy the original array\n  // @ts-ignore\n  const options = (question.options ?? []).map((option: Option) => ({\n    isOther: false,\n    title: option,\n  }));\n  // add additional option when the question brand type is \"other\"\n  if (question.questionBrand === QuestionBrandType.Other) {\n    options.push({\n      isOther: true,\n      // @ts-ignore\n      title: '',\n    });\n  }\n  // @ts-ignore\n  return options;\n};\n\n/**\n * validate if value match metaDataType question' rule\n */\nexport const metaDataTypeQuestionValidator = (\n  question: Question,\n  value: string\n): boolean => {\n  // if it is not a open ended question no need to check, return valid\n  if (question.type !== 'open') return true;\n\n  // no need to check the value when no value or no type\n  if (!value || !question.metaDataType) return true;\n\n  let reg = null;\n\n  switch (question.metaDataType) {\n    case QuestionMetaDataType.Number:\n      // @ts-ignore\n      return !isNaN(value);\n    case QuestionMetaDataType.Date:\n      reg =\n        /^((?:\\d{4}-\\d{2}-\\d{2})|(?:\\d{4}\\/\\d{2}\\/\\d{2})|(?:\\d{4}:\\d{2}:\\d{2}))?( )?(\\d{2}:\\d{2}:\\d{2})?$/;\n      return reg.test(value);\n    case QuestionMetaDataType.Phone:\n      reg = /^\\+[1-9]\\d{1,14}$/;\n      return reg.test(value);\n    case QuestionMetaDataType.Email:\n      reg =\n        /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      return reg.test(value);\n    default:\n      // no need to check the value\n      return true;\n  }\n};\n\n/**\n * if mandatory question has feedback\n */\nexport const mandatoryQuestionValidator = (\n  question: Question,\n  feedback: Feedback | {} = {}\n): boolean => {\n  if (!question.mandatory) return true;\n  // @ts-ignore\n  const { answers } = feedback;\n  // check if feedback has answer\n  const isAnswered = answers !== undefined;\n  const answer = isAnswered ? answers[answers.length - 1] : '';\n  // check if answer is vaild\n  const isVaildTextInput =\n    typeof answer === 'string' ? answer.length >= 3 : true;\n  return isAnswered && isVaildTextInput;\n};\n\n/**\n * validate if question's feedback is valid:\n * metadata type value check, mandatory check\n */\nexport const questionFeedbackValidator = (\n  question: Question | {} = {},\n  feedback: Feedback | {} = {}\n): boolean => {\n  return (\n    // @ts-ignore\n    metaDataTypeQuestionValidator(question, feedback.answers?.[0]) &&\n    // @ts-ignore\n    mandatoryQuestionValidator(question, feedback)\n  );\n};\n\n/**\n * return -1 if not existed\n * @type {(pageId: string, survey: Survey) => number}\n */\nexport const getPageIndexFromPageId = curry((pageId: string, survey: Survey) =>\n  // @ts-ignore\n  pipe(prop('pageOrder'), findIndex(equals(pageId)))(survey)\n);\n\n/**\n * only keep the feedbacks that belongs to a certain page\n * if a question is not answered => textOrIndexArr: ['']\n * also convert the answers to 0-based\n * transform it to IQAData type\n * @type {(pageIndex: number, survey: Survey, feedbacksMap: {[questionId: string]: Feedback} ) => [IQAData]}\n */\nconst transformFeedbacks = (\n  pageIndex: number,\n  survey: Survey,\n  feedbacksMap: { [questionId: string]: Feedback }\n) => {\n  // get the default page IQAData\n  /** @type {IQAData[]} */\n  const defaultPageIQAData = pipe(\n    prop('pages'),\n    // @ts-ignore\n    nth(pageIndex),\n    prop('questions'),\n    map((question) => ({\n      // @ts-ignore\n      questionId: question.questionId,\n      textOrIndexArr: [''],\n    }))\n    // @ts-ignore\n  )(survey);\n\n  // if feedback has answers, use it to replace the default\n  return defaultPageIQAData.map((defaultIQAData) => {\n    const feedback = feedbacksMap[defaultIQAData.questionId];\n    if (feedback && !isEmpty(feedback.answers)) {\n      return {\n        questionId: defaultIQAData.questionId,\n        // @ts-ignore\n        textOrIndexArr: feedback.answers.map((s) => s.toString()),\n        otherFlag: feedback.otherFlag,\n      };\n    }\n    return defaultIQAData;\n  });\n};\n\nexport function nextPage(\n  pageIndex: number,\n  pageId: string,\n  feedbacksMap: { [questionId: string]: Feedback },\n  survey: Survey\n): number {\n  const defaultNextPage = () =>\n    pageIndex >= survey.pageOrder.length - 1 ? -1 : pageIndex + 1;\n\n  // if there's no rule, go to default next page\n  const pageRuleSet = survey.rules[pageId];\n  if (!pageRuleSet || isEmpty(pageRuleSet)) {\n    return defaultNextPage();\n  }\n\n  // apply the rule\n  const iQADataArr = transformFeedbacks(pageIndex, survey, feedbacksMap);\n  const nextPageId = EvaluateRuleSet(pageRuleSet, iQADataArr);\n  if (!nextPageId) {\n    return defaultNextPage();\n  }\n\n  // next page index\n  return getPageIndexFromPageId(nextPageId, survey);\n}\n\nexport const scaleLogic: {\n  [name in string]: number[];\n} = {\n  '2': [0, 4],\n  '3': [0, 2, 4],\n  '4': [0, 2, 3, 4],\n  '5': [0, 1, 2, 3, 4],\n};\n\nexport const option3LoopFaceTable = new Map([\n  [\n    '1',\n    require('../assets/animations/smiley_option3/option3_smile_1_loop.json'),\n  ],\n  [\n    '2',\n    require('../assets/animations/smiley_option3/option3_smile_2_loop.json'),\n  ],\n  [\n    '3',\n    require('../assets/animations/smiley_option3/option3_smile_3_loop.json'),\n  ],\n  [\n    '4',\n    require('../assets/animations/smiley_option3/option3_smile_4_loop.json'),\n  ],\n  [\n    '5',\n    require('../assets/animations/smiley_option3/option3_smile_5_loop.json'),\n  ],\n]);\n\nexport const option3TransformTable = new Map([\n  [\n    '1-2',\n    require('../assets/animations/smiley_option3/option3_smile_1-2_transform.json'),\n  ],\n  [\n    '2-3',\n    require('../assets/animations/smiley_option3/option3_smile_2-3_transform.json'),\n  ],\n  [\n    '3-4',\n    require('../assets/animations/smiley_option3/option3_smile_3-4_transform.json'),\n  ],\n  [\n    '4-5',\n    require('../assets/animations/smiley_option3/option3_smile_4-5_transform.json'),\n  ],\n  [\n    '1-3',\n    require('../assets/animations/smiley_option3/option3_smile_1-3_transform.json'),\n  ],\n  [\n    '1-5',\n    require('../assets/animations/smiley_option3/option3_smile_1-5_transform.json'),\n  ],\n  [\n    '3-5',\n    require('../assets/animations/smiley_option3/option3_smile_3-5_transform.json'),\n  ],\n]);\n\nexport const option4LoopFaceTable = new Map([\n  [\n    '1A',\n    require('../assets/animations/smiley_option4/option4_star_1_loop.json'),\n  ],\n  [\n    '2B',\n    require('../assets/animations/smiley_option4/option4_star_2_loop.json'),\n  ],\n  ['2C', 'Star 2C'],\n  ['2E', 'Star 2E'],\n  [\n    '3C',\n    require('../assets/animations/smiley_option4/option4_star_3_loop.json'),\n  ],\n  ['3D', 'Star 3D'],\n  ['3E', 'Star 3E'],\n  [\n    '4D',\n    require('../assets/animations/smiley_option4/option4_star_4_loop.json'),\n  ],\n  ['4E', 'Star 4E'],\n  [\n    '5E',\n    require('../assets/animations/smiley_option4/option4_star_5_loop.json'),\n  ],\n]);\nexport const option4TransformTable = new Map([\n  [\n    '1A-2B',\n    require('../assets/animations/smiley_option4/option4_star_2_transform.json'),\n  ],\n  [\n    '2B-3C',\n    require('../assets/animations/smiley_option4/option4_star_3_transform.json'),\n  ],\n  [\n    '3C-4D',\n    require('../assets/animations/smiley_option4/option4_star_4_transform.json'),\n  ],\n  [\n    '4D-5E',\n    require('../assets/animations/smiley_option4/option4_star_5_transform.json'),\n  ],\n  ['1A-2E', 'From 1A to 2E'],\n  ['1A-2C', 'From 1A to 2C'],\n  ['2C-3E', 'From 2C to 3E'],\n  ['2C-3D', 'From 2C to 3D'],\n  ['3D-4E', 'From 3D to 4E'],\n]);\n\n/** @typedef {import('./dt-common-lib/IfcRule').IQAData} IQAData */\n"]}