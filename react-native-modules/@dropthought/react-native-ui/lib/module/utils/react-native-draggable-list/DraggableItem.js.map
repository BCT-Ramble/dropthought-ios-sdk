{"version":3,"sources":["DraggableItem.tsx"],"names":["React","useEffect","useRef","useState","Animated","PanResponder","DraggableItem","children","index","onDrag","onDragEnd","onLayout","forceReset","movements","valRef","x","y","isDragging","setIsDragging","isDraggingRef","longPressTimeout","pan","ValueXY","panResponder","create","onStartShouldSetPanResponder","onPanResponderGrant","_e","_gesture","current","setTimeout","setOffset","_value","setValue","onPanResponderMove","_","gesture","dy","onPanResponderRelease","clearTimeout","onPanResponderTerminate","_gestureState","addListener","value","shouldMoveRef","spring","toValue","useNativeDriver","start","panStyle","transform","getTranslateTransform","zIndex","draggingStyle","opacity","panHandlers","memo"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { Animated, PanResponder, LayoutChangeEvent } from 'react-native';\n\ntype DraggableItemProps = {\n  children: React.ReactNode;\n  index: number;\n  onDrag: (y: number) => void;\n  onDragEnd: (pan: Animated.ValueXY) => void;\n  onLayout: (event: LayoutChangeEvent) => void;\n  forceReset: boolean;\n  movements: number;\n};\n\nfunction DraggableItem({\n  children,\n  index,\n  onDrag,\n  onDragEnd,\n  onLayout,\n  forceReset,\n  movements,\n}: DraggableItemProps) {\n  const valRef = useRef({ x: 0, y: 0 });\n  const [isDragging, setIsDragging] = useState(false);\n  const isDraggingRef = useRef(false);\n\n  const longPressTimeout = useRef<NodeJS.Timeout>();\n\n  const pan = useState(new Animated.ValueXY())[0];\n  const panResponder = useRef(\n    PanResponder.create({\n      onStartShouldSetPanResponder: () => {\n        return true;\n      },\n      onPanResponderGrant: (_e, _gesture) => {\n        longPressTimeout.current = setTimeout(() => {\n          setIsDragging(true);\n          isDraggingRef.current = true;\n          //@ts-ignore\n          pan.setOffset({ x: pan.x._value, y: pan.y._value });\n          pan.setValue({ x: 0, y: 0 });\n        }, 200);\n      },\n      onPanResponderMove: (_, gesture) => {\n        if (isDraggingRef.current) {\n          pan.y.setValue(gesture.dy);\n        }\n      },\n      onPanResponderRelease: (_e, _gesture) => {\n        if (longPressTimeout.current) {\n          clearTimeout(longPressTimeout.current);\n        }\n        if (isDraggingRef.current) {\n          setIsDragging(false);\n          isDraggingRef.current = false;\n          onDragEnd && onDragEnd(pan);\n        }\n      },\n      onPanResponderTerminate(_e, _gestureState) {\n        if (longPressTimeout.current) {\n          clearTimeout(longPressTimeout.current);\n        }\n      },\n    })\n  );\n\n  useEffect(() => {\n    pan.addListener((value) => {\n      valRef.current = value;\n      if (isDraggingRef.current) {\n        onDrag && onDrag(value.y);\n      }\n    });\n  }, [onDrag, pan]);\n\n  const shouldMoveRef = useRef(movements);\n  useEffect(() => {\n    if (shouldMoveRef.current !== 0 && movements === 0) {\n      shouldMoveRef.current = movements;\n      Animated.spring(pan, {\n        toValue: { x: 0, y: movements },\n        useNativeDriver: true,\n      }).start();\n    } else if (shouldMoveRef.current === 0 && movements !== 0) {\n      shouldMoveRef.current = movements;\n      Animated.spring(pan, {\n        toValue: { x: 0, y: movements },\n        useNativeDriver: true,\n      }).start();\n    }\n  }, [pan, movements, index]);\n\n  useEffect(() => {\n    if (forceReset) {\n      pan.setValue({ x: 0, y: 0 });\n    }\n  }, [forceReset, pan]);\n\n  const panStyle = {\n    transform: pan.getTranslateTransform(),\n    zIndex: 0,\n  };\n\n  const draggingStyle = {\n    zIndex: isDragging ? 2 : 0,\n    opacity: isDragging ? 0.3 : 1,\n  };\n  return (\n    <Animated.View\n      {...panResponder.current.panHandlers}\n      style={[\n        panStyle,\n        draggingStyle,\n        { transform: pan.getTranslateTransform() },\n      ]}\n      onLayout={onLayout}\n    >\n      {children}\n    </Animated.View>\n  );\n}\n\nexport default React.memo(DraggableItem);\n"]}