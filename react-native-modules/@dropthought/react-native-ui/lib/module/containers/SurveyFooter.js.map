{"version":3,"sources":["SurveyFooter.tsx"],"names":["React","Image","StyleSheet","Text","TouchableOpacity","View","Platform","useKeyboard","Colors","GlobalStyle","i18n","useTheme","COLOR_SCHEMES","isAndroid","OS","SurveyFooter","props","rtl","dir","submitSurvey","surveyColor","isFirstPage","isLastPage","onPrevPage","onNextPage","backgroundColor","keyboardShown","containerStyle","styles","container","flexRowReverse","colorScheme","isDarkMode","dark","iconStyle","icon","tintColor","white","iconBgStyle","iconBg","opacity","submitDisabled","setSubmitDisabled","useState","leftIcon","require","rightIcon","submitButtonStyle","centerButtonContainer","borderRadius","language","textStyle","submitText","lineHeight","undefined","submitButton","row","setTimeout","leftButton","leftButtonContainer","rightButton","rightButtonContainer","create","alignItems","width","height","position","left","right","minWidth","top","paddingHorizontal","paddingVertical","color","fontSize","fontWeight","memo"],"mappings":"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","sourcesContent":["/**\n * @description a extension UI/UX component of SurveyScreenLayout\n * it displays three buttons:\n *  - Back, displayed when page is > 0\n *  - Next, displayed when page is not end\n *  - Submit, displayed when page is the last page\n * When \"Back\" is pressed, call props.onPrevPage\n * When \"Next\" or \"Submit\" is pressed, call props.onNextPage\n */\nimport * as React from 'react';\nimport {\n  Image,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n  Platform,\n} from 'react-native';\nimport { useKeyboard } from '@react-native-community/hooks';\nimport { Colors, GlobalStyle } from '../styles';\nimport i18n from '../translation';\nimport { useTheme, COLOR_SCHEMES } from '../contexts/theme';\n\ntype Props = {\n  submitSurvey: string;\n  surveyColor: string;\n  isFirstPage: boolean;\n  isLastPage: boolean;\n  onPrevPage: () => void;\n  onNextPage: () => void;\n\n  // To apply backgroundColor for those smiley question which has full backgroundColor\n  backgroundColor?: string;\n};\n\nconst isAndroid = Platform.OS === 'android';\n\nconst SurveyFooter = (props: Props) => {\n  const rtl = i18n.dir() === 'rtl';\n  const {\n    submitSurvey,\n    surveyColor,\n    isFirstPage,\n    isLastPage,\n    onPrevPage,\n    onNextPage,\n    backgroundColor,\n  } = props;\n\n  const { keyboardShown } = useKeyboard();\n\n  const containerStyle = [\n    styles.container,\n    rtl && GlobalStyle.flexRowReverse,\n    {\n      backgroundColor,\n    },\n  ];\n  const { colorScheme } = useTheme();\n  const isDarkMode = colorScheme === COLOR_SCHEMES.dark;\n  const iconStyle = [\n    styles.icon,\n    { tintColor: isDarkMode ? Colors.white : surveyColor },\n  ];\n  const iconBgStyle = [\n    styles.iconBg,\n    { tintColor: surveyColor, opacity: isDarkMode ? 1 : 0.1 },\n  ];\n\n  const [submitDisabled, setSubmitDisabled] = React.useState(false);\n\n  const leftIcon = (\n    <>\n      <Image\n        style={iconBgStyle}\n        source={require('../assets/icPreviousButtonBg.png')}\n      />\n      <Image\n        style={iconStyle}\n        source={require('../assets/icPreviousButton.png')}\n      />\n    </>\n  );\n\n  const rightIcon = (\n    <>\n      <Image\n        style={iconBgStyle}\n        source={require('../assets/icNextButtonBg.png')}\n      />\n      <Image style={iconStyle} source={require('../assets/icNextButton.png')} />\n    </>\n  );\n\n  const submitButtonStyle = [\n    styles.centerButtonContainer,\n    {\n      backgroundColor: surveyColor,\n      borderRadius: i18n.language === 'te' ? 25 : 20,\n    },\n  ];\n\n  const textStyle = [\n    styles.submitText,\n    { lineHeight: i18n.language === 'te' ? 26 : undefined },\n  ];\n\n  const submitButton = (\n    <View style={GlobalStyle.row}>\n      <TouchableOpacity\n        style={submitButtonStyle}\n        disabled={submitDisabled}\n        onPress={() => {\n          setSubmitDisabled(true);\n          setTimeout(() => setSubmitDisabled(false), 1000);\n          onNextPage();\n        }}\n      >\n        <Text style={textStyle}>{submitSurvey}</Text>\n      </TouchableOpacity>\n    </View>\n  );\n\n  const leftButton = (\n    <TouchableOpacity style={styles.leftButtonContainer} onPress={onPrevPage}>\n      {rtl ? rightIcon : leftIcon}\n    </TouchableOpacity>\n  );\n\n  const rightButton = (\n    <TouchableOpacity style={styles.rightButtonContainer} onPress={onNextPage}>\n      {rtl ? leftIcon : rightIcon}\n    </TouchableOpacity>\n  );\n\n  // hide this bar when it is android and keyboard is shown\n  if (isAndroid && keyboardShown) return null;\n  return (\n    <View style={containerStyle}>\n      {isFirstPage ? null : leftButton}\n      {isLastPage ? submitButton : rightButton}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    width: '100%',\n    height: 100,\n  },\n  leftButtonContainer: {\n    position: 'absolute',\n    left: 0,\n  },\n  rightButtonContainer: {\n    position: 'absolute',\n    right: 0,\n  },\n  centerButtonContainer: {\n    minWidth: 100,\n    borderRadius: 20,\n    top: 14,\n    paddingHorizontal: 30,\n    paddingVertical: 12,\n  },\n  submitText: {\n    color: Colors.white,\n    fontSize: 16,\n    fontWeight: '600',\n  },\n  icon: {\n    position: 'absolute',\n    top: 21,\n    left: 13,\n  },\n  iconBg: {\n    opacity: 0.5,\n  },\n});\n\nexport default React.memo(SurveyFooter);\n"]}