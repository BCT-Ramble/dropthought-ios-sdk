{"version":3,"sources":["SurveyFooter.tsx"],"names":["React","Image","StyleSheet","Text","TouchableOpacity","View","Colors","GlobalStyle","i18n","useTheme","COLOR_SCHEMES","SurveyFooter","props","rtl","dir","surveyColor","isFirstPage","isLastPage","onPrevPage","onNextPage","backgroundColor","containerStyle","styles","container","flexRowReverse","colorScheme","isDarkMode","dark","iconStyle","icon","tintColor","white","iconBgStyle","iconBg","opacity","submitButtonStyle","centerButtonContainer","submitDisabled","setSubmitDisabled","useState","submitButton","submitText","t","leftButton","leftButtonContainer","require","rightButton","rightButtonContainer","create","flexDirection","justifyContent","width","height","position","left","right","alignItems","borderRadius","top","color","fontSize","fontWeight","memo"],"mappings":"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","sourcesContent":["/**\n * @description a extension UI/UX component of SurveyScreenLayout\n * it displays three buttons:\n *  - Back, displayed when page is > 0\n *  - Next, displayed when page is not end\n *  - Submit, displayed when page is the last page\n * When \"Back\" is pressed, call props.onPrevPage\n * When \"Next\" or \"Submit\" is pressed, call props.onNextPage\n */\nimport * as React from 'react';\nimport { Image, StyleSheet, Text, TouchableOpacity, View } from 'react-native';\nimport { Colors, GlobalStyle } from '../styles';\nimport i18n from '../translation';\nimport { useTheme, COLOR_SCHEMES } from '../contexts/theme';\n\ntype Props = {\n  surveyColor: string;\n  isFirstPage: boolean;\n  isLastPage: boolean;\n  onPrevPage: () => void;\n  onNextPage: () => void;\n\n  // To apply backgroundColor for those smiley question which has full backgroundColor\n  backgroundColor?: string;\n};\n\nconst SurveyFooter = (props: Props) => {\n  const rtl = i18n.dir() === 'rtl';\n  const {\n    surveyColor,\n    isFirstPage,\n    isLastPage,\n    onPrevPage,\n    onNextPage,\n    backgroundColor,\n  } = props;\n\n  const containerStyle = [\n    styles.container,\n    rtl && GlobalStyle.flexRowReverse,\n    {\n      backgroundColor,\n    },\n  ];\n  const { colorScheme } = useTheme();\n  const isDarkMode = colorScheme === COLOR_SCHEMES.dark;\n  const iconStyle = [\n    styles.icon,\n    { tintColor: isDarkMode ? Colors.white : surveyColor },\n  ];\n  const iconBgStyle = [\n    styles.iconBg,\n    { tintColor: surveyColor, opacity: isDarkMode ? 1 : 0.1 },\n  ];\n\n  const submitButtonStyle = [\n    styles.centerButtonContainer,\n    { backgroundColor: surveyColor },\n  ];\n\n  const [submitDisabled, setSubmitDisabled] = React.useState(false);\n\n  const submitButton = (\n    <TouchableOpacity\n      style={submitButtonStyle}\n      disabled={submitDisabled}\n      onPress={() => {\n        setSubmitDisabled(true);\n        onNextPage();\n      }}\n    >\n      <Text style={styles.submitText}>{i18n.t('survey:survey-submit')}</Text>\n    </TouchableOpacity>\n  );\n\n  const leftButton = (\n    <TouchableOpacity style={styles.leftButtonContainer} onPress={onPrevPage}>\n      <>\n        <Image\n          style={iconBgStyle}\n          source={require('../assets/icPreviousButtonBg.png')}\n        />\n        <Image\n          style={iconStyle}\n          source={require('../assets/icPreviousButton.png')}\n        />\n      </>\n    </TouchableOpacity>\n  );\n\n  const rightButton = (\n    <TouchableOpacity style={styles.rightButtonContainer} onPress={onNextPage}>\n      <>\n        <Image\n          style={iconBgStyle}\n          source={require('../assets/icNextButtonBg.png')}\n        />\n        <Image\n          style={iconStyle}\n          source={require('../assets/icNextButton.png')}\n        />\n      </>\n    </TouchableOpacity>\n  );\n\n  return (\n    <View style={containerStyle}>\n      {isFirstPage ? null : leftButton}\n      {isLastPage ? submitButton : rightButton}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    width: '100%',\n    height: 100,\n  },\n  leftButtonContainer: {\n    position: 'absolute',\n    left: 0,\n  },\n  rightButtonContainer: {\n    position: 'absolute',\n    right: 0,\n  },\n  centerButtonContainer: {\n    width: 100,\n    height: 40,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 20,\n    top: 14,\n  },\n  submitText: {\n    color: Colors.white,\n    fontSize: 17,\n    fontWeight: '600',\n  },\n  icon: {\n    position: 'absolute',\n    top: 21,\n    left: 13,\n  },\n  iconBg: {\n    opacity: 0.5,\n  },\n});\n\nexport default React.memo(SurveyFooter);\n"]}