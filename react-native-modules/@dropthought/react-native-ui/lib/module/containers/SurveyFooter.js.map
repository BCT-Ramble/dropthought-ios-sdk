{"version":3,"sources":["SurveyFooter.tsx"],"names":["React","Image","StyleSheet","Text","TouchableOpacity","View","Platform","useSafeAreaInsets","useKeyboard","Colors","GlobalStyle","i18n","useTheme","COLOR_SCHEMES","isAndroid","OS","SurveyFooter","props","rtl","dir","submitSurvey","surveyColor","isFirstPage","isLastPage","onPrevPage","onNextPage","backgroundColor","insets","keyboardShown","insetsBottom","bottom","containerStyle","styles","container","flexRowReverse","paddingBottom","colorScheme","isDarkMode","dark","iconStyle","icon","tintColor","white","iconBgStyle","iconBg","opacity","submitButtonStyle","centerButtonContainer","submitDisabled","setSubmitDisabled","useState","leftIcon","require","rightIcon","submitButton","setTimeout","submitText","leftButton","leftButtonContainer","rightButton","rightButtonContainer","create","flexDirection","justifyContent","width","height","position","left","right","alignItems","borderRadius","top","color","fontSize","fontWeight","memo"],"mappings":"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","sourcesContent":["/**\n * @description a extension UI/UX component of SurveyScreenLayout\n * it displays three buttons:\n *  - Back, displayed when page is > 0\n *  - Next, displayed when page is not end\n *  - Submit, displayed when page is the last page\n * When \"Back\" is pressed, call props.onPrevPage\n * When \"Next\" or \"Submit\" is pressed, call props.onNextPage\n */\nimport * as React from 'react';\nimport {\n  Image,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n  Platform,\n} from 'react-native';\n//@ts-ignore\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport { useKeyboard } from '@react-native-community/hooks';\nimport { Colors, GlobalStyle } from '../styles';\nimport i18n from '../translation';\nimport { useTheme, COLOR_SCHEMES } from '../contexts/theme';\n\ntype Props = {\n  submitSurvey: string;\n  surveyColor: string;\n  isFirstPage: boolean;\n  isLastPage: boolean;\n  onPrevPage: () => void;\n  onNextPage: () => void;\n\n  // To apply backgroundColor for those smiley question which has full backgroundColor\n  backgroundColor?: string;\n};\n\nconst isAndroid = Platform.OS === 'android';\n\nconst SurveyFooter = (props: Props) => {\n  const rtl = i18n.dir() === 'rtl';\n  const {\n    submitSurvey,\n    surveyColor,\n    isFirstPage,\n    isLastPage,\n    onPrevPage,\n    onNextPage,\n    backgroundColor,\n  } = props;\n\n  const insets = useSafeAreaInsets();\n  const { keyboardShown } = useKeyboard();\n\n  const insetsBottom =\n    // if it is android, and the insets bottom is not normal,\n    // maybe it is because the keyboard is showed, don't use this insets\n    isAndroid && insets.bottom >= 100 ? 0 : insets.bottom;\n\n  const containerStyle = [\n    styles.container,\n    rtl && GlobalStyle.flexRowReverse,\n    {\n      backgroundColor,\n      paddingBottom: insetsBottom || 15,\n    },\n  ];\n  const { colorScheme } = useTheme();\n  const isDarkMode = colorScheme === COLOR_SCHEMES.dark;\n  const iconStyle = [\n    styles.icon,\n    { tintColor: isDarkMode ? Colors.white : surveyColor },\n  ];\n  const iconBgStyle = [\n    styles.iconBg,\n    { tintColor: surveyColor, opacity: isDarkMode ? 1 : 0.1 },\n  ];\n\n  const submitButtonStyle = [\n    styles.centerButtonContainer,\n    { backgroundColor: surveyColor },\n  ];\n\n  const [submitDisabled, setSubmitDisabled] = React.useState(false);\n\n  const leftIcon = (\n    <>\n      <Image\n        style={iconBgStyle}\n        source={require('../assets/icPreviousButtonBg.png')}\n      />\n      <Image\n        style={iconStyle}\n        source={require('../assets/icPreviousButton.png')}\n      />\n    </>\n  );\n\n  const rightIcon = (\n    <>\n      <Image\n        style={iconBgStyle}\n        source={require('../assets/icNextButtonBg.png')}\n      />\n      <Image style={iconStyle} source={require('../assets/icNextButton.png')} />\n    </>\n  );\n\n  const submitButton = (\n    <TouchableOpacity\n      style={submitButtonStyle}\n      disabled={submitDisabled}\n      onPress={() => {\n        setSubmitDisabled(true);\n        setTimeout(() => setSubmitDisabled(false), 1000);\n        onNextPage();\n      }}\n    >\n      <Text style={styles.submitText}>{submitSurvey}</Text>\n    </TouchableOpacity>\n  );\n\n  const leftButton = (\n    <TouchableOpacity style={styles.leftButtonContainer} onPress={onPrevPage}>\n      {rtl ? rightIcon : leftIcon}\n    </TouchableOpacity>\n  );\n\n  const rightButton = (\n    <TouchableOpacity style={styles.rightButtonContainer} onPress={onNextPage}>\n      {rtl ? leftIcon : rightIcon}\n    </TouchableOpacity>\n  );\n\n  // hide this bar when it is android and keyboard is shown\n  if (isAndroid && keyboardShown) return null;\n  return (\n    <View style={containerStyle}>\n      {isFirstPage ? null : leftButton}\n      {isLastPage ? submitButton : rightButton}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    width: '100%',\n    height: 100,\n  },\n  leftButtonContainer: {\n    position: 'absolute',\n    left: 0,\n  },\n  rightButtonContainer: {\n    position: 'absolute',\n    right: 0,\n  },\n  centerButtonContainer: {\n    width: 100,\n    height: 40,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 20,\n    top: 14,\n  },\n  submitText: {\n    color: Colors.white,\n    fontSize: 17,\n    fontWeight: '600',\n  },\n  icon: {\n    position: 'absolute',\n    top: 21,\n    left: 13,\n  },\n  iconBg: {\n    opacity: 0.5,\n  },\n});\n\nexport default React.memo(SurveyFooter);\n"]}