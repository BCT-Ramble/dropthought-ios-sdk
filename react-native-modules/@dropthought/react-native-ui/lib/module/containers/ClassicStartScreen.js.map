{"version":3,"sources":["ClassicStartScreen.tsx"],"names":["React","useEffect","useState","ScrollView","View","Text","Image","StyleSheet","TouchableOpacity","Colors","DimensionWidthType","useDimensionWidthType","Button","THEME_OPTION","useTheme","getLanguageBy","defaultIconSource","require","defaultIconSize","phone","tablet","ClassicStartScreen","onLanguageSelect","onStart","survey","dimensionWidthType","themeOption","hexCode","fontColor","backgroundColor","isPhone","styles","phoneStyles","tabletStyles","surveyProperty","surveyName","welcomeTextPlain","language","takeSurvey","image","imageHeight","setImageHeight","iconStyle","width","height","getSize","_","iconSource","undefined","uri","iconView","buttonWidth","languagesView","languages","length","languageView","map","lang","index","language_label","color","containerStyle","shareStyles","container","BIJLIRIDE","bijlirideBackgroundColor","main","title","subtitle","divider","takeSurveyButton","create","white","flex","alignItems","justifyContent","paddingHorizontal","textAlign","marginTop","fontSize","opacity","lineHeight","flexDirection","maxHeight","flexWrap","marginHorizontal"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n  ScrollView,\n  View,\n  Text,\n  Image,\n  StyleSheet,\n  TouchableOpacity,\n} from 'react-native';\nimport { Colors } from '../styles';\nimport {\n  DimensionWidthType,\n  useDimensionWidthType,\n} from '../hooks/useWindowDimensions';\nimport Button from '../components/Button';\nimport { THEME_OPTION, useTheme } from '../contexts/theme';\nimport type { Survey as OriginSurvey } from '../data';\nimport { getLanguageBy } from '../utils/LanguageUtils';\n\ntype Survey = OriginSurvey & {\n  languages: string[];\n};\n\nconst defaultIconSource = require('../assets/rating.png');\nconst defaultIconSize = {\n  [DimensionWidthType.phone]: 65,\n  [DimensionWidthType.tablet]: 72,\n};\n\ntype Props = {\n  onLanguageSelect: (language: string) => void;\n  onStart: () => void;\n  survey: Survey;\n};\n\nconst ClassicStartScreen = ({ onLanguageSelect, onStart, survey }: Props) => {\n  const dimensionWidthType = useDimensionWidthType();\n  const { themeOption, hexCode, fontColor, backgroundColor } = useTheme();\n\n  const isPhone = dimensionWidthType === DimensionWidthType.phone;\n  const styles = isPhone ? phoneStyles : tabletStyles;\n\n  const { surveyProperty, surveyName, welcomeTextPlain, language, takeSurvey } =\n    survey;\n  const { image } = surveyProperty;\n\n  const [imageHeight, setImageHeight] = useState(65);\n  const iconStyle = {\n    width: '100%',\n    height: imageHeight,\n  };\n\n  useEffect(() => {\n    Image.getSize(\n      image,\n      (_, height) => {\n        if (height < defaultIconSize[dimensionWidthType]) {\n          setImageHeight(height);\n        }\n      },\n      (_) => {}\n    );\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const iconSource = image === undefined ? defaultIconSource : { uri: image };\n\n  const iconView = (\n    <Image resizeMode=\"contain\" style={iconStyle} source={iconSource} />\n  );\n\n  const buttonWidth = isPhone ? 143 : 160;\n\n  const languagesView = () => {\n    const { languages } = survey;\n\n    // if there's only one language or no languages, no need to display\n    if (!languages || !languages.length || languages.length <= 1) return null;\n\n    const languageView = languages.map((lang, index) => (\n      <TouchableOpacity\n        key={index}\n        onPress={() => {\n          onLanguageSelect && onLanguageSelect(lang);\n        }}\n      >\n        <Text\n          style={[\n            styles.language_label,\n            {\n              color: lang !== language ? hexCode : fontColor,\n            },\n          ]}\n        >\n          {getLanguageBy(lang)}\n        </Text>\n      </TouchableOpacity>\n    ));\n    return <View style={styles.languages}>{languageView}</View>;\n  };\n\n  const containerStyle = [\n    shareStyles.container,\n    {\n      backgroundColor:\n        themeOption === THEME_OPTION.BIJLIRIDE\n          ? Colors.bijlirideBackgroundColor\n          : backgroundColor,\n    },\n  ];\n\n  return (\n    <ScrollView contentContainerStyle={containerStyle}>\n      <View style={styles.main}>\n        {iconView}\n        <Text style={[styles.title, { color: fontColor }]}>{surveyName}</Text>\n        {!!welcomeTextPlain && (\n          <Text style={[styles.subtitle, { color: fontColor }]}>\n            {welcomeTextPlain}\n          </Text>\n        )}\n        <View style={styles.divider} />\n        <Button\n          width={buttonWidth}\n          title={takeSurvey}\n          color={hexCode}\n          onPress={onStart}\n          containerStyle={styles.takeSurveyButton}\n        />\n      </View>\n      {languagesView()}\n    </ScrollView>\n  );\n};\n\nexport default ClassicStartScreen;\n\nconst shareStyles = StyleSheet.create({\n  container: {\n    backgroundColor: Colors.white,\n    flex: 1,\n  },\n});\n\nconst phoneStyles = StyleSheet.create({\n  main: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingHorizontal: 38,\n    width: '100%',\n  },\n  title: {\n    textAlign: 'center',\n    marginTop: 14,\n    fontSize: 22,\n    opacity: 0.9,\n    lineHeight: 27,\n  },\n  subtitle: {\n    lineHeight: 23,\n    marginTop: 12,\n    fontSize: 16,\n    textAlign: 'center',\n    opacity: 0.72,\n  },\n  divider: {\n    backgroundColor: '#c3c3c3',\n    height: 1,\n    width: '100%',\n    marginTop: 26,\n  },\n  takeSurveyButton: {\n    marginTop: 21,\n  },\n  language_label: {\n    fontSize: 13,\n    paddingHorizontal: 8,\n  },\n  languages: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    height: '12%',\n    maxHeight: 90,\n    flexWrap: 'wrap',\n    marginHorizontal: 38,\n  },\n});\n\nconst tabletStyles = StyleSheet.create({\n  main: {\n    flex: 1,\n    alignItems: 'center',\n    paddingHorizontal: 70,\n    width: '100%',\n    justifyContent: 'center',\n  },\n  title: {\n    textAlign: 'center',\n    lineHeight: 38,\n    marginTop: 18,\n    fontSize: 31,\n    opacity: 0.9,\n  },\n  subtitle: {\n    lineHeight: 25,\n    marginTop: 17,\n    fontSize: 21,\n    textAlign: 'center',\n    opacity: 0.72,\n  },\n  divider: {\n    backgroundColor: '#c3c3c3',\n    height: 1,\n    width: '100%',\n    marginTop: 46,\n  },\n  takeSurveyButton: {\n    marginTop: 37,\n  },\n  language_label: {\n    fontSize: 13,\n    paddingHorizontal: 8,\n  },\n  languages: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    height: '10%',\n    maxHeight: 80,\n  },\n});\n"]}