{"version":3,"sources":["StartScreen.tsx"],"names":["React","View","Text","Image","StyleSheet","TouchableOpacity","Colors","GlobalStyle","DimensionWidthType","useDimensionWidthType","i18n","useTheme","useSafeAreaInsets","defaultIconSource","require","defaultIconSize","phone","tablet","LANG_TITLE","en","ar","StartScreen","onLanguageSelect","onClose","onStart","survey","rtl","dir","insets","dimensionWidthType","fontColor","backgroundColor","surveyProperty","surveyName","welcomeTextPlain","image","hexCode","width","height","iconStyle","iconSource","undefined","uri","iconView","languagesView","languages","length","languageView","map","language","index","styles","language_label","color","buttonStyle","button","containerStyle","headerContainer","paddingTop","top","flexRowReverse","titleStyle","headerTitle","headerIconStyle","tintColor","container","headerRowContainer","closeButton","main","title","subtitle","buttonTitle","t","create","white","flex","alignItems","justifyContent","paddingHorizontal","textAlign","marginTop","fontSize","opacity","lineHeight","paddingVertical","borderRadius","overflow","fontWeight","letterSpacing","marginRight","flexDirection","maxHeight","marginLeft","flexGrow"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { View, Text, Image, StyleSheet, TouchableOpacity } from 'react-native';\nimport { Colors, GlobalStyle } from '../styles';\nimport {\n  DimensionWidthType,\n  useDimensionWidthType,\n} from '../hooks/useWindowDimensions';\nimport i18n from '../translation';\nimport { useTheme } from '../contexts/theme';\nimport type { Survey as OriginSurvey } from '../data';\n// @ts-ignore\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\n\ntype Survey = OriginSurvey & {\n  languages: ('en' | 'ar')[];\n};\n\nconst defaultIconSource = require('../assets/rating.png');\nconst defaultIconSize = {\n  [DimensionWidthType.phone]: 65,\n  [DimensionWidthType.tablet]: 72,\n};\n\nconst LANG_TITLE = {\n  en: 'English',\n  ar: 'العربي',\n};\n\ntype Props = {\n  onLanguageSelect: (language: string) => void;\n  onClose: () => void;\n  onStart: () => void;\n  survey: Survey;\n};\n\nconst StartScreen = ({ onLanguageSelect, onClose, onStart, survey }: Props) => {\n  const rtl = i18n.dir() === 'rtl';\n  const insets = useSafeAreaInsets();\n  const dimensionWidthType = useDimensionWidthType();\n  const { fontColor, backgroundColor } = useTheme();\n\n  const { surveyProperty, surveyName, welcomeTextPlain } = survey;\n  const {\n    image,\n    hexCode,\n    width = defaultIconSize[dimensionWidthType],\n    height = defaultIconSize[dimensionWidthType],\n  } = surveyProperty;\n  const iconStyle = {\n    width,\n    height,\n  };\n  const iconSource = image === undefined ? defaultIconSource : { uri: image };\n\n  const iconView = (\n    <Image resizeMode=\"cover\" style={iconStyle} source={iconSource} />\n  );\n\n  const languagesView = () => {\n    const { languages } = survey;\n\n    // if there's only one language or no languages, no need to display\n    if (!languages || !languages.length || languages.length <= 1) return null;\n\n    const languageView = languages.map((language: 'en' | 'ar', index) => (\n      <TouchableOpacity\n        key={index}\n        onPress={() => {\n          onLanguageSelect && onLanguageSelect(language);\n        }}\n      >\n        <Text\n          style={[\n            styles.language_label,\n            {\n              color:\n                language !== survey.language\n                  ? survey.surveyProperty.hexCode\n                  : fontColor,\n            },\n          ]}\n        >\n          {LANG_TITLE[language]}\n        </Text>\n      </TouchableOpacity>\n    ));\n    return <View style={styles.languages}>{languageView}</View>;\n  };\n  const buttonStyle = [styles.button, { backgroundColor: hexCode }];\n\n  const containerStyle = [\n    styles.headerContainer,\n    { paddingTop: insets.top },\n    rtl && GlobalStyle.flexRowReverse,\n    {\n      backgroundColor,\n    },\n  ];\n  const titleStyle = [styles.headerTitle, { color: fontColor }];\n  const headerIconStyle = { tintColor: survey.surveyProperty.hexCode };\n  return (\n    <View style={[styles.container, { backgroundColor }]}>\n      <View style={containerStyle}>\n        <View style={styles.headerRowContainer}>\n          <TouchableOpacity style={styles.closeButton} onPress={onClose}>\n            <Image\n              style={headerIconStyle}\n              source={require('../assets/icClose24Px.png')}\n            />\n          </TouchableOpacity>\n          <Text style={titleStyle} numberOfLines={1}>\n            {survey.surveyName}\n          </Text>\n        </View>\n      </View>\n      <View style={styles.main}>\n        {iconView}\n        <Text style={[styles.title, { color: fontColor }]}>{surveyName}</Text>\n        {!!welcomeTextPlain && (\n          <Text style={[styles.subtitle, { color: fontColor }]}>\n            {welcomeTextPlain}\n          </Text>\n        )}\n        <TouchableOpacity style={buttonStyle} onPress={onStart}>\n          <Text style={styles.buttonTitle}>\n            {i18n.t('start-survey:start-btn')}\n          </Text>\n        </TouchableOpacity>\n      </View>\n      {languagesView()}\n    </View>\n  );\n};\n\nexport default StartScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: Colors.white,\n    flex: 1,\n    alignItems: 'center',\n  },\n  main: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingHorizontal: 38,\n    width: '100%',\n  },\n  title: {\n    textAlign: 'center',\n    marginTop: 12,\n    fontSize: 24,\n    opacity: 0.9,\n    lineHeight: 27,\n  },\n  subtitle: {\n    lineHeight: 23,\n    marginTop: 12,\n    fontSize: 16,\n    textAlign: 'center',\n    opacity: 0.72,\n  },\n  button: {\n    marginTop: 31,\n    paddingVertical: 12,\n    paddingHorizontal: 30,\n    borderRadius: 20,\n    overflow: 'hidden',\n  },\n  buttonTitle: {\n    color: Colors.white,\n    fontSize: 16,\n    fontWeight: '500',\n    letterSpacing: 0,\n    textAlign: 'center',\n  },\n  language_label: {\n    fontSize: 13,\n    marginRight: 19,\n  },\n  languages: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    height: '12%',\n    maxHeight: 90,\n  },\n  headerContainer: {\n    width: '100%',\n    paddingVertical: 15,\n    paddingHorizontal: 30,\n  },\n  headerRowContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    height: 25,\n    marginTop: 17,\n  },\n  closeButton: {\n    width: 25,\n    height: 25,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  headerTitle: {\n    fontSize: 17,\n    fontWeight: '600',\n    marginLeft: 10,\n    marginRight: 30,\n    textAlign: 'center',\n    flexGrow: 1,\n  },\n});\n"]}