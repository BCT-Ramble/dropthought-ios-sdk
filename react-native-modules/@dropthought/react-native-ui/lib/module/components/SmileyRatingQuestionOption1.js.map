{"version":3,"sources":["SmileyRatingQuestionOption1.tsx"],"names":["React","View","StyleSheet","Text","TouchableOpacity","isNil","Colors","opacity60","opacity10","Option1BackgroundColor","Option1BackgroundColorDark","i18n","DimensionWidthType","useDimensionWidthType","scaleLogic","SurveyFooter","SurveyHeader","LottieView","useTheme","COLOR_SCHEMES","MandatoryTitle","lotties","require","getInitialSelectedValue","feedback","question","prevAnswer","answers","parseInt","options","map","_option","index","SmileyRatingQuestionOption1","survey","pageIndex","forgot","onClose","onPrevPage","onNextPage","onFeedback","answered","answeredValue","backgroundColor","themeBackgroundColor","fontColor","colorScheme","questionId","scale","selectedIndex","setSelectedIndex","useState","selected","setSelected","lottieSelectedIndex","selectedBackgroundColor","dark","unselectedBackgroundColor","unSelectedBackground","length","setSelectedAndFeedback","useCallback","selectedMap","type","dimensionWidthType","isPhone","phone","styles","phoneStyles","tabletStyles","smileyRowContainerStyle","smileyRowContainer","white","ratingComponent","isSelected","buttonStyle","optionContainer","black","textStyle","optionTitle","color","toString","questionContainerStyle","commonStyles","container","hintTextStyle","hintText","descStyle","desc","infoContainer","lottieContainer","lottieContent","initInfoContainer","hintContainer","t","surveyProperty","hexCode","pageOrder","memo","create","flex","paddingBottom","paddingHorizontal","height","alignItems","justifyContent","width","containter","paddingLeft","paddingRight","flexDirection","borderRadius","shadowColor","shadowOffset","shadowRadius","shadowOpacity","fontSize","fontWeight","marginBottom","textAlign","maxWidth"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { View, StyleSheet, Text, TouchableOpacity } from 'react-native';\nimport { isNil } from 'ramda';\nimport {\n  Colors,\n  opacity60,\n  opacity10,\n  Option1BackgroundColor,\n  Option1BackgroundColorDark,\n} from '../styles';\nimport i18n from '../translation';\nimport {\n  DimensionWidthType,\n  useDimensionWidthType,\n} from '../hooks/useWindowDimensions';\nimport type {\n  Feedback as OriginFeedback,\n  Question as OriginQuestion,\n  Survey,\n} from '../data';\nimport { scaleLogic } from '../utils/data';\nimport SurveyFooter from '../containers/SurveyFooter';\nimport SurveyHeader from '../containers/SurveyHeader';\nimport LottieView from 'lottie-react-native';\nimport { useTheme, COLOR_SCHEMES } from '../contexts/theme';\nimport MandatoryTitle from './MandatoryTitle';\n\nconst lotties = [\n  require('../assets/animations/smiley_option1/option1_1.json'),\n  require('../assets/animations/smiley_option1/option1_2.json'),\n  require('../assets/animations/smiley_option1/option1_3.json'),\n  require('../assets/animations/smiley_option1/option1_4.json'),\n  require('../assets/animations/smiley_option1/option1_5.json'),\n];\n\ntype Feedback = OriginFeedback & {\n  answers: string[];\n};\n\ntype Question = OriginQuestion & {\n  options: string[];\n  scale: string;\n};\n\nconst getInitialSelectedValue = (feedback: Feedback, question: Question) => {\n  let prevAnswer: number | undefined;\n  if (feedback && feedback.answers && !isNil(feedback.answers[0])) {\n    prevAnswer = parseInt(feedback.answers[0], 10);\n  }\n  return question.options.map((_option, index) => prevAnswer === index);\n};\n\ntype Props = {\n  survey: Survey;\n  question: Question;\n  pageIndex: number;\n  forgot: boolean;\n  onClose: () => void;\n  onPrevPage: () => void;\n  onNextPage: () => void;\n  onFeedback: ({\n    questionId,\n    answers,\n    type,\n  }: {\n    questionId: string;\n    answers: number[];\n    type: string;\n  }) => void;\n  feedback: Feedback;\n};\n\nconst SmileyRatingQuestionOption1 = ({\n  survey,\n  pageIndex,\n  question,\n  forgot,\n  onClose,\n  onPrevPage,\n  onNextPage,\n  onFeedback,\n  feedback,\n}: Props) => {\n  const answered =\n    feedback &&\n    feedback.answers &&\n    !isNil(feedback.answers[0]) &&\n    typeof feedback.answers[0] === 'number';\n  const answeredValue: number = answered\n    ? parseInt(feedback.answers[0], 10)\n    : 0;\n\n  const {\n    backgroundColor: themeBackgroundColor,\n    fontColor,\n    colorScheme,\n  } = useTheme();\n  const { questionId, options, scale } = question;\n\n  const [selectedIndex, setSelectedIndex] = React.useState<number>(\n    answered ? answeredValue : -1\n  );\n  const [selected, setSelected] = React.useState<boolean[]>(\n    getInitialSelectedValue(feedback, question)\n  );\n  const lottieSelectedIndex = scaleLogic[scale][selectedIndex];\n\n  const selectedBackgroundColor =\n    colorScheme === COLOR_SCHEMES.dark\n      ? Option1BackgroundColorDark\n      : Option1BackgroundColor;\n\n  const unselectedBackgroundColor =\n    colorScheme === COLOR_SCHEMES.dark\n      ? themeBackgroundColor\n      : Colors.unSelectedBackground;\n\n  const backgroundColor =\n    feedback?.answers && feedback?.answers.length > 0\n      ? selectedBackgroundColor[lottieSelectedIndex]\n      : unselectedBackgroundColor;\n\n  const setSelectedAndFeedback = React.useCallback(\n    (index) => {\n      setSelectedIndex(index);\n      let selectedMap = options.map(() => false);\n      selectedMap[index] = true;\n      setSelected(selectedMap);\n      onFeedback({\n        questionId,\n        answers: [index],\n        type: 'rating',\n      });\n    },\n    [onFeedback, options, questionId]\n  );\n\n  const dimensionWidthType = useDimensionWidthType();\n  const isPhone = dimensionWidthType === DimensionWidthType.phone;\n  const styles = isPhone ? phoneStyles : tabletStyles;\n\n  const smileyRowContainerStyle = [\n    styles.smileyRowContainer,\n    {\n      backgroundColor:\n        colorScheme === COLOR_SCHEMES.dark\n          ? opacity10(Colors.white)\n          : opacity60(Colors.white),\n    },\n  ];\n\n  const ratingComponent = (\n    <View style={smileyRowContainerStyle}>\n      {options.map((_option, index) => {\n        const isSelected = selected[index];\n        const buttonStyle = isSelected\n          ? [styles.optionContainer, { backgroundColor: Colors.black }]\n          : [\n              styles.optionContainer,\n              {\n                backgroundColor:\n                  colorScheme === COLOR_SCHEMES.dark\n                    ? opacity10(Colors.white)\n                    : Colors.white,\n              },\n            ];\n        const textStyle = isSelected\n          ? [styles.optionTitle, { color: Colors.white }]\n          : [styles.optionTitle, { color: fontColor }];\n\n        return (\n          <TouchableOpacity\n            style={buttonStyle}\n            onPress={() => setSelectedAndFeedback(index)}\n            key={index.toString()}\n          >\n            <Text style={textStyle}>{index + 1}</Text>\n          </TouchableOpacity>\n        );\n      })}\n    </View>\n  );\n\n  const questionContainerStyle = [commonStyles.container, { backgroundColor }];\n\n  const hintTextStyle = [styles.hintText, { color: fontColor }];\n  const descStyle = [styles.desc, { color: fontColor }];\n\n  return (\n    <>\n      <SurveyHeader\n        survey={survey}\n        pageIndex={pageIndex}\n        backgroundColor={backgroundColor}\n        onClose={onClose}\n      />\n      <View style={questionContainerStyle}>\n        {feedback && selectedIndex >= 0 ? (\n          <View style={commonStyles.infoContainer}>\n            <MandatoryTitle question={question} forgot={forgot} />\n            <View style={commonStyles.lottieContainer}>\n              <LottieView\n                source={lotties[lottieSelectedIndex]}\n                autoPlay\n                style={commonStyles.lottieContent}\n                speed={0.5}\n              />\n            </View>\n            <Text style={descStyle}>{options[selectedIndex]}</Text>\n          </View>\n        ) : (\n          <View style={commonStyles.initInfoContainer}>\n            <MandatoryTitle question={question} forgot={forgot} />\n            <View style={commonStyles.hintContainer}>\n              <Text style={hintTextStyle}>\n                {i18n.t('option1HintDescription:title')}\n              </Text>\n            </View>\n          </View>\n        )}\n        {ratingComponent}\n      </View>\n      <SurveyFooter\n        surveyColor={survey.surveyProperty.hexCode}\n        isFirstPage={pageIndex === 0}\n        isLastPage={pageIndex === survey.pageOrder.length - 1}\n        onPrevPage={onPrevPage}\n        onNextPage={onNextPage}\n        backgroundColor={backgroundColor}\n      />\n    </>\n  );\n};\n\nexport default React.memo(SmileyRatingQuestionOption1);\n\nconst commonStyles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingBottom: 24,\n    paddingHorizontal: 42,\n  },\n  infoContainer: {\n    flex: 1,\n    height: '100%',\n    alignItems: 'center',\n    justifyContent: 'space-around',\n  },\n  initInfoContainer: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n  },\n  lottieContainer: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%',\n  },\n  lottieContent: {\n    width: '100%',\n  },\n  hintContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%',\n  },\n});\n\nconst phoneStyles = StyleSheet.create({\n  containter: {\n    flex: 1,\n    paddingLeft: 10,\n    paddingRight: 10,\n    justifyContent: 'space-between',\n  },\n  smileyRowContainer: {\n    height: 62,\n    flexDirection: 'row',\n    justifyContent: 'space-evenly',\n    alignItems: 'center',\n    borderRadius: 31,\n    paddingHorizontal: 9,\n  },\n  optionContainer: {\n    width: 50,\n    height: 50,\n    borderRadius: 25,\n    justifyContent: 'center',\n    alignItems: 'center',\n    shadowColor: 'rgba(0, 0, 0, 0.16)',\n    shadowOffset: {\n      width: 0,\n      height: 3,\n    },\n    shadowRadius: 6,\n    shadowOpacity: 1,\n  },\n  optionTitle: {\n    fontSize: 26,\n    fontWeight: '600',\n  },\n  desc: {\n    marginBottom: 40,\n    fontSize: 24,\n    fontWeight: '600',\n  },\n  hintText: {\n    width: '100%',\n    fontSize: 16,\n    fontWeight: '500',\n    textAlign: 'center',\n  },\n});\n\nconst tabletStyles = StyleSheet.create({\n  containter: {\n    flex: 1,\n    flexDirection: 'row',\n    maxWidth: 560,\n    paddingLeft: 10,\n    justifyContent: 'space-between',\n  },\n  smileyRowContainer: {\n    height: 62,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    backgroundColor: opacity60(Colors.white),\n    borderRadius: 31,\n    paddingHorizontal: 9,\n  },\n  optionContainer: {\n    width: 50,\n    height: 50,\n    backgroundColor: Colors.white,\n    borderRadius: 25,\n    justifyContent: 'center',\n    alignItems: 'center',\n    shadowColor: 'rgba(0, 0, 0, 0.16)',\n    shadowOffset: {\n      width: 0,\n      height: 3,\n    },\n    shadowRadius: 6,\n    shadowOpacity: 1,\n  },\n  optionTitle: {\n    fontSize: 26,\n    fontWeight: '600',\n  },\n  desc: {\n    marginBottom: 40,\n    fontSize: 24,\n    fontWeight: '600',\n  },\n  hintText: {\n    width: '100%',\n    fontSize: 16,\n    fontWeight: '500',\n    textAlign: 'center',\n  },\n});\n"]}