{"version":3,"sources":["index.tsx"],"names":["React","PureComponent","Animated","Easing","I18nManager","Image","PanResponder","View","StyleSheet","defaultStyles","styles","Rect","height","width","x","y","containsPoint","nativeX","nativeY","trackDistanceToPoint","DEFAULT_ANIMATION_CONFIGS","spring","friction","tension","timing","duration","easing","inOut","ease","delay","normalizeValue","props","value","Array","isArray","length","maximumValue","minimumValue","getBetweenValue","inputValue","Math","max","min","map","sort","a","b","updateValues","values","newValues","index","valueToSet","Value","__getValue","setValue","indexOfLowest","lowestIndex","forEach","array","Slider","constructor","e","_thumbHitTest","thumbSize","state","nativeEvent","_previousLeft","trackClickable","locationX","_getThumbLeft","_getCurrentValue","_activeThumbIndex","onSlidingStart","_getRawValues","_e","gestureState","disabled","_setCurrentValue","_getValue","onValueChange","onSlidingComplete","_handleMeasure","name","layout","size","currentSize","_containerSize","_thumbSize","setState","containerSize","allMeasured","vertical","standardRatio","_getRatio","ratio","isRTL","step","thumbLeft","dy","dx","nonRtlRatio","minValue","maxValue","rawValues","buffer","round","thumbIndex","callback","safeIndex","animatedValue","prevState","animationType","animationConfig","toValue","useNativeDriver","start","thumbTouchSize","_getTouchOverflowSize","touchOverflowStyle","undefined","verticalMargin","marginTop","marginBottom","horizontalMargin","marginLeft","marginRight","debugTouchArea","backgroundColor","opacity","hitThumb","find","_","i","thumbTouchRect","_getThumbTouchRect","locationY","thumbDistances","_value","touchOverflowSize","positionStyle","left","top","debugThumbTouchArea","thumbImage","_panResponder","create","onStartShouldSetPanResponder","_handleStartShouldSetPanResponder","onMoveShouldSetPanResponder","_handleMoveShouldSetPanResponder","onPanResponderGrant","_handlePanResponderGrant","onPanResponderMove","_handlePanResponderMove","onPanResponderRelease","_handlePanResponderEnd","onPanResponderTerminationRequest","_handlePanResponderRequestEnd","onPanResponderTerminate","trackMarksValues","trackMarks","getDerivedStateFromProps","newTrackMarkValues","statePatch","componentDidUpdate","animateTransitions","_setCurrentValueAnimated","render","containerStyle","maximumTrackTintColor","minimumTrackTintColor","renderAboveThumbComponent","renderBelowThumbComponent","renderTrackMarkComponent","renderThumbComponent","thumbStyle","thumbTintColor","trackStyle","minimumTrackStyle","propMinimumTrackStyle","maximumTrackStyle","propMaximumTrackStyle","startFromZero","other","_startFromZero","interpolatedThumbValues","interpolate","inputRange","outputRange","interpolatedTrackValues","interpolatedTrackMarksValues","v","valueVisibleStyle","interpolatedRawValues","minRawValue","minThumbValue","maxRawValue","maxThumbValue","sliderWidthCoefficient","abs","startPositionOnTrack","minTrackWidth","clearBorderRadius","borderBottomRightRadius","borderTopRightRadius","borderTopLeftRadius","borderBottomLeftRadius","position","add","multiply","_getTouchOverflowStyle","aboveThumbComponentsContainer","interpolationValue","addListener","bottom","transform","translateX","translateY","container","rotate","_measureContainer","track","_measureTrack","thumb","_measureThumb","_renderThumbImage","touchArea","panHandlers","_renderDebugThumbTouchRect","belowThumbComponentsContainer","SliderContainer","trackMarkStyles","onCustomValueChange","currentMarkValue","style","activeMark","inactiveMark","renderChildren","Children","children","child","type","cloneElement","input","customStyles","sliderContainer","sliderContent","CustomSlider","flexDirection","alignItems","flex"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport {\n  Animated,\n  Easing,\n  I18nManager,\n  Image,\n  ImageSourcePropType,\n  LayoutChangeEvent,\n  PanResponder,\n  PanResponderInstance,\n  View,\n  ViewStyle,\n  StyleSheet,\n} from 'react-native';\n// styles\nimport { defaultStyles as styles } from './styles';\nimport type {\n  Dimensions,\n  SliderProps,\n  SliderState,\n  CustomSliderProps,\n  SliderContainerProps,\n} from './types';\n\n/**\n * @description  source code refrence: https://github.com/miblanchard/react-native-slider\n */\n\ntype RectReturn = {\n  containsPoint: (nativeX: number, nativeY: number) => boolean;\n  height: number;\n  trackDistanceToPoint: (nativeX: number) => number;\n  width: number;\n  x: number;\n  y: number;\n};\n\nconst Rect = ({\n  height,\n  width,\n  x,\n  y,\n}: {\n  height: number;\n  width: number;\n  x: number;\n  y: number;\n}) => ({\n  containsPoint: (nativeX: number, nativeY: number) =>\n    nativeX >= x &&\n    nativeY >= y &&\n    nativeX <= x + width &&\n    nativeY <= y + height,\n  height,\n  trackDistanceToPoint: (nativeX: number) => {\n    if (nativeX < x) {\n      return x - nativeX;\n    }\n\n    if (nativeX > x + width) {\n      return nativeX - (x + width);\n    }\n\n    return 0;\n  },\n  width,\n  x,\n  y,\n});\n\nconst DEFAULT_ANIMATION_CONFIGS = {\n  spring: {\n    friction: 7,\n    tension: 100,\n  },\n  timing: {\n    duration: 150,\n    easing: Easing.inOut(Easing.ease),\n    delay: 0,\n  },\n};\n\nconst normalizeValue = (\n  props: SliderProps,\n  value?: number | Array<number>\n): Array<number> => {\n  if (!value || (Array.isArray(value) && value.length === 0)) {\n    return [0];\n  }\n\n  const { maximumValue, minimumValue } = props;\n\n  const getBetweenValue = (inputValue: number) =>\n    Math.max(Math.min(inputValue, maximumValue), minimumValue);\n\n  if (!Array.isArray(value)) {\n    return [getBetweenValue(value)];\n  }\n\n  return value.map(getBetweenValue).sort((a, b) => a - b);\n};\n\nconst updateValues = ({\n  values,\n  newValues = values,\n}: {\n  values: number | Array<number> | Animated.Value | Array<Animated.Value>;\n  newValues?: number | Array<number> | Animated.Value | Array<Animated.Value>;\n}): Animated.Value[] => {\n  if (\n    Array.isArray(newValues) &&\n    Array.isArray(values) &&\n    newValues.length !== values.length\n  ) {\n    return updateValues({ values: newValues });\n  }\n\n  if (Array.isArray(values) && Array.isArray(newValues)) {\n    return values?.map((value: number | Animated.Value, index: number) => {\n      let valueToSet = newValues[index];\n      if (value instanceof Animated.Value) {\n        if (valueToSet instanceof Animated.Value) {\n          //@ts-ignore\n          valueToSet = valueToSet.__getValue();\n        }\n        //@ts-ignore\n        value.setValue(valueToSet);\n        return value;\n      }\n\n      if (valueToSet instanceof Animated.Value) {\n        return valueToSet;\n      }\n\n      return new Animated.Value(valueToSet);\n    });\n  }\n\n  return [new Animated.Value(0)];\n};\n\nconst indexOfLowest = (values: Array<number>): number => {\n  let lowestIndex = 0;\n  values.forEach((value, index, array) => {\n    if (value < array[lowestIndex]) {\n      lowestIndex = index;\n    }\n  });\n  return lowestIndex;\n};\n\nexport class Slider extends PureComponent<SliderProps, SliderState> {\n  constructor(props: SliderProps) {\n    super(props);\n    this._panResponder = PanResponder.create({\n      onStartShouldSetPanResponder: this._handleStartShouldSetPanResponder,\n      onMoveShouldSetPanResponder: this._handleMoveShouldSetPanResponder,\n      onPanResponderGrant: this._handlePanResponderGrant,\n      onPanResponderMove: this._handlePanResponderMove,\n      onPanResponderRelease: this._handlePanResponderEnd,\n      onPanResponderTerminationRequest: this._handlePanResponderRequestEnd,\n      onPanResponderTerminate: this._handlePanResponderEnd,\n    });\n    this.state = {\n      allMeasured: false,\n      containerSize: {\n        width: 0,\n        height: 0,\n      },\n      thumbSize: {\n        width: 0,\n        height: 0,\n      },\n      trackMarksValues: updateValues({\n        values: normalizeValue(this.props, this.props.trackMarks),\n      }),\n      values: updateValues({\n        values: normalizeValue(\n          this.props,\n          this.props.value instanceof Animated.Value\n            ? //@ts-ignore\n              this.props.value.__getValue()\n            : this.props.value\n        ),\n      }),\n    };\n  }\n\n  static defaultProps = {\n    animationType: 'timing',\n    debugTouchArea: false,\n    trackMarks: [],\n    maximumTrackTintColor: '#b3b3b3',\n    maximumValue: 1,\n    minimumTrackTintColor: '#3f3f3f',\n    minimumValue: 0,\n    step: 0,\n    thumbTintColor: '#343434',\n    trackClickable: true,\n    value: 0,\n    vertical: false,\n    startFromZero: false,\n  };\n\n  //@ts-ignore\n  static getDerivedStateFromProps(props: SliderProps, state: SliderState) {\n    if (\n      props.trackMarks &&\n      !!state.trackMarksValues &&\n      state.trackMarksValues.length > 0\n    ) {\n      const newTrackMarkValues = normalizeValue(props, props.trackMarks);\n      const statePatch = {} as SliderState;\n\n      if (state.trackMarksValues) {\n        statePatch.trackMarksValues = updateValues({\n          values: state.trackMarksValues,\n          newValues: newTrackMarkValues,\n        });\n      }\n\n      return statePatch;\n    }\n  }\n\n  componentDidUpdate() {\n    const newValues = normalizeValue(\n      this.props,\n      this.props.value instanceof Animated.Value\n        ? //@ts-ignore\n          this.props.value.__getValue()\n        : this.props.value\n    );\n    newValues.forEach((value, i) => {\n      if (!this.state.values[i]) {\n        this._setCurrentValue(value, i);\n        //@ts-ignore\n      } else if (value !== this.state.values[i].__getValue()) {\n        if (this.props.animateTransitions) {\n          this._setCurrentValueAnimated(value, i);\n        } else {\n          this._setCurrentValue(value, i);\n        }\n      }\n    });\n  }\n\n  _getRawValues(\n    values: Array<Animated.Value> | Array<Animated.AnimatedInterpolation>\n  ) {\n    //@ts-ignore\n    return values.map((value) => value.__getValue());\n  }\n\n  _handleStartShouldSetPanResponder = (\n    e: any\n  ): /* gestureState: GestureState */\n  boolean => this._thumbHitTest(e); // Should we become active when the user presses down on the thumb?\n\n  _handleMoveShouldSetPanResponder(): /* e, gestureState: GestureState */\n  boolean {\n    // Should we become active when the user moves a touch over the thumb?\n    return false;\n  }\n\n  _handlePanResponderGrant = (e: { nativeEvent: any }) => {\n    const { thumbSize } = this.state;\n    const { nativeEvent } = e;\n    this._previousLeft = this.props.trackClickable\n      ? nativeEvent.locationX - thumbSize.width\n      : this._getThumbLeft(this._getCurrentValue(this._activeThumbIndex));\n\n    this.props?.onSlidingStart?.(this._getRawValues(this.state.values));\n  };\n\n  _handlePanResponderMove = (_e: any, gestureState: any) => {\n    if (this.props.disabled) {\n      return;\n    }\n\n    this._setCurrentValue(\n      this._getValue(gestureState),\n      this._activeThumbIndex,\n      () => {\n        this.props?.onValueChange?.(this._getRawValues(this.state.values));\n      }\n    );\n  };\n\n  _handlePanResponderRequestEnd = () =>\n    /* e, gestureState: GestureState */\n    {\n      // Should we allow another component to take over this pan?\n      return false;\n    };\n\n  _handlePanResponderEnd = (_e: any, gestureState: any) => {\n    if (this.props.disabled) {\n      return;\n    }\n\n    this._setCurrentValue(\n      this._getValue(gestureState),\n      this._activeThumbIndex,\n      () => {\n        if (this.props.trackClickable) {\n          this.props?.onValueChange?.(this._getRawValues(this.state.values));\n        }\n\n        this.props?.onSlidingComplete?.(this._getRawValues(this.state.values));\n      }\n    );\n\n    this._activeThumbIndex = 0;\n  };\n\n  _measureContainer = (e: LayoutChangeEvent) => {\n    this._handleMeasure('_containerSize', e);\n  };\n\n  _measureTrack = (e: LayoutChangeEvent) => {\n    this._handleMeasure('_trackSize', e);\n  };\n\n  _measureThumb = (e: LayoutChangeEvent) => {\n    this._handleMeasure('_thumbSize', e);\n  };\n\n  _handleMeasure = (\n    name: '_containerSize' | '_trackSize' | '_thumbSize',\n    e: LayoutChangeEvent\n  ) => {\n    const { width, height } = e.nativeEvent.layout;\n    const size = {\n      width,\n      height,\n    };\n\n    const currentSize = this[name];\n\n    if (\n      currentSize &&\n      width === currentSize.width &&\n      height === currentSize.height\n    ) {\n      return;\n    }\n\n    this[name] = size;\n\n    if (this._containerSize && this._thumbSize) {\n      this.setState({\n        containerSize: this._containerSize,\n        thumbSize: this._thumbSize,\n        allMeasured: true,\n      });\n    }\n  };\n  _getRatio = (value: number) => {\n    const { maximumValue, minimumValue } = this.props;\n    return (value - minimumValue) / (maximumValue - minimumValue);\n  };\n  _getThumbLeft = (value: number) => {\n    const { containerSize, thumbSize } = this.state;\n    const { vertical } = this.props;\n\n    const standardRatio = this._getRatio(value);\n\n    const ratio = I18nManager.isRTL ? 1 - standardRatio : standardRatio;\n    return (\n      ratio *\n      ((vertical ? containerSize.height : containerSize.width) -\n        thumbSize.width)\n    );\n  };\n  _getValue = (gestureState: { dx: number; dy: number }) => {\n    const { containerSize, thumbSize, values } = this.state;\n    const { maximumValue, minimumValue, step, vertical } = this.props;\n    const length = containerSize.width - thumbSize.width;\n    const thumbLeft = vertical\n      ? this._previousLeft + gestureState.dy * -1\n      : this._previousLeft + gestureState.dx;\n    const nonRtlRatio = thumbLeft / length;\n    const ratio = I18nManager.isRTL ? 1 - nonRtlRatio : nonRtlRatio;\n    let minValue = minimumValue;\n    let maxValue = maximumValue;\n\n    const rawValues = this._getRawValues(values);\n\n    const buffer = step ? step : 0.1;\n\n    if (values.length === 2) {\n      if (this._activeThumbIndex === 1) {\n        minValue = rawValues[0] + buffer;\n      } else {\n        maxValue = rawValues[1] - buffer;\n      }\n    }\n\n    if (step) {\n      return Math.max(\n        minValue,\n        Math.min(\n          maxValue,\n          minimumValue +\n            Math.round((ratio * (maximumValue - minimumValue)) / step) * step\n        )\n      );\n    }\n\n    return Math.max(\n      minValue,\n      Math.min(maxValue, ratio * (maximumValue - minimumValue) + minimumValue)\n    );\n  };\n  _getCurrentValue = (thumbIndex: number = 0) =>\n    //@ts-ignore\n    this.state.values[thumbIndex].__getValue();\n\n  _setCurrentValue = (\n    value: number,\n    thumbIndex: number | null | undefined,\n    callback?: () => void\n  ) => {\n    const safeIndex = thumbIndex ?? 0;\n    const animatedValue = this.state.values[safeIndex];\n\n    if (animatedValue) {\n      animatedValue.setValue(value);\n\n      if (callback) {\n        callback();\n      }\n    } else {\n      this.setState((prevState: SliderState) => {\n        const newValues = [...prevState.values];\n        newValues[safeIndex] = new Animated.Value(value);\n        return {\n          values: newValues,\n        };\n      }, callback);\n    }\n  };\n\n  _setCurrentValueAnimated = (value: number, thumbIndex: number = 0) => {\n    const { animationType } = this.props;\n    const animationConfig = {\n      ...DEFAULT_ANIMATION_CONFIGS[animationType],\n      ...this.props.animationConfig,\n      toValue: value,\n      useNativeDriver: false,\n    };\n    Animated[animationType](\n      this.state.values[thumbIndex],\n      animationConfig\n    ).start();\n  };\n\n  _getTouchOverflowSize = (): {\n    width: number;\n    height: number;\n  } => {\n    const { allMeasured, containerSize, thumbSize } = this.state;\n    const { thumbTouchSize } = this.props;\n    const size = {\n      width: 40,\n      height: 40,\n    };\n\n    if (allMeasured) {\n      size.width = Math.max(0, thumbTouchSize?.width || 0 - thumbSize.width);\n      size.height = Math.max(\n        0,\n        thumbTouchSize?.height || 0 - containerSize.height\n      );\n    }\n\n    return size;\n  };\n\n  _getTouchOverflowStyle = () => {\n    const { width, height } = this._getTouchOverflowSize();\n\n    const touchOverflowStyle = {} as ViewStyle;\n\n    if (width !== undefined && height !== undefined) {\n      const verticalMargin = -height / 2;\n      touchOverflowStyle.marginTop = verticalMargin;\n      touchOverflowStyle.marginBottom = verticalMargin;\n      const horizontalMargin = -width / 2;\n      touchOverflowStyle.marginLeft = horizontalMargin;\n      touchOverflowStyle.marginRight = horizontalMargin;\n    }\n\n    if (this.props.debugTouchArea === true) {\n      touchOverflowStyle.backgroundColor = 'orange';\n      touchOverflowStyle.opacity = 0.5;\n    }\n\n    return touchOverflowStyle;\n  };\n  _thumbHitTest = (e: { nativeEvent: any }) => {\n    const { nativeEvent } = e;\n    const { trackClickable } = this.props;\n    const { values } = this.state;\n    const hitThumb = values.find((_, i) => {\n      const thumbTouchRect = this._getThumbTouchRect(i);\n\n      const containsPoint = thumbTouchRect.containsPoint(\n        nativeEvent.locationX,\n        nativeEvent.locationY\n      );\n\n      if (containsPoint) {\n        this._activeThumbIndex = i;\n      }\n\n      return containsPoint;\n    });\n\n    if (hitThumb) {\n      return true;\n    }\n\n    if (trackClickable) {\n      // set the active thumb index\n      if (values.length === 1) {\n        this._activeThumbIndex = 0;\n      } else {\n        // we will find the closest thumb and that will be the active thumb\n        const thumbDistances = values.map((_value, index) => {\n          const thumbTouchRect = this._getThumbTouchRect(index);\n\n          return thumbTouchRect.trackDistanceToPoint(nativeEvent.locationX);\n        });\n        this._activeThumbIndex = indexOfLowest(thumbDistances);\n      }\n\n      return true;\n    }\n\n    return false;\n  };\n\n  _getThumbTouchRect = (thumbIndex: number = 0): RectReturn => {\n    const { containerSize, thumbSize } = this.state;\n    const { thumbTouchSize } = this.props;\n    const { height, width } = thumbTouchSize || { height: 40, width: 40 };\n\n    const touchOverflowSize = this._getTouchOverflowSize();\n\n    return Rect({\n      height,\n      width,\n      x:\n        touchOverflowSize.width / 2 +\n        this._getThumbLeft(this._getCurrentValue(thumbIndex)) +\n        (thumbSize.width - width) / 2,\n      y: touchOverflowSize.height / 2 + (containerSize.height - height) / 2,\n    });\n  };\n\n  _activeThumbIndex: number = 0;\n  _containerSize: Dimensions | null | undefined;\n  _panResponder: PanResponderInstance;\n  _previousLeft: number = 0;\n  _thumbSize: Dimensions | null | undefined;\n  _trackSize: Dimensions | null | undefined;\n\n  _renderDebugThumbTouchRect = (\n    thumbLeft: Animated.AnimatedInterpolation,\n    index: number\n  ) => {\n    const { height, y, width } = this._getThumbTouchRect() || {};\n    const positionStyle = {\n      height,\n      left: thumbLeft,\n      top: y,\n      width,\n    };\n    return (\n      <Animated.View\n        key={`debug-thumb-${index}`}\n        pointerEvents=\"none\"\n        style={[styles.debugThumbTouchArea, positionStyle]}\n      />\n    );\n  };\n\n  _renderThumbImage = (thumbIndex: number = 0) => {\n    const { thumbImage } = this.props;\n\n    if (!thumbImage) {\n      return null;\n    }\n\n    return (\n      <Image\n        source={\n          (Array.isArray(thumbImage)\n            ? thumbImage[thumbIndex]\n            : thumbImage) as ImageSourcePropType\n        }\n      />\n    );\n  };\n\n  render() {\n    const {\n      containerStyle,\n      debugTouchArea,\n      maximumTrackTintColor,\n      maximumValue,\n      minimumTrackTintColor,\n      minimumValue,\n      renderAboveThumbComponent,\n      renderBelowThumbComponent,\n      renderTrackMarkComponent,\n      renderThumbComponent,\n      thumbStyle,\n      thumbTintColor,\n      trackStyle,\n      minimumTrackStyle: propMinimumTrackStyle,\n      maximumTrackStyle: propMaximumTrackStyle,\n      vertical,\n      startFromZero,\n      step = 0,\n      ...other\n    } = this.props;\n    const { allMeasured, containerSize, thumbSize, trackMarksValues, values } =\n      this.state;\n    const _startFromZero =\n      values.length === 1 && minimumValue < 0 && maximumValue > 0\n        ? startFromZero\n        : false;\n    const interpolatedThumbValues = values.map((value) =>\n      value.interpolate({\n        inputRange: [minimumValue, maximumValue],\n        outputRange: I18nManager.isRTL\n          ? [0, -(containerSize.width - thumbSize.width)]\n          : [0, containerSize.width - thumbSize.width],\n      })\n    );\n    const interpolatedTrackValues = values.map((value) =>\n      value.interpolate({\n        inputRange: [minimumValue, maximumValue],\n        outputRange: [0, containerSize.width - thumbSize.width],\n      })\n    );\n    const interpolatedTrackMarksValues =\n      trackMarksValues &&\n      trackMarksValues.map((v) =>\n        v.interpolate({\n          inputRange: [minimumValue, maximumValue],\n          outputRange: I18nManager.isRTL\n            ? [0, -(containerSize.width - thumbSize.width)]\n            : [0, containerSize.width - thumbSize.width],\n        })\n      );\n    const valueVisibleStyle = {} as ViewStyle;\n\n    if (!allMeasured) {\n      valueVisibleStyle.opacity = 0;\n    }\n\n    const interpolatedRawValues = this._getRawValues(interpolatedTrackValues);\n    const minRawValue = Math.min(...interpolatedRawValues);\n    const minThumbValue = new Animated.Value(minRawValue);\n    const maxRawValue = Math.max(...interpolatedRawValues);\n    const maxThumbValue = new Animated.Value(maxRawValue);\n    //@ts-ignore\n    const _value = values[0].__getValue();\n    const sliderWidthCoefficient =\n      containerSize.width / (Math.abs(minimumValue) + Math.abs(maximumValue));\n    const startPositionOnTrack = _startFromZero\n      ? _value < 0 + step\n        ? (_value + Math.abs(minimumValue)) * sliderWidthCoefficient\n        : Math.abs(minimumValue) * sliderWidthCoefficient\n      : 0;\n\n    const minTrackWidth = _startFromZero\n      ? Math.abs(_value) * sliderWidthCoefficient - thumbSize.width / 2\n      : interpolatedTrackValues[0];\n    const clearBorderRadius = {} as ViewStyle;\n    if (_startFromZero && _value < 0 + step) {\n      clearBorderRadius.borderBottomRightRadius = 0;\n      clearBorderRadius.borderTopRightRadius = 0;\n    }\n    if (_startFromZero && _value > 0) {\n      clearBorderRadius.borderTopLeftRadius = 0;\n      clearBorderRadius.borderBottomLeftRadius = 0;\n    }\n\n    const minimumTrackStyle = {\n      position: 'absolute',\n      left:\n        interpolatedTrackValues.length === 1\n          ? new Animated.Value(startPositionOnTrack)\n          : Animated.add(minThumbValue, thumbSize.width / 2),\n      width:\n        interpolatedTrackValues.length === 1\n          ? Animated.add(minTrackWidth, thumbSize.width / 2)\n          : Animated.add(Animated.multiply(minThumbValue, -1), maxThumbValue),\n      backgroundColor: minimumTrackTintColor,\n      ...valueVisibleStyle,\n      ...clearBorderRadius,\n    } as ViewStyle;\n\n    const touchOverflowStyle = this._getTouchOverflowStyle();\n\n    return (\n      <>\n        {renderAboveThumbComponent && (\n          <View style={styles.aboveThumbComponentsContainer}>\n            {interpolatedThumbValues.map((interpolationValue, i) => {\n              const animatedValue = values[i] || 0;\n              let v = 0;\n              animatedValue.addListener(({ value }) => {\n                v = value;\n              });\n              const value =\n                animatedValue instanceof Animated.Value ? v : animatedValue;\n              return (\n                <Animated.View\n                  key={`slider-above-thumb-${i}`}\n                  style={[\n                    styles.renderThumbComponent, // eslint-disable-next-line react-native/no-inline-styles\n                    {\n                      bottom: 0,\n                      left: thumbSize.width / 2,\n                      transform: [\n                        {\n                          translateX: interpolationValue,\n                        },\n                        {\n                          translateY: 0,\n                        },\n                      ],\n                      ...valueVisibleStyle,\n                    },\n                  ]}\n                >\n                  {renderAboveThumbComponent(i, value)}\n                </Animated.View>\n              );\n            })}\n          </View>\n        )}\n        <View\n          {...other}\n          style={[\n            styles.container,\n            vertical ? { transform: [{ rotate: '-90deg' }] } : {},\n            containerStyle,\n          ]}\n          onLayout={this._measureContainer}\n        >\n          <View\n            renderToHardwareTextureAndroid\n            style={[\n              styles.track,\n              {\n                backgroundColor: maximumTrackTintColor,\n              },\n              trackStyle,\n              propMaximumTrackStyle,\n            ]}\n            onLayout={this._measureTrack}\n          />\n          <Animated.View\n            renderToHardwareTextureAndroid\n            style={[\n              styles.track,\n              trackStyle,\n              minimumTrackStyle,\n              propMinimumTrackStyle,\n            ]}\n          />\n          {renderTrackMarkComponent &&\n            interpolatedTrackMarksValues &&\n            interpolatedTrackMarksValues.map((value, i) => (\n              <Animated.View\n                key={`track-mark-${i}`}\n                style={[\n                  styles.renderThumbComponent,\n                  {\n                    transform: [\n                      {\n                        translateX: value,\n                      },\n                      {\n                        translateY: 0,\n                      },\n                    ],\n                    ...valueVisibleStyle,\n                  },\n                ]}\n              >\n                {renderTrackMarkComponent(i)}\n              </Animated.View>\n            ))}\n          {interpolatedThumbValues.map((value, i) => (\n            <Animated.View\n              key={`slider-thumb-${i}`}\n              style={[\n                renderThumbComponent\n                  ? styles.renderThumbComponent\n                  : styles.thumb,\n                renderThumbComponent\n                  ? {}\n                  : {\n                      backgroundColor: thumbTintColor,\n                      ...thumbStyle,\n                    },\n                {\n                  transform: [\n                    {\n                      translateX: value,\n                    },\n                    {\n                      translateY: 0,\n                    },\n                  ],\n                  ...valueVisibleStyle,\n                },\n              ]}\n              onLayout={this._measureThumb}\n            >\n              {renderThumbComponent\n                ? Array.isArray(renderThumbComponent)\n                  ? renderThumbComponent[i]()\n                  : renderThumbComponent()\n                : this._renderThumbImage(i)}\n            </Animated.View>\n          ))}\n          <View\n            style={[styles.touchArea, touchOverflowStyle]}\n            {...this._panResponder.panHandlers}\n          >\n            {!!debugTouchArea &&\n              interpolatedThumbValues.map((value, i) =>\n                this._renderDebugThumbTouchRect(value, i)\n              )}\n          </View>\n        </View>\n        {renderBelowThumbComponent && (\n          <View style={styles.belowThumbComponentsContainer}>\n            {interpolatedThumbValues.map((interpolationValue, i) => {\n              const animatedValue = values[i] || 0;\n              const value =\n                animatedValue instanceof Animated.Value\n                  ? //@ts-ignore\n                    animatedValue.__getValue()\n                  : animatedValue;\n              return (\n                <Animated.View\n                  key={`slider-below-thumb-${i}`}\n                  style={[\n                    styles.renderThumbComponent, // eslint-disable-next-line react-native/no-inline-styles\n                    {\n                      top: 0,\n                      left: thumbSize.width / 2,\n                      transform: [\n                        {\n                          translateX: interpolationValue,\n                        },\n                        {\n                          translateY: 0,\n                        },\n                      ],\n                      ...valueVisibleStyle,\n                    },\n                  ]}\n                >\n                  {renderBelowThumbComponent(i, value)}\n                </Animated.View>\n              );\n            })}\n          </View>\n        )}\n      </>\n    );\n  }\n}\n\nconst SliderContainer = (props: SliderContainerProps) => {\n  const {\n    value,\n    setValue,\n    trackMarks,\n    trackMarkStyles,\n    containerStyle,\n    onCustomValueChange,\n  } = props;\n\n  let renderTrackMarkComponent: React.ReactNode;\n\n  if (trackMarks?.length && (!Array.isArray(value) || value?.length === 1)) {\n    /**\n     * @param {number} index\n     */\n    renderTrackMarkComponent = (index: number) => {\n      const currentMarkValue = trackMarks[index];\n\n      const style =\n        currentMarkValue > Math.max(Array.isArray(value) ? value[0] : value)\n          ? trackMarkStyles?.activeMark\n          : trackMarkStyles?.inactiveMark;\n      return <View style={style} />;\n    };\n  }\n\n  const renderChildren = () => {\n    return React.Children.map(props.children, (child) => {\n      if (!!child && child.type === Slider) {\n        return React.cloneElement(child, {\n          onValueChange: (input: number[]) => {\n            onCustomValueChange();\n            setValue(input);\n          },\n          renderTrackMarkComponent,\n          trackMarks,\n          value,\n        });\n      }\n\n      return child;\n    });\n  };\n\n  return (\n    <View style={[customStyles.sliderContainer, containerStyle]}>\n      <View style={customStyles.sliderContent}>{renderChildren()}</View>\n    </View>\n  );\n};\n\nconst CustomSlider = (props: CustomSliderProps) => {\n  return (\n    <SliderContainer {...props}>\n      <Slider {...props} />\n    </SliderContainer>\n  );\n};\nexport { SliderContainer };\nexport default CustomSlider;\n\nconst customStyles = StyleSheet.create({\n  sliderContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  sliderContent: {\n    flex: 1,\n  },\n});\n"]}