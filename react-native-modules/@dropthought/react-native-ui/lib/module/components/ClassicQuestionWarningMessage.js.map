{"version":3,"sources":["ClassicQuestionWarningMessage.tsx"],"names":["React","Text","StyleSheet","View","GlobalStyle","Colors","i18n","useTheme","COLOR_SCHEMES","ClassicQuestionWarningMessage","message","colorScheme","isDarkMode","dark","rtl","dir","textStyle","styles","hint","darkModeHint","horizontalFlip","lineHeight","language","undefined","container","tip","darkModeTip","bubble","darkModeBubble","create","flexDirection","marginTop","top","width","height","backgroundColor","borderStyle","borderTopWidth","borderBottomWidth","borderRightWidth","borderTopColor","borderBottomColor","borderRightColor","minWidth","paddingHorizontal","paddingVertical","borderRadius","color","black","fontSize"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,IAA3B,QAAuC,cAAvC;AAEA,OAAOC,WAAP,IAAsBC,MAAtB,QAAoC,WAApC;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,SAASC,QAAT,EAAmBC,aAAnB,QAAwC,mBAAxC;;AAMA,MAAMC,6BAA6B,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAwB;AAC5D,QAAM;AAAEC,IAAAA;AAAF,MAAkBJ,QAAQ,EAAhC;AACA,QAAMK,UAAU,GAAGD,WAAW,KAAKH,aAAa,CAACK,IAAjD;AACA,QAAMC,GAAG,GAAGR,IAAI,CAACS,GAAL,OAAe,KAA3B;AAEA,MAAI,CAACL,OAAL,EAAc,OAAO,IAAP;AAEd,QAAMM,SAAS,GAAG,CAChBC,MAAM,CAACC,IADS,EAEhBN,UAAU,IAAIK,MAAM,CAACE,YAFL,EAGhBL,GAAG,IAAIV,WAAW,CAACgB,cAHH,EAIhB;AAAEC,IAAAA,UAAU,EAAEf,IAAI,CAACgB,QAAL,KAAkB,IAAlB,GAAyB,EAAzB,GAA8BC;AAA5C,GAJgB,CAAlB;AAOA,sBACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACN,MAAM,CAACO,SAAR,EAAmBV,GAAG,IAAIV,WAAW,CAACgB,cAAtC;AAAb,kBACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACH,MAAM,CAACQ,GAAR,EAAab,UAAU,IAAIK,MAAM,CAACS,WAAlC;AAAb,IADF,eAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACT,MAAM,CAACU,MAAR,EAAgBf,UAAU,IAAIK,MAAM,CAACW,cAArC;AAAb,kBACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEZ;AAAb,KAAyBN,OAAzB,CADF,CAFF,CADF;AAQD,CAtBD;;AAwBA,eAAeD,6BAAf;AAEA,MAAMQ,MAAM,GAAGf,UAAU,CAAC2B,MAAX,CAAkB;AAC/BL,EAAAA,SAAS,EAAE;AACTM,IAAAA,aAAa,EAAE,KADN;AAETC,IAAAA,SAAS,EAAE;AAFF,GADoB;AAK/BN,EAAAA,GAAG,EAAE;AACHO,IAAAA,GAAG,EAAE,EADF;AAEHC,IAAAA,KAAK,EAAE,CAFJ;AAGHC,IAAAA,MAAM,EAAE,CAHL;AAIHC,IAAAA,eAAe,EAAE,aAJd;AAKHC,IAAAA,WAAW,EAAE,OALV;AAMHC,IAAAA,cAAc,EAAE,CANb;AAOHC,IAAAA,iBAAiB,EAAE,CAPhB;AAQHC,IAAAA,gBAAgB,EAAE,EARf;AASHC,IAAAA,cAAc,EAAE,aATb;AAUHC,IAAAA,iBAAiB,EAAE,aAVhB;AAWHC,IAAAA,gBAAgB,EAAE;AAXf,GAL0B;AAkB/BhB,EAAAA,WAAW,EAAE;AACXgB,IAAAA,gBAAgB,EAAE;AADP,GAlBkB;AAqB/Bf,EAAAA,MAAM,EAAE;AACNQ,IAAAA,eAAe,EAAE,SADX;AAENQ,IAAAA,QAAQ,EAAE,GAFJ;AAGNC,IAAAA,iBAAiB,EAAE,EAHb;AAINC,IAAAA,eAAe,EAAE,EAJX;AAKNC,IAAAA,YAAY,EAAE;AALR,GArBuB;AA4B/BlB,EAAAA,cAAc,EAAE;AACdO,IAAAA,eAAe,EAAE;AADH,GA5Be;AA+B/BjB,EAAAA,IAAI,EAAE;AACJ6B,IAAAA,KAAK,EAAE1C,MAAM,CAAC2C,KADV;AAEJC,IAAAA,QAAQ,EAAE;AAFN,GA/ByB;AAmC/B9B,EAAAA,YAAY,EAAE;AACZ4B,IAAAA,KAAK,EAAE;AADK;AAnCiB,CAAlB,CAAf","sourcesContent":["import React from 'react';\nimport { Text, StyleSheet, View } from 'react-native';\n\nimport GlobalStyle, { Colors } from '../styles';\nimport i18n from '../translation';\nimport { useTheme, COLOR_SCHEMES } from '../contexts/theme';\n\ntype Props = {\n  message: string;\n};\n\nconst ClassicQuestionWarningMessage = ({ message }: Props) => {\n  const { colorScheme } = useTheme();\n  const isDarkMode = colorScheme === COLOR_SCHEMES.dark;\n  const rtl = i18n.dir() === 'rtl';\n\n  if (!message) return null;\n\n  const textStyle = [\n    styles.hint,\n    isDarkMode && styles.darkModeHint,\n    rtl && GlobalStyle.horizontalFlip,\n    { lineHeight: i18n.language === 'te' ? 22 : undefined },\n  ];\n\n  return (\n    <View style={[styles.container, rtl && GlobalStyle.horizontalFlip]}>\n      <View style={[styles.tip, isDarkMode && styles.darkModeTip]} />\n      <View style={[styles.bubble, isDarkMode && styles.darkModeBubble]}>\n        <Text style={textStyle}>{message}</Text>\n      </View>\n    </View>\n  );\n};\n\nexport default ClassicQuestionWarningMessage;\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    marginTop: 12,\n  },\n  tip: {\n    top: 13,\n    width: 0,\n    height: 0,\n    backgroundColor: 'transparent',\n    borderStyle: 'solid',\n    borderTopWidth: 7,\n    borderBottomWidth: 7,\n    borderRightWidth: 12,\n    borderTopColor: 'transparent',\n    borderBottomColor: 'transparent',\n    borderRightColor: '#FFDEE4',\n  },\n  darkModeTip: {\n    borderRightColor: '#39393a',\n  },\n  bubble: {\n    backgroundColor: '#FFDEE4',\n    minWidth: 280,\n    paddingHorizontal: 18,\n    paddingVertical: 10,\n    borderRadius: 9,\n  },\n  darkModeBubble: {\n    backgroundColor: '#39393a',\n  },\n  hint: {\n    color: Colors.black,\n    fontSize: 13,\n  },\n  darkModeHint: {\n    color: '#FFE0E5',\n  },\n});\n"]}