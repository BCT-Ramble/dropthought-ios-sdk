{"version":3,"sources":["SurveyPageIndicator.tsx"],"names":["React","StyleSheet","View","Text","DimensionWidthType","useDimensionWidthType","opacity10","opacity60","Colors","useTheme","COLOR_SCHEMES","i18n","SurveyPageIndicator","props","survey","pageIndex","rtl","hexCode","colorScheme","isDarkMode","dark","themeColor","dimensionWidthType","dimensionStyles","phone","phoneStyles","tabletStyles","currentPage","pages","textStyle","styles","title","darkModeTitle","paddingBottom","language","container","backgroundColor","darkModeContainer","pageTitle","create","justifyContent","height","width","fontWeight","color","white","alignItems","paddingHorizontal","fontSize","letterSpacing","progressBarText","memo"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { StyleSheet, View, Text } from 'react-native';\n\nimport {\n  DimensionWidthType,\n  useDimensionWidthType,\n} from '../hooks/useWindowDimensions';\nimport { opacity10, opacity60, Colors } from '../styles';\nimport type { Survey } from '../data';\nimport { useTheme, COLOR_SCHEMES } from '../contexts/theme';\nimport i18n from '../translation';\n\ntype Props = {\n  pageIndex: number;\n  survey: Survey;\n  rtl: boolean;\n};\n\nconst SurveyPageIndicator = (props: Props) => {\n  const { survey, pageIndex = 0, rtl } = props;\n  const { hexCode, colorScheme } = useTheme();\n  const isDarkMode = colorScheme === COLOR_SCHEMES.dark;\n  const themeColor = hexCode;\n\n  const dimensionWidthType = useDimensionWidthType();\n  const dimensionStyles =\n    dimensionWidthType === DimensionWidthType.phone\n      ? phoneStyles\n      : tabletStyles;\n\n  const currentPage = survey.pages[pageIndex];\n\n  const textStyle = [\n    styles.title,\n    dimensionStyles.title,\n    isDarkMode && styles.darkModeTitle,\n    { paddingBottom: i18n.language === 'te' ? 5 : 0 },\n  ];\n  return (\n    <View\n      style={[\n        styles.container,\n        dimensionStyles.container,\n        {\n          backgroundColor: opacity10(themeColor),\n        },\n        isDarkMode && styles.darkModeContainer,\n        rtl ? styles.rtl : {},\n      ]}\n    >\n      <Text style={textStyle}>{currentPage.pageTitle}</Text>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    height: 40,\n    width: '100%',\n  },\n  darkModeContainer: {\n    backgroundColor: '#39393a',\n  },\n  title: {\n    fontWeight: '600',\n  },\n  darkModeTitle: {\n    color: opacity60(Colors.white),\n  },\n  rtl: {\n    alignItems: 'flex-end',\n  },\n});\n\nconst phoneStyles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 30,\n  },\n  title: {\n    fontSize: 14,\n    letterSpacing: 0.42,\n    color: Colors.progressBarText,\n  },\n});\n\nconst tabletStyles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 35,\n  },\n  title: {\n    fontSize: 16,\n    letterSpacing: 0.48,\n  },\n});\n\nexport default React.memo(SurveyPageIndicator);\n"]}