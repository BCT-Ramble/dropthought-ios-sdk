{"version":3,"sources":["SmileyRatingQuestionOption3.tsx"],"names":["React","useEffect","View","StyleSheet","Text","Animated","Dimensions","PanResponder","Platform","Colors","i18n","DimensionWidthType","useDimensionWidthType","LottieView","SurveyFooter","SurveyHeader","MandatoryTitle","useTheme","COLOR_SCHEMES","scaleLogic","option3LoopFaceTable","loopFaceTable","isNil","SmileyRatingQuestionOption3","survey","pageIndex","question","forgot","onClose","onPrevPage","onNextPage","onFeedback","feedback","answered","answers","answeredValue","parseInt","hexCode","backgroundColor","themeBackgroundColor","fontColor","colorScheme","windowHeight","get","height","questionId","scale","options","selectedIndex","setSelectedIndex","useState","score","setScore","loopLotties","setLoopLotties","scoreContainerOpacity","useRef","Value","current","scoreOpacity","descriptionYAxis","lottieRef","totalScore","Number","renderScore","backgroundColorList","panResponder","create","onStartShouldSetPanResponder","onMoveShouldSetPanResponder","onPanResponderRelease","_","dy","direction","Math","sign","isActionActive","abs","updateScore","scaleLogicList","scaledIndex","loopList","map","value","scaleKey","String","useCallback","number","isAtCoverScreen","newScore","setValue","sequence","timing","toValue","duration","useNativeDriver","start","type","dimensionWidthType","isPhone","phone","styles","phoneStyles","tabletStyles","animationBackgroundColor","white","dark","scoreSelectedStyle","scoreSelected","opacity","color","descStyle","desc","transform","translateY","lineHeight","language","undefined","slashStyle","slash","marginBottom","OS","scoreTotalStyle","scoreTotal","containerStyle","commonStyles","container","hintContainerStyle","hintContainer","initHintContainer","hintTextStyle","hintText","lottieContainer","scoreContainer","scoreText","panHandlers","contentContainer","mandatoryErrorMessage","t","submitSurvey","pageOrder","length","flex","flexDirection","justifyContent","alignItems","paddingBottom","width","paddingHorizontal","fontSize","fontWeight","textAlign","smileyRatingScoreGray"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport {\n  View,\n  StyleSheet,\n  Text,\n  Animated,\n  Dimensions,\n  PanResponder,\n  Platform,\n} from 'react-native';\nimport { Colors } from '../styles';\nimport i18n from '../translation';\nimport {\n  DimensionWidthType,\n  useDimensionWidthType,\n} from '../hooks/useWindowDimensions';\nimport type {\n  Feedback as OriginFeedback,\n  Question as OriginQuestion,\n  Survey,\n} from '../data';\nimport LottieView from 'lottie-react-native';\nimport SurveyFooter from '../containers/SurveyFooter';\nimport SurveyHeader from '../containers/SurveyHeader';\nimport MandatoryTitle from './MandatoryTitle';\nimport { useTheme, COLOR_SCHEMES } from '../contexts/theme';\nimport {\n  scaleLogic,\n  option3LoopFaceTable as loopFaceTable,\n} from '../utils/data';\nimport { isNil } from 'ramda';\n\ntype Feedback = OriginFeedback & {\n  answers: string[];\n};\n\ntype Question = OriginQuestion & {\n  options: string[];\n  scale: string;\n};\n\ntype Props = {\n  survey: Survey;\n  pageIndex: number;\n  question: Question;\n  forgot: boolean;\n  onClose: () => void;\n  onPrevPage: () => void;\n  onNextPage: () => void;\n  onFeedback: ({\n    questionId,\n    answers,\n    type,\n  }: {\n    questionId: string;\n    answers: number[];\n    type: string;\n  }) => void;\n  feedback: Feedback;\n};\n\nconst SmileyRatingQuestionOption3 = ({\n  survey,\n  pageIndex,\n  question,\n  forgot,\n  onClose,\n  onPrevPage,\n  onNextPage,\n  onFeedback,\n  feedback,\n}: Props) => {\n  const answered =\n    feedback &&\n    feedback.answers &&\n    !isNil(feedback.answers[0]) &&\n    typeof feedback.answers[0] === 'number';\n  const answeredValue: number = answered\n    ? parseInt(feedback.answers[0], 10)\n    : 0;\n\n  const {\n    hexCode,\n    backgroundColor: themeBackgroundColor,\n    fontColor,\n    colorScheme,\n  } = useTheme();\n\n  const windowHeight = Dimensions.get('window').height;\n  const { questionId, scale, options } = question;\n\n  const [selectedIndex, setSelectedIndex] = React.useState<number>(\n    answered ? answeredValue : 0\n  );\n  const [score, setScore] = React.useState<number>(\n    answered ? answeredValue : -1\n  );\n  const [loopLotties, setLoopLotties] = React.useState<string[]>([]);\n\n  const scoreContainerOpacity = React.useRef(\n    new Animated.Value(answered ? 1 : 0)\n  ).current;\n  const scoreOpacity = React.useRef(\n    new Animated.Value(answered ? 1 : 0)\n  ).current;\n  const descriptionYAxis = React.useRef(\n    new Animated.Value(answered ? 1 : windowHeight / 2 - 246 + 37)\n  ).current;\n  // 37 -> one text line height\n  // 246 -> Padding Vertical 123\n\n  const lottieRef = React.useRef<LottieView>();\n\n  const totalScore = Number(scale);\n  const renderScore = score + 1;\n\n  const backgroundColorList = [\n    '#fef6f6', //red\n    '#fff9f9', //red\n    '#f3f9fe', //blue\n    '#f5fdfb', //green\n    '#f3fcfa', //green\n  ];\n\n  const panResponder = PanResponder.create({\n    onStartShouldSetPanResponder: () => true,\n    onMoveShouldSetPanResponder: () => true,\n    onPanResponderRelease: (_, { dy }) => {\n      const direction = Math.sign(dy);\n      const isActionActive = Math.abs(dy) > 100;\n      if (isActionActive) {\n        if (direction === 1 && score > 0) {\n          updateScore(-1);\n        } else if (direction !== 1 && renderScore < totalScore) {\n          updateScore(1);\n        }\n      }\n    },\n  });\n  // choose which scale logic we want to use.\n  const scaleLogicList = scaleLogic[scale];\n  const scaledIndex = scaleLogicList[selectedIndex];\n\n  useEffect(() => {\n    const loopList = scaleLogicList.map((value) => {\n      const scaleKey = String(value + 1);\n      return loopFaceTable.get(scaleKey);\n    });\n\n    setLoopLotties(loopList);\n  }, [scaleLogicList]);\n\n  const updateScore = React.useCallback(\n    (number) => {\n      const isAtCoverScreen = score === -1;\n      const newScore = score + number;\n      setScore(newScore);\n\n      if (!isAtCoverScreen) {\n        setSelectedIndex(newScore);\n      }\n\n      //animtaion--\n      scoreOpacity.setValue(0);\n      if (isAtCoverScreen) {\n        Animated.sequence([\n          Animated.timing(descriptionYAxis, {\n            toValue: 0,\n            duration: 500,\n            useNativeDriver: true,\n          }),\n          Animated.timing(scoreContainerOpacity, {\n            toValue: 1,\n            duration: 500,\n            useNativeDriver: true,\n          }),\n          Animated.timing(scoreOpacity, {\n            toValue: 1,\n            duration: 500,\n            useNativeDriver: true,\n          }),\n        ]).start();\n      } else {\n        Animated.timing(scoreOpacity, {\n          toValue: 1,\n          duration: 500,\n          useNativeDriver: true,\n        }).start();\n      }\n      //animtaion--\n\n      onFeedback({\n        questionId,\n        answers: [newScore],\n        type: 'rating',\n      });\n    },\n    [\n      score,\n      scoreOpacity,\n      onFeedback,\n      questionId,\n      descriptionYAxis,\n      scoreContainerOpacity,\n    ]\n  );\n\n  const dimensionWidthType = useDimensionWidthType();\n  const isPhone = dimensionWidthType === DimensionWidthType.phone;\n  const styles = isPhone ? phoneStyles : tabletStyles;\n\n  const animationBackgroundColor =\n    score >= 0 ? backgroundColorList[scaledIndex] : Colors.white;\n\n  const backgroundColor =\n    colorScheme === COLOR_SCHEMES.dark\n      ? themeBackgroundColor\n      : animationBackgroundColor;\n\n  const scoreSelectedStyle = [\n    styles.scoreSelected,\n    { opacity: scoreOpacity, color: fontColor },\n  ];\n\n  const descStyle = [\n    styles.desc,\n    {\n      transform: [{ translateY: descriptionYAxis }],\n      opacity: scoreContainerOpacity,\n      color: fontColor,\n      lineHeight: i18n.language === 'te' ? 42 : undefined,\n    },\n  ];\n\n  const slashStyle = [\n    styles.slash,\n    {\n      opacity: scoreContainerOpacity,\n      marginBottom: Platform.OS === 'ios' ? 10 : -1,\n    },\n  ];\n\n  const scoreTotalStyle = [\n    styles.scoreTotal,\n    {\n      opacity: scoreContainerOpacity,\n      marginBottom: Platform.OS === 'ios' ? 4 : -3,\n    },\n  ];\n\n  const containerStyle = [\n    commonStyles.container,\n    {\n      backgroundColor,\n    },\n  ];\n\n  const hintContainerStyle =\n    score >= 0 ? commonStyles.hintContainer : commonStyles.initHintContainer;\n\n  const hintTextStyle = [commonStyles.hintText, { color: fontColor }];\n\n  const lottieContainer = (\n    <View style={commonStyles.lottieContainer}>\n      <LottieView\n        // @ts-ignore\n        ref={lottieRef}\n        source={loopLotties[selectedIndex]}\n        autoPlay\n        loop\n        speed={0.5}\n      />\n    </View>\n  );\n  const scoreContainer = (\n    <View style={commonStyles.scoreContainer}>\n      <View style={commonStyles.scoreText}>\n        <Animated.Text style={scoreSelectedStyle}>{renderScore}</Animated.Text>\n        <Animated.Text style={slashStyle}>{'/'}</Animated.Text>\n        <Animated.Text style={scoreTotalStyle}>{totalScore}</Animated.Text>\n      </View>\n      <Animated.Text style={descStyle}>{options[selectedIndex]}</Animated.Text>\n    </View>\n  );\n\n  return (\n    <>\n      <SurveyHeader\n        survey={survey}\n        pageIndex={pageIndex}\n        backgroundColor={backgroundColor}\n        onClose={onClose}\n      />\n      <View style={containerStyle} {...panResponder.panHandlers}>\n        <View style={commonStyles.contentContainer}>\n          <MandatoryTitle\n            question={question}\n            mandatoryErrorMessage={survey.mandatoryErrorMessage}\n            forgot={forgot}\n          />\n          {score >= 0 ? (\n            <>\n              {lottieContainer}\n              {scoreContainer}\n            </>\n          ) : null}\n          <View style={hintContainerStyle}>\n            <Text style={hintTextStyle}>\n              {i18n.t('option3HintDescription:title')}\n            </Text>\n          </View>\n        </View>\n      </View>\n      <SurveyFooter\n        submitSurvey={survey.submitSurvey}\n        surveyColor={hexCode}\n        isFirstPage={pageIndex === 0}\n        isLastPage={pageIndex === survey.pageOrder.length - 1}\n        onPrevPage={onPrevPage}\n        onNextPage={onNextPage}\n        backgroundColor={backgroundColor}\n      />\n    </>\n  );\n};\n\nexport default SmileyRatingQuestionOption3;\n\nconst commonStyles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: Colors.white,\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingBottom: 28,\n  },\n  contentContainer: {\n    flex: 1,\n    width: '100%',\n    paddingHorizontal: 42,\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  hintContainer: {\n    width: '100%',\n  },\n  initHintContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    width: '100%',\n  },\n  hintText: {\n    fontSize: 16,\n    fontWeight: '500',\n    textAlign: 'center',\n  },\n  lottieContainer: {\n    width: '100%',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flex: 1.2,\n  },\n  scoreContainer: {\n    flex: 1,\n    width: '100%',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%',\n  },\n  scoreText: {\n    flexDirection: 'row',\n    alignItems: 'flex-end',\n    height: 61,\n    marginBottom: 10,\n  },\n});\n\nconst phoneStyles = StyleSheet.create({\n  desc: {\n    fontSize: 20,\n    fontWeight: '600',\n    textAlign: 'center',\n  },\n  scoreSelected: {\n    fontSize: 50,\n    textAlign: 'center',\n    alignItems: 'baseline',\n  },\n  scoreTotal: {\n    fontSize: 37,\n    color: Colors.smileyRatingScoreGray,\n  },\n  slash: {\n    fontSize: 37,\n    color: Colors.smileyRatingScoreGray,\n  },\n});\n\nconst tabletStyles = StyleSheet.create({\n  desc: {\n    fontSize: 20,\n    fontWeight: '600',\n    textAlign: 'center',\n  },\n  scoreSelected: {\n    fontSize: 74,\n    textAlign: 'center',\n    alignItems: 'baseline',\n  },\n  scoreTotal: {\n    fontSize: 55,\n    color: Colors.smileyRatingScoreGray,\n  },\n  slash: {\n    fontSize: 37,\n    color: Colors.smileyRatingScoreGray,\n  },\n});\n"]}