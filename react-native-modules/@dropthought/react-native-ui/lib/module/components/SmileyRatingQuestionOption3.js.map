{"version":3,"sources":["SmileyRatingQuestionOption3.tsx"],"names":["React","useEffect","View","StyleSheet","Text","Animated","Dimensions","PanResponder","Colors","i18n","DimensionWidthType","useDimensionWidthType","LottieView","SurveyFooter","SurveyHeader","MandatoryTitle","useTheme","COLOR_SCHEMES","scaleLogic","option3LoopFaceTable","loopFaceTable","option3TransformTable","transformTable","SmileyRatingQuestionOption3","survey","pageIndex","question","forgot","onClose","onPrevPage","onNextPage","onFeedback","backgroundColor","themeBackgroundColor","fontColor","colorScheme","windowHeight","get","height","questionId","scale","options","selectedIndex","setSelectedIndex","useState","score","setScore","isLoop","setIsLoop","loopLotties","setLoopLotties","transformLotties","setTransformLotties","scoreContainerOpacity","useRef","Value","current","scoreOpacity","descriptionYAxis","totalScore","Number","renderScore","backgroundColorList","panResponder","create","onStartShouldSetPanResponder","onMoveShouldSetPanResponder","onPanResponderRelease","_","dy","direction","Math","sign","isActionActive","abs","updateScore","scaleLogicList","scaledIndex","loopList","map","value","scaleKey","String","transformList","index","array","fromScale","toScale","key","useCallback","number","isAtCoverScreen","newScore","setValue","sequence","timing","toValue","duration","useNativeDriver","start","answers","type","dimensionWidthType","isPhone","phone","styles","phoneStyles","tabletStyles","animationBackgroundColor","white","dark","lottieContainerStyle","commonStyles","lottieContainer","opacity","scoreSelectedStyle","scoreSelected","color","descStyle","desc","transform","translateY","scoreTotalStyle","scoreTotal","containerStyle","container","hintContainerStyle","hintContainer","flexEnd","hintTextStyle","hintText","lottieContent","isCancel","scoreContainer","scoreText","panHandlers","contentContainer","t","surveyProperty","hexCode","pageOrder","length","flex","flexDirection","justifyContent","alignItems","paddingBottom","width","paddingHorizontal","fontSize","fontWeight","textAlign","marginBottom","smileyRatingScoreGray"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport {\n  View,\n  StyleSheet,\n  Text,\n  Animated,\n  Dimensions,\n  PanResponder,\n} from 'react-native';\nimport { Colors } from '../styles';\nimport i18n from '../translation';\nimport {\n  DimensionWidthType,\n  useDimensionWidthType,\n} from '../hooks/useWindowDimensions';\nimport type {\n  Feedback as OriginFeedback,\n  Question as OriginQuestion,\n  Survey,\n} from '../data';\nimport LottieView from 'lottie-react-native';\nimport SurveyFooter from '../containers/SurveyFooter';\nimport SurveyHeader from '../containers/SurveyHeader';\nimport MandatoryTitle from './MandatoryTitle';\nimport { useTheme, COLOR_SCHEMES } from '../contexts/theme';\nimport {\n  scaleLogic,\n  option3LoopFaceTable as loopFaceTable,\n  option3TransformTable as transformTable,\n} from '../utils/data';\n\ntype Feedback = OriginFeedback & {\n  answers: string[];\n};\n\ntype Question = OriginQuestion & {\n  options: string[];\n  scale: string;\n};\n\ntype Props = {\n  survey: Survey;\n  pageIndex: number;\n  question: Question;\n  forgot: boolean;\n  onClose: () => void;\n  onPrevPage: () => void;\n  onNextPage: () => void;\n  onFeedback: ({\n    questionId,\n    answers,\n    type,\n  }: {\n    questionId: string;\n    answers: number[];\n    type: string;\n  }) => void;\n  feedback: Feedback;\n};\n\nconst SmileyRatingQuestionOption3 = ({\n  survey,\n  pageIndex,\n  question,\n  forgot,\n  onClose,\n  onPrevPage,\n  onNextPage,\n  onFeedback,\n}: Props) => {\n  const {\n    backgroundColor: themeBackgroundColor,\n    fontColor,\n    colorScheme,\n  } = useTheme();\n\n  const windowHeight = Dimensions.get('window').height;\n  const { questionId, scale, options } = question;\n\n  const [selectedIndex, setSelectedIndex] = React.useState<number>(0);\n  const [score, setScore] = React.useState<number>(-1);\n  const [isLoop, setIsLoop] = React.useState<boolean>(true);\n  const [loopLotties, setLoopLotties] = React.useState<string[]>([]);\n  const [transformLotties, setTransformLotties] = React.useState<string[]>([]);\n\n  const scoreContainerOpacity = React.useRef(new Animated.Value(0)).current;\n  const scoreOpacity = React.useRef(new Animated.Value(0)).current;\n  const descriptionYAxis = React.useRef(\n    new Animated.Value(windowHeight / 2 - 246 + 37)\n  ).current;\n  // 37 -> one text line height\n  // 246 -> Padding Vertical 123\n\n  const totalScore = Number(scale);\n  const renderScore = score + 1;\n\n  const backgroundColorList = [\n    '#fef6f6', //red\n    '#fff9f9', //red\n    '#f3f9fe', //blue\n    '#f5fdfb', //green\n    '#f3fcfa', //green\n  ];\n\n  const panResponder = PanResponder.create({\n    onStartShouldSetPanResponder: () => true,\n    onMoveShouldSetPanResponder: () => true,\n    onPanResponderRelease: (_, { dy }) => {\n      const direction = Math.sign(dy);\n      const isActionActive = Math.abs(dy) > 100;\n      if (isActionActive) {\n        // Add isLoop to avoid when animation transform and user tap the LottieView.\n        if (direction === 1 && score > 0 && isLoop) {\n          updateScore(-1);\n        } else if (direction !== 1 && renderScore < totalScore) {\n          updateScore(1);\n        }\n      }\n    },\n  });\n  // choose which scale logic we want to use.\n  const scaleLogicList = scaleLogic[scale];\n  const scaledIndex = scaleLogicList[selectedIndex];\n\n  useEffect(() => {\n    const loopList = scaleLogicList.map((value) => {\n      const scaleKey = String(value + 1);\n      return loopFaceTable.get(scaleKey);\n    });\n\n    const transformList = scaleLogicList.map((value, index, array) => {\n      if (index === 0) return '';\n      const fromScale = String(array[index - 1] + 1);\n      const toScale = String(value + 1);\n      const key = `${fromScale}-${toScale}`;\n      return transformTable.get(key);\n    });\n\n    setLoopLotties(loopList);\n    setTransformLotties(transformList);\n  }, [scaleLogicList]);\n\n  const updateScore = React.useCallback(\n    (number) => {\n      const isAtCoverScreen = score === -1;\n      const newScore = score + number;\n      setScore(newScore);\n      if (number > 0 && !isAtCoverScreen) {\n        setIsLoop(false);\n      }\n      if (!isAtCoverScreen) {\n        setSelectedIndex(newScore);\n      }\n\n      //animtaion--\n      scoreOpacity.setValue(0);\n      if (isAtCoverScreen) {\n        Animated.sequence([\n          Animated.timing(descriptionYAxis, {\n            toValue: 0,\n            duration: 500,\n            useNativeDriver: true,\n          }),\n          Animated.timing(scoreContainerOpacity, {\n            toValue: 1,\n            duration: 500,\n            useNativeDriver: true,\n          }),\n          Animated.timing(scoreOpacity, {\n            toValue: 1,\n            duration: 500,\n            useNativeDriver: true,\n          }),\n        ]).start();\n      } else {\n        Animated.timing(scoreOpacity, {\n          toValue: 1,\n          duration: 500,\n          useNativeDriver: true,\n        }).start();\n      }\n      //animtaion--\n\n      onFeedback({\n        questionId,\n        answers: [newScore],\n        type: 'rating',\n      });\n    },\n    [\n      score,\n      scoreOpacity,\n      onFeedback,\n      questionId,\n      descriptionYAxis,\n      scoreContainerOpacity,\n    ]\n  );\n\n  const dimensionWidthType = useDimensionWidthType();\n  const isPhone = dimensionWidthType === DimensionWidthType.phone;\n  const styles = isPhone ? phoneStyles : tabletStyles;\n\n  const animationBackgroundColor =\n    score >= 0 ? backgroundColorList[scaledIndex] : Colors.white;\n\n  const backgroundColor =\n    colorScheme === COLOR_SCHEMES.dark\n      ? themeBackgroundColor\n      : animationBackgroundColor;\n\n  const lottieContainerStyle = [\n    commonStyles.lottieContainer,\n    { opacity: scoreContainerOpacity },\n  ];\n\n  const scoreSelectedStyle = [\n    styles.scoreSelected,\n    { opacity: scoreOpacity, color: fontColor },\n  ];\n\n  const descStyle = [\n    styles.desc,\n    {\n      transform: [{ translateY: descriptionYAxis }],\n      opacity: scoreContainerOpacity,\n      color: fontColor,\n    },\n  ];\n\n  const scoreTotalStyle = [\n    styles.scoreTotal,\n    { opacity: scoreContainerOpacity },\n  ];\n\n  const containerStyle = [\n    commonStyles.container,\n    {\n      backgroundColor,\n    },\n  ];\n\n  const hintContainerStyle =\n    score >= 0\n      ? [commonStyles.hintContainer, commonStyles.flexEnd]\n      : [commonStyles.hintContainer];\n\n  const hintTextStyle = [commonStyles.hintText, { color: fontColor }];\n\n  const lottieContainer = (\n    <Animated.View style={lottieContainerStyle}>\n      <LottieView\n        source={\n          isLoop ? loopLotties[selectedIndex] : transformLotties[selectedIndex]\n        }\n        autoPlay\n        style={commonStyles.lottieContent}\n        loop={isLoop}\n        onAnimationFinish={(isCancel) => {\n          if (!isCancel) setIsLoop(true);\n        }}\n        speed={0.5}\n      />\n    </Animated.View>\n  );\n\n  const scoreContainer = (\n    <View style={commonStyles.scoreContainer}>\n      <View style={commonStyles.scoreContainer}>\n        <View style={commonStyles.scoreText}>\n          <Animated.Text style={scoreSelectedStyle}>\n            {renderScore}\n          </Animated.Text>\n          <Animated.Text style={scoreTotalStyle}>\n            {'/' + totalScore}\n          </Animated.Text>\n        </View>\n        <Animated.Text style={descStyle}>\n          {options[selectedIndex]}\n        </Animated.Text>\n      </View>\n    </View>\n  );\n\n  return (\n    <>\n      <SurveyHeader\n        survey={survey}\n        pageIndex={pageIndex}\n        backgroundColor={backgroundColor}\n        onClose={onClose}\n      />\n      <View style={containerStyle} {...panResponder.panHandlers}>\n        <View style={commonStyles.contentContainer}>\n          <MandatoryTitle question={question} forgot={forgot} />\n          {score >= 0 ? (\n            <>\n              {lottieContainer}\n              {scoreContainer}\n            </>\n          ) : null}\n          <View style={hintContainerStyle}>\n            <Text style={hintTextStyle}>\n              {i18n.t('option3HintDescription:title')}\n            </Text>\n          </View>\n        </View>\n      </View>\n      <SurveyFooter\n        surveyColor={survey.surveyProperty.hexCode}\n        isFirstPage={pageIndex === 0}\n        isLastPage={pageIndex === survey.pageOrder.length - 1}\n        onPrevPage={onPrevPage}\n        onNextPage={onNextPage}\n        backgroundColor={backgroundColor}\n      />\n    </>\n  );\n};\n\nexport default SmileyRatingQuestionOption3;\n\nconst commonStyles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: Colors.white,\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingBottom: 28,\n  },\n  contentContainer: {\n    flex: 1,\n    width: '100%',\n    paddingHorizontal: 42,\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  hintContainer: {\n    flex: 1,\n    justifyContent: 'center',\n  },\n  flexEnd: {\n    justifyContent: 'flex-end',\n  },\n  hintText: {\n    fontSize: 16,\n    fontWeight: '500',\n    textAlign: 'center',\n    marginBottom: 6,\n  },\n  lottieContainer: {\n    flex: 3,\n    width: '100%',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  lottieContent: {\n    width: '60%',\n  },\n  scoreContainer: {\n    flex: 1,\n    width: '100%',\n    flexDirection: 'column',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n  },\n  scoreText: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'baseline',\n  },\n});\n\nconst phoneStyles = StyleSheet.create({\n  desc: {\n    fontSize: 20,\n    fontWeight: '600',\n    textAlign: 'center',\n  },\n  scoreSelected: {\n    fontSize: 74,\n    textAlign: 'center',\n    alignItems: 'baseline',\n  },\n  scoreTotal: {\n    fontSize: 55,\n    color: Colors.smileyRatingScoreGray,\n  },\n});\n\nconst tabletStyles = StyleSheet.create({\n  desc: {\n    fontSize: 20,\n    fontWeight: '600',\n    textAlign: 'center',\n  },\n  scoreSelected: {\n    fontSize: 74,\n    textAlign: 'center',\n    alignItems: 'baseline',\n  },\n  scoreTotal: {\n    fontSize: 55,\n    color: Colors.smileyRatingScoreGray,\n  },\n});\n"]}