{"version":3,"sources":["SmileyRatingQuestionOption2.tsx"],"names":["React","View","StyleSheet","Text","Option1BackgroundColor","Option1BackgroundColorDark","i18n","DimensionWidthType","useDimensionWidthType","scaleLogic","WheelPicker","SurveyFooter","SurveyHeader","LottieView","useTheme","COLOR_SCHEMES","MandatoryTitle","lotties","require","SmileyRatingQuestionOption2","survey","pageIndex","question","forgot","onClose","onPrevPage","onNextPage","onFeedback","feedback","backgroundColor","themeBackgroundColor","fontColor","colorScheme","questionId","options","scale","selectedIndex","setSelectedIndex","useState","hasSelected","scaleLogicList","lottieSelectedIndex","setSelectedAndFeedback","useCallback","index","answers","type","handleSelected","descriptions","map","_","dummyDescroptions","dimensionWidthType","isPhone","phone","styles","phoneStyles","tabletStyles","selectedBackgroundColor","dark","unselectedBackgroundColor","questionContainerStyle","commonStyles","container","hintTextStyle","hintText","color","itemTextStyle","infoContainer","lottieContainer","lottieContent","initInfoContainer","t","selectedIndicatorStyle","surveyProperty","hexCode","pageOrder","length","memo","create","flex","paddingHorizontal","justifyContent","height","alignItems","flexDirection","width","opacity","fontSize","paddingVertical","fontWeight"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { View, StyleSheet, Text } from 'react-native';\nimport { Option1BackgroundColor, Option1BackgroundColorDark } from '../styles';\nimport i18n from '../translation';\nimport {\n  DimensionWidthType,\n  useDimensionWidthType,\n} from '../hooks/useWindowDimensions';\nimport type {\n  Feedback as OriginFeedback,\n  Question as OriginQuestion,\n  Survey,\n} from '../data';\nimport { scaleLogic } from '../utils/data';\nimport WheelPicker from './WheelPicker';\nimport SurveyFooter from '../containers/SurveyFooter';\nimport SurveyHeader from '../containers/SurveyHeader';\nimport LottieView from 'lottie-react-native';\nimport { useTheme, COLOR_SCHEMES } from '../contexts/theme';\nimport MandatoryTitle from './MandatoryTitle';\n\nconst lotties = [\n  require('../assets/animations/smiley_option1/option1_1.json'),\n  require('../assets/animations/smiley_option1/option1_2.json'),\n  require('../assets/animations/smiley_option1/option1_3.json'),\n  require('../assets/animations/smiley_option1/option1_4.json'),\n  require('../assets/animations/smiley_option1/option1_5.json'),\n];\n\ntype Feedback = OriginFeedback & {\n  answers: string[];\n};\n\ntype Question = OriginQuestion & {\n  options: string[];\n  scale: string;\n};\n\ntype Props = {\n  survey: Survey;\n  question: Question;\n  pageIndex: number;\n  forgot: boolean;\n  onClose: () => void;\n  onPrevPage: () => void;\n  onNextPage: () => void;\n  onFeedback: ({\n    questionId,\n    answers,\n    type,\n  }: {\n    questionId: string;\n    answers: number[];\n    type: string;\n  }) => void;\n  feedback: Feedback;\n};\n\nconst SmileyRatingQuestionOption2 = ({\n  survey,\n  pageIndex,\n  question,\n  forgot,\n  onClose,\n  onPrevPage,\n  onNextPage,\n  onFeedback,\n  feedback,\n}: Props) => {\n  const {\n    backgroundColor: themeBackgroundColor,\n    fontColor,\n    colorScheme,\n  } = useTheme();\n  const { questionId, options, scale } = question;\n  const [selectedIndex, setSelectedIndex] = React.useState<number>(-1);\n  const hasSelected = selectedIndex > -1;\n\n  const scaleLogicList = scaleLogic[scale];\n  const lottieSelectedIndex = scaleLogicList[selectedIndex];\n\n  const setSelectedAndFeedback = React.useCallback(\n    (index) => {\n      onFeedback({\n        questionId,\n        answers: [index],\n        type: 'rating',\n      });\n    },\n    [onFeedback, questionId]\n  );\n\n  const handleSelected = (index: number) => {\n    setSelectedIndex(index);\n    setSelectedAndFeedback(index);\n  };\n\n  const descriptions = scaleLogicList.map((_, index) => options[index]);\n  const dummyDescroptions = ['Select', ...descriptions];\n\n  const dimensionWidthType = useDimensionWidthType();\n  const isPhone = dimensionWidthType === DimensionWidthType.phone;\n  const styles = isPhone ? phoneStyles : tabletStyles;\n\n  const selectedBackgroundColor =\n    colorScheme === COLOR_SCHEMES.dark\n      ? Option1BackgroundColorDark\n      : Option1BackgroundColor;\n\n  const unselectedBackgroundColor = themeBackgroundColor;\n\n  const backgroundColor = hasSelected\n    ? selectedBackgroundColor[lottieSelectedIndex]\n    : unselectedBackgroundColor;\n\n  const questionContainerStyle = [commonStyles.container, { backgroundColor }];\n\n  const hintTextStyle = [styles.hintText, { color: fontColor }];\n  const itemTextStyle = [commonStyles.itemTextStyle, { color: fontColor }];\n\n  return (\n    <>\n      <SurveyHeader\n        survey={survey}\n        pageIndex={pageIndex}\n        backgroundColor={backgroundColor}\n        onClose={onClose}\n      />\n      <View style={questionContainerStyle}>\n        {feedback && hasSelected ? (\n          <View style={commonStyles.infoContainer}>\n            <MandatoryTitle question={question} forgot={forgot} />\n            <View style={commonStyles.lottieContainer}>\n              <LottieView\n                source={lotties[lottieSelectedIndex]}\n                autoPlay\n                style={commonStyles.lottieContent}\n                speed={0.5}\n              />\n            </View>\n          </View>\n        ) : (\n          <View style={commonStyles.initInfoContainer}>\n            <MandatoryTitle question={question} forgot={forgot} />\n            <Text style={hintTextStyle}>\n              {i18n.t('option1HintDescription:title')}\n            </Text>\n            <View />\n          </View>\n        )}\n        {hasSelected ? (\n          <WheelPicker\n            selectedIndex={selectedIndex}\n            options={descriptions}\n            onChange={(index) => {\n              if (index > -1) handleSelected(index);\n            }}\n            itemTextStyle={itemTextStyle}\n            selectedIndicatorStyle={commonStyles.selectedIndicatorStyle}\n            key={'WheelPicker-descriptions'}\n          />\n        ) : (\n          <WheelPicker\n            selectedIndex={0}\n            options={dummyDescroptions}\n            onChange={(index) => {\n              handleSelected(index - 1);\n            }}\n            itemTextStyle={itemTextStyle}\n            selectedIndicatorStyle={commonStyles.selectedIndicatorStyle}\n            key={'WheelPicker-dummyDescroptions'}\n          />\n        )}\n      </View>\n      <SurveyFooter\n        surveyColor={survey.surveyProperty.hexCode}\n        isFirstPage={pageIndex === 0}\n        isLastPage={pageIndex === survey.pageOrder.length - 1}\n        onPrevPage={onPrevPage}\n        onNextPage={onNextPage}\n        backgroundColor={backgroundColor}\n      />\n    </>\n  );\n};\n\nexport default React.memo(SmileyRatingQuestionOption2);\n\nconst commonStyles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingHorizontal: 42,\n    justifyContent: 'space-between',\n  },\n  infoContainer: {\n    flex: 1,\n    height: '100%',\n    alignItems: 'center',\n    justifyContent: 'space-around',\n  },\n  initInfoContainer: {\n    flex: 1,\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n  lottieContainer: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%',\n  },\n  lottieContent: {\n    width: '100%',\n  },\n  selectedIndicatorStyle: {\n    opacity: 0,\n  },\n  itemTextStyle: {\n    fontSize: 24,\n    paddingVertical: 9,\n  },\n});\n\nconst phoneStyles = StyleSheet.create({\n  hintText: {\n    fontSize: 16,\n    fontWeight: '500',\n  },\n});\n\nconst tabletStyles = StyleSheet.create({\n  hintText: {\n    fontSize: 16,\n    fontWeight: '500',\n  },\n});\n"]}