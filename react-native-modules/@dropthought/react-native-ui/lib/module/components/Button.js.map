{"version":3,"sources":["Button.tsx"],"names":["React","StyleSheet","TouchableOpacity","View","Text","Colors","Button","title","disabled","width","containerStyle","color","purple","props","buttonStyle","styles","button","backgroundColor","disabledButton","minWidth","container","create","alignSelf","alignItems","borderRadius","flex","undefined","paddingHorizontal","white","fontSize","fontWeight","letterSpacing","textAlign","paddingVertical","settingsButtonDisable"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SACEC,UADF,EAEEC,gBAFF,EAGEC,IAHF,EAIEC,IAJF,QAOO,cAPP;AASA,SAASC,MAAT,QAAuB,WAAvB;;AAUA,MAAMC,MAAM,GAAG,CAAC;AACdC,EAAAA,KADc;AAEdC,EAAAA,QAAQ,GAAG,KAFG;AAGdC,EAAAA,KAHc;AAIdC,EAAAA,cAJc;AAKdC,EAAAA,KAAK,GAAGN,MAAM,CAACO,MALD;AAMd,KAAGC;AANW,CAAD,KAOsB;AACnC,QAAMC,WAAwB,GAAG,CAC/BC,MAAM,CAACC,MADwB,EAE/B;AACEC,IAAAA,eAAe,EAAEN;AADnB,GAF+B,EAK/BH,QAAQ,GAAGO,MAAM,CAACG,cAAV,GAA2B,EALJ,EAM/BT,KAAK,GAAG;AAAEU,IAAAA,QAAQ,EAAEV;AAAZ,GAAH,GAAyB,EANC,CAAjC;AASA,sBACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACM,MAAM,CAACK,SAAR,EAAmBV,cAAnB;AAAb,kBACE,oBAAC,gBAAD,eAAsBG,KAAtB;AAA6B,IAAA,QAAQ,EAAEL;AAAvC,mBACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEM;AAAb,kBACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACR;AAApB,KAA4BA,KAA5B,CADF,CADF,CADF,CADF;AASD,CA1BD;;AA4BA,eAAeD,MAAf;AAEA,MAAMS,MAAM,GAAGd,UAAU,CAACoB,MAAX,CAAkB;AAC/BD,EAAAA,SAAS,EAAE;AACTE,IAAAA,SAAS,EAAE;AADF,GADoB;AAI/BN,EAAAA,MAAM,EAAE;AACNO,IAAAA,UAAU,EAAE,QADN;AAENC,IAAAA,YAAY,EAAE,CAFR;AAGNC,IAAAA,IAAI,EAAEC,SAHA;AAINC,IAAAA,iBAAiB,EAAE;AAJb,GAJuB;AAU/BpB,EAAAA,KAAK,EAAE;AACLI,IAAAA,KAAK,EAAEN,MAAM,CAACuB,KADT;AAELC,IAAAA,QAAQ,EAAE,EAFL;AAGLC,IAAAA,UAAU,EAAE,KAHP;AAILC,IAAAA,aAAa,EAAE,CAJV;AAKLC,IAAAA,SAAS,EAAE,QALN;AAMLC,IAAAA,eAAe,EAAE;AANZ,GAVwB;AAkB/Bf,EAAAA,cAAc,EAAE;AACdD,IAAAA,eAAe,EAAEZ,MAAM,CAAC6B;AADV;AAlBe,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\nimport {\n  StyleSheet,\n  TouchableOpacity,\n  View,\n  Text,\n  TouchableOpacityProps,\n  ViewStyle,\n} from 'react-native';\n\nimport { Colors } from '../styles';\n\ninterface Props {\n  title: string;\n  width?: number;\n  color?: string;\n  containerStyle?: ViewStyle;\n  disabled?: boolean;\n}\n\nconst Button = ({\n  title,\n  disabled = false,\n  width,\n  containerStyle,\n  color = Colors.purple,\n  ...props\n}: Props & TouchableOpacityProps) => {\n  const buttonStyle: ViewStyle[] = [\n    styles.button,\n    {\n      backgroundColor: color,\n    },\n    disabled ? styles.disabledButton : {},\n    width ? { minWidth: width } : {},\n  ];\n\n  return (\n    <View style={[styles.container, containerStyle]}>\n      <TouchableOpacity {...props} disabled={disabled}>\n        <View style={buttonStyle}>\n          <Text style={styles.title}>{title}</Text>\n        </View>\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nexport default Button;\n\nconst styles = StyleSheet.create({\n  container: {\n    alignSelf: 'center',\n  },\n  button: {\n    alignItems: 'center',\n    borderRadius: 3,\n    flex: undefined,\n    paddingHorizontal: 10,\n  },\n  title: {\n    color: Colors.white,\n    fontSize: 16,\n    fontWeight: '500',\n    letterSpacing: 0,\n    textAlign: 'center',\n    paddingVertical: 12,\n  },\n  disabledButton: {\n    backgroundColor: Colors.settingsButtonDisable,\n  },\n});\n"]}