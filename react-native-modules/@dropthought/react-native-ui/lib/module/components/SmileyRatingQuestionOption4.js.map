{"version":3,"sources":["SmileyRatingQuestionOption4.tsx"],"names":["React","useEffect","View","StyleSheet","Text","TouchableWithoutFeedback","Animated","TouchableOpacity","Dimensions","Image","Colors","i18n","DimensionWidthType","useDimensionWidthType","LottieView","SurveyFooter","SurveyHeader","useTheme","COLOR_SCHEMES","MandatoryTitle","scaleLogic","option4LoopFaceTable","loopFaceTable","option4TransformTable","transformTable","SmileyRatingQuestionOption4","survey","pageIndex","question","forgot","onClose","onPrevPage","onNextPage","onFeedback","windowHeight","get","height","questionId","scale","options","selectedIndex","setSelectedIndex","useState","score","setScore","isLoop","setIsLoop","loopLotties","setLoopLotties","transformLotties","setTransformLotties","scoreContainerOpacity","useRef","Value","current","scoreOpacity","descriptionYAxis","totalScore","Number","renderScore","hasEdited","scaleLogicList","lottieSelectedIndex","faceTable","loopList","map","value","scaleKey","String","transformList","index","array","fromScale","toScale","key","imageLignt","require","imageDark","updateScore","useCallback","number","isAtCoverScreen","newScore","setValue","sequence","timing","toValue","duration","useNativeDriver","start","answers","type","backgroundColor","fontColor","colorScheme","dimensionWidthType","isPhone","phone","styles","phoneStyles","tabletStyles","containerStyle","commonStyles","container","lottieContainerStyle","lottieContainer","opacity","scoreSelectedStyle","scoreSelected","color","descStyle","desc","transform","translateY","scoreTotalStyle","scoreTotal","hintContainerStyle","hintContainer","hintTextStyle","hintText","hintSubTextStyle","hintSubText","isCancel","infoImage","dark","scoreContainer","scoreText","contentContainer","t","count","surveyProperty","hexCode","pageOrder","length","create","flex","paddingHorizontal","flexDirection","alignItems","white","paddingBottom","width","marginBottom","justifyContent","fontSize","fontWeight","textAlign","smileyRatingScoreGray"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport {\n  View,\n  StyleSheet,\n  Text,\n  TouchableWithoutFeedback,\n  Animated,\n  TouchableOpacity,\n  Dimensions,\n  Image,\n} from 'react-native';\nimport { Colors } from '../styles';\nimport i18n from '../translation';\nimport {\n  DimensionWidthType,\n  useDimensionWidthType,\n} from '../hooks/useWindowDimensions';\nimport type { Question as OriginQuestion, Survey } from '../data';\nimport LottieView from 'lottie-react-native';\nimport SurveyFooter from '../containers/SurveyFooter';\nimport SurveyHeader from '../containers/SurveyHeader';\nimport { useTheme, COLOR_SCHEMES } from '../contexts/theme';\nimport MandatoryTitle from './MandatoryTitle';\nimport {\n  scaleLogic,\n  option4LoopFaceTable as loopFaceTable,\n  option4TransformTable as transformTable,\n} from '../utils/data';\n\ntype Question = OriginQuestion & {\n  options: string[];\n  scale: string;\n};\n\ntype Props = {\n  survey: Survey;\n  pageIndex: number;\n  question: Question;\n  forgot: boolean;\n  onClose: () => void;\n  onPrevPage: () => void;\n  onNextPage: () => void;\n  onFeedback: ({\n    questionId,\n    answers,\n    type,\n  }: {\n    questionId: string;\n    answers: number[];\n    type: string;\n  }) => void;\n};\n\nconst SmileyRatingQuestionOption4 = ({\n  survey,\n  pageIndex,\n  question,\n  forgot,\n  onClose,\n  onPrevPage,\n  onNextPage,\n  onFeedback,\n}: Props) => {\n  const windowHeight = Dimensions.get('window').height;\n  const { questionId, scale, options } = question;\n  const [selectedIndex, setSelectedIndex] = React.useState<number>(0);\n  const [score, setScore] = React.useState<number>(-1);\n  const [isLoop, setIsLoop] = React.useState<boolean>(true);\n  const [loopLotties, setLoopLotties] = React.useState<string[]>([]);\n  const [transformLotties, setTransformLotties] = React.useState<string[]>([]);\n  const scoreContainerOpacity = React.useRef(new Animated.Value(0)).current;\n  const scoreOpacity = React.useRef(new Animated.Value(0)).current;\n  const descriptionYAxis = React.useRef(\n    new Animated.Value(windowHeight / 2 - 246 + 37)\n  ).current;\n  // 37 -> one text line height\n  // 246 -> Padding Vertical 123\n\n  const totalScore = Number(scale);\n  const renderScore = score + 1;\n  const hasEdited = score >= 0;\n\n  // choose which scale logic we want to use.\n  const scaleLogicList = scaleLogic[scale];\n  const lottieSelectedIndex = scaleLogicList[selectedIndex];\n\n  useEffect(() => {\n    const faceTable = ['A', 'B', 'C', 'D', 'E'];\n\n    const loopList = scaleLogicList.map((value) => {\n      const scaleKey = String(value + 1) + faceTable[value];\n      return loopFaceTable.get(scaleKey);\n    });\n\n    const transformList = scaleLogicList.map((value, index, array) => {\n      if (index === 0) return '';\n      const fromScale =\n        String(array[index - 1] + 1) + faceTable[array[index - 1]];\n      const toScale = String(value + 1) + faceTable[value];\n      const key = `${fromScale}-${toScale}`;\n      return transformTable.get(key);\n    });\n\n    setLoopLotties(loopList);\n    setTransformLotties(transformList);\n  }, [scaleLogicList]);\n\n  const imageLignt = require('../assets/icOption4Info.png');\n  const imageDark = require('../assets/icOption4InfoDark.png');\n\n  const updateScore = React.useCallback(\n    (number) => {\n      const isAtCoverScreen = score === -1;\n      const newScore = score + number;\n      setScore(newScore);\n      if (number > 0 && !isAtCoverScreen) {\n        setIsLoop(false);\n      }\n      if (!isAtCoverScreen) {\n        setSelectedIndex(newScore);\n      }\n\n      //animtaion--\n      scoreOpacity.setValue(0);\n      if (isAtCoverScreen) {\n        Animated.sequence([\n          Animated.timing(descriptionYAxis, {\n            toValue: 0,\n            duration: 500,\n            useNativeDriver: true,\n          }),\n          Animated.timing(scoreContainerOpacity, {\n            toValue: 1,\n            duration: 500,\n            useNativeDriver: true,\n          }),\n          Animated.timing(scoreOpacity, {\n            toValue: 1,\n            duration: 500,\n            useNativeDriver: true,\n          }),\n        ]).start();\n      } else {\n        Animated.timing(scoreOpacity, {\n          toValue: 1,\n          duration: 500,\n          useNativeDriver: true,\n        }).start();\n      }\n      //animtaion--\n\n      onFeedback({\n        questionId,\n        answers: [newScore],\n        type: 'rating',\n      });\n    },\n    [\n      score,\n      scoreOpacity,\n      onFeedback,\n      questionId,\n      descriptionYAxis,\n      scoreContainerOpacity,\n    ]\n  );\n  const { backgroundColor, fontColor, colorScheme } = useTheme();\n\n  const dimensionWidthType = useDimensionWidthType();\n  const isPhone = dimensionWidthType === DimensionWidthType.phone;\n  const styles = isPhone ? phoneStyles : tabletStyles;\n\n  const containerStyle = [commonStyles.container, { backgroundColor }];\n\n  const lottieContainerStyle = [\n    commonStyles.lottieContainer,\n    { opacity: scoreContainerOpacity },\n  ];\n\n  const scoreSelectedStyle = [\n    styles.scoreSelected,\n    { opacity: scoreOpacity, color: fontColor },\n  ];\n\n  const descStyle = [\n    styles.desc,\n    {\n      transform: [{ translateY: descriptionYAxis }],\n      opacity: scoreContainerOpacity,\n      color: fontColor,\n    },\n  ];\n\n  const scoreTotalStyle = [\n    styles.scoreTotal,\n    { opacity: scoreContainerOpacity, color: fontColor },\n  ];\n\n  const hintContainerStyle = hasEdited ? null : commonStyles.hintContainer;\n\n  const hintTextStyle = [commonStyles.hintText, { color: fontColor }];\n\n  const hintSubTextStyle = [commonStyles.hintSubText, { color: fontColor }];\n\n  const lottieContainer = (\n    <Animated.View style={lottieContainerStyle}>\n      <TouchableWithoutFeedback\n        onPress={() => {\n          // Add isLoop to avoid when face transform and user tap the star.\n          if (score > 0 && isLoop) updateScore(-1);\n        }}\n      >\n        <LottieView\n          source={\n            isLoop\n              ? loopLotties[lottieSelectedIndex]\n              : transformLotties[lottieSelectedIndex]\n          }\n          autoPlay\n          loop={isLoop}\n          onAnimationFinish={(isCancel) => {\n            if (!isCancel) setIsLoop(true);\n          }}\n        />\n      </TouchableWithoutFeedback>\n    </Animated.View>\n  );\n\n  const infoImage = (\n    <Image\n      style={commonStyles.infoImage}\n      source={colorScheme === COLOR_SCHEMES.dark ? imageDark : imageLignt}\n    />\n  );\n\n  const scoreContainer = (\n    <TouchableWithoutFeedback\n      onPress={() => {\n        if (renderScore < totalScore) updateScore(1);\n      }}\n      style={commonStyles.scoreContainer}\n    >\n      <View style={commonStyles.scoreContainer}>\n        <View style={commonStyles.scoreText}>\n          <Animated.Text style={scoreSelectedStyle}>\n            {renderScore}\n          </Animated.Text>\n          <Animated.Text style={scoreTotalStyle}>\n            {'/' + totalScore}\n          </Animated.Text>\n        </View>\n        <Animated.Text style={descStyle}>\n          {options[selectedIndex]}\n        </Animated.Text>\n      </View>\n    </TouchableWithoutFeedback>\n  );\n\n  return (\n    <>\n      <SurveyHeader\n        survey={survey}\n        pageIndex={pageIndex}\n        backgroundColor={backgroundColor}\n        onClose={onClose}\n      />\n      <View style={containerStyle}>\n        <MandatoryTitle question={question} forgot={forgot} />\n        <View style={commonStyles.contentContainer}>\n          {hasEdited ? (\n            <>\n              {lottieContainer}\n              {scoreContainer}\n            </>\n          ) : null}\n          <TouchableOpacity\n            style={hintContainerStyle}\n            disabled={score > -1}\n            onPress={() => updateScore(1)}\n          >\n            <>\n              {hasEdited ? null : infoImage}\n              <Text style={hintTextStyle}>\n                {i18n.t('option4HintDescription:title')}\n              </Text>\n              <Text style={hintSubTextStyle}>\n                {i18n.t('option4HintDescription:subTitle', {\n                  count: totalScore,\n                })}\n              </Text>\n            </>\n          </TouchableOpacity>\n        </View>\n      </View>\n      <SurveyFooter\n        surveyColor={survey.surveyProperty.hexCode}\n        isFirstPage={pageIndex === 0}\n        isLastPage={pageIndex === survey.pageOrder.length - 1}\n        onPrevPage={onPrevPage}\n        onNextPage={onNextPage}\n        backgroundColor={backgroundColor}\n      />\n    </>\n  );\n};\n\nexport default SmileyRatingQuestionOption4;\n\nconst commonStyles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingHorizontal: 42,\n    flexDirection: 'column',\n    alignItems: 'center',\n    backgroundColor: Colors.white,\n    paddingBottom: 7,\n  },\n  contentContainer: {\n    width: '100%',\n    flex: 5,\n    alignItems: 'center',\n  },\n  infoImage: {\n    marginBottom: 30,\n  },\n  hintContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  hintText: {\n    fontSize: 16,\n    fontWeight: '500',\n    textAlign: 'center',\n    marginBottom: 6,\n  },\n  hintSubText: {\n    fontSize: 12,\n    fontWeight: '400',\n    textAlign: 'center',\n  },\n  lottieContainer: {\n    height: 60,\n    width: '100%',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  scoreContainer: {\n    flex: 3,\n    width: '100%',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  scoreText: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'baseline',\n  },\n});\n\nconst phoneStyles = StyleSheet.create({\n  desc: {\n    fontSize: 20,\n    fontWeight: '600',\n    textAlign: 'center',\n  },\n  scoreSelected: {\n    fontSize: 74,\n    textAlign: 'center',\n    alignItems: 'baseline',\n  },\n  scoreTotal: {\n    fontSize: 55,\n    color: Colors.smileyRatingScoreGray,\n  },\n});\n\nconst tabletStyles = StyleSheet.create({\n  desc: {\n    fontSize: 20,\n    fontWeight: '600',\n    textAlign: 'center',\n  },\n  scoreSelected: {\n    fontSize: 74,\n    textAlign: 'center',\n    alignItems: 'baseline',\n  },\n  scoreTotal: {\n    fontSize: 55,\n    color: Colors.smileyRatingScoreGray,\n  },\n});\n"]}