{"version":3,"sources":["WheelPickerItem.tsx"],"names":["React","Animated","Text","styles","WheelPickerItem","textStyle","style","height","option","index","visibleRest","currentScrollIndex","opacityFunction","rotationFunction","relativeScrollIndex","subtract","translateY","interpolate","inputRange","range","i","unshift","push","outputRange","y","Math","sin","PI","j","opacity","x","rotateX","transform","memo"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAA+BC,QAA/B,EAAyCC,IAAzC,QAAgE,cAAhE;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAcA,MAAMC,eAAoC,GAAG,CAAC;AAC5CC,EAAAA,SAD4C;AAE5CC,EAAAA,KAF4C;AAG5CC,EAAAA,MAH4C;AAI5CC,EAAAA,MAJ4C;AAK5CC,EAAAA,KAL4C;AAM5CC,EAAAA,WAN4C;AAO5CC,EAAAA,kBAP4C;AAQ5CC,EAAAA,eAR4C;AAS5CC,EAAAA;AAT4C,CAAD,KAUvC;AACJ,QAAMC,mBAAmB,GAAGb,QAAQ,CAACc,QAAT,CAAkBN,KAAlB,EAAyBE,kBAAzB,CAA5B;AAEA,QAAMK,UAAU,GAAGF,mBAAmB,CAACG,WAApB,CAAgC;AACjDC,IAAAA,UAAU,EAAE,CAAC,MAAM;AACjB,YAAMC,KAAK,GAAG,CAAC,CAAD,CAAd;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIV,WAAW,GAAG,CAAnC,EAAsCU,CAAC,EAAvC,EAA2C;AACzCD,QAAAA,KAAK,CAACE,OAAN,CAAc,CAACD,CAAf;AACAD,QAAAA,KAAK,CAACG,IAAN,CAAWF,CAAX;AACD;;AACD,aAAOD,KAAP;AACD,KAPW,GADqC;AASjDI,IAAAA,WAAW,EAAE,CAAC,MAAM;AAClB,YAAMJ,KAAK,GAAG,CAAC,CAAD,CAAd;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIV,WAAW,GAAG,CAAnC,EAAsCU,CAAC,EAAvC,EAA2C;AACzC,YAAII,CAAC,GACFjB,MAAM,GAAG,CAAV,IAAgB,IAAIkB,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,EAAL,GAAU,CAAV,GAAcd,gBAAgB,CAACO,CAAD,CAAvC,CAApB,CADF;;AAEA,aAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,CAApB,EAAuBQ,CAAC,EAAxB,EAA4B;AAC1BJ,UAAAA,CAAC,IAAIjB,MAAM,IAAI,IAAIkB,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,EAAL,GAAU,CAAV,GAAcd,gBAAgB,CAACe,CAAD,CAAvC,CAAR,CAAX;AACD;;AACDT,QAAAA,KAAK,CAACE,OAAN,CAAcG,CAAd;AACAL,QAAAA,KAAK,CAACG,IAAN,CAAW,CAACE,CAAZ;AACD;;AACD,aAAOL,KAAP;AACD,KAZY;AAToC,GAAhC,CAAnB;AAwBA,QAAMU,OAAO,GAAGf,mBAAmB,CAACG,WAApB,CAAgC;AAC9CC,IAAAA,UAAU,EAAE,CAAC,MAAM;AACjB,YAAMC,KAAK,GAAG,CAAC,CAAD,CAAd;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIV,WAAW,GAAG,CAAnC,EAAsCU,CAAC,EAAvC,EAA2C;AACzCD,QAAAA,KAAK,CAACE,OAAN,CAAc,CAACD,CAAf;AACAD,QAAAA,KAAK,CAACG,IAAN,CAAWF,CAAX;AACD;;AACD,aAAOD,KAAP;AACD,KAPW,GADkC;AAS9CI,IAAAA,WAAW,EAAE,CAAC,MAAM;AAClB,YAAMJ,KAAK,GAAG,CAAC,CAAD,CAAd;;AACA,WAAK,IAAIW,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIpB,WAAW,GAAG,CAAnC,EAAsCoB,CAAC,EAAvC,EAA2C;AACzC,cAAMN,CAAC,GAAGZ,eAAe,CAACkB,CAAD,CAAzB;AACAX,QAAAA,KAAK,CAACE,OAAN,CAAcG,CAAd;AACAL,QAAAA,KAAK,CAACG,IAAN,CAAWE,CAAX;AACD;;AACD,aAAOL,KAAP;AACD,KARY;AATiC,GAAhC,CAAhB;AAoBA,QAAMY,OAAO,GAAGjB,mBAAmB,CAACG,WAApB,CAAgC;AAC9CC,IAAAA,UAAU,EAAE,CAAC,MAAM;AACjB,YAAMC,KAAK,GAAG,CAAC,CAAD,CAAd;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIV,WAAW,GAAG,CAAnC,EAAsCU,CAAC,EAAvC,EAA2C;AACzCD,QAAAA,KAAK,CAACE,OAAN,CAAc,CAACD,CAAf;AACAD,QAAAA,KAAK,CAACG,IAAN,CAAWF,CAAX;AACD;;AACD,aAAOD,KAAP;AACD,KAPW,GADkC;AAS9CI,IAAAA,WAAW,EAAE,CAAC,MAAM;AAClB,YAAMJ,KAAK,GAAG,CAAC,MAAD,CAAd;;AACA,WAAK,IAAIW,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIpB,WAAW,GAAG,CAAnC,EAAsCoB,CAAC,EAAvC,EAA2C;AACzC,cAAMN,CAAC,GAAGX,gBAAgB,CAACiB,CAAD,CAA1B;AACAX,QAAAA,KAAK,CAACE,OAAN,CAAe,GAAEG,CAAE,KAAnB;AACAL,QAAAA,KAAK,CAACG,IAAN,CAAY,GAAEE,CAAE,KAAhB;AACD;;AACD,aAAOL,KAAP;AACD,KARY;AATiC,GAAhC,CAAhB;AAoBA,sBACE,oBAAC,QAAD,CAAU,IAAV;AACE,IAAA,KAAK,EAAE,CACLhB,MAAM,CAACK,MADF,EAELF,KAFK,EAGL;AAAEC,MAAAA,MAAF;AAAUsB,MAAAA,OAAV;AAAmBG,MAAAA,SAAS,EAAE,CAAC;AAAEhB,QAAAA;AAAF,OAAD,EAAiB;AAAEe,QAAAA;AAAF,OAAjB;AAA9B,KAHK;AADT,kBAOE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE1B,SAAb;AAAwB,IAAA,aAAa,EAAE;AAAvC,KACGG,MADH,CAPF,CADF;AAaD,CA1FD;;AA4FA,4BAAeR,KAAK,CAACiC,IAAN,CACb7B,eADa;AAEb;AACF;AACA;AACA;AACA;AACE,MAAM,IAPO,CAAf","sourcesContent":["import React from 'react';\nimport { StyleProp, TextStyle, Animated, Text, ViewStyle } from 'react-native';\nimport styles from './WheelPicker.styles';\n\ninterface ItemProps {\n  textStyle: StyleProp<TextStyle>;\n  style: StyleProp<ViewStyle>;\n  option: string | null;\n  height: number;\n  index: number;\n  currentScrollIndex: Animated.AnimatedAddition;\n  visibleRest: number;\n  rotationFunction: (x: number) => number;\n  opacityFunction: (x: number) => number;\n}\n\nconst WheelPickerItem: React.FC<ItemProps> = ({\n  textStyle,\n  style,\n  height,\n  option,\n  index,\n  visibleRest,\n  currentScrollIndex,\n  opacityFunction,\n  rotationFunction,\n}) => {\n  const relativeScrollIndex = Animated.subtract(index, currentScrollIndex);\n\n  const translateY = relativeScrollIndex.interpolate({\n    inputRange: (() => {\n      const range = [0];\n      for (let i = 1; i <= visibleRest + 1; i++) {\n        range.unshift(-i);\n        range.push(i);\n      }\n      return range;\n    })(),\n    outputRange: (() => {\n      const range = [0];\n      for (let i = 1; i <= visibleRest + 1; i++) {\n        let y =\n          (height / 2) * (1 - Math.sin(Math.PI / 2 - rotationFunction(i)));\n        for (let j = 1; j < i; j++) {\n          y += height * (1 - Math.sin(Math.PI / 2 - rotationFunction(j)));\n        }\n        range.unshift(y);\n        range.push(-y);\n      }\n      return range;\n    })(),\n  });\n\n  const opacity = relativeScrollIndex.interpolate({\n    inputRange: (() => {\n      const range = [0];\n      for (let i = 1; i <= visibleRest + 1; i++) {\n        range.unshift(-i);\n        range.push(i);\n      }\n      return range;\n    })(),\n    outputRange: (() => {\n      const range = [1];\n      for (let x = 1; x <= visibleRest + 1; x++) {\n        const y = opacityFunction(x);\n        range.unshift(y);\n        range.push(y);\n      }\n      return range;\n    })(),\n  });\n\n  const rotateX = relativeScrollIndex.interpolate({\n    inputRange: (() => {\n      const range = [0];\n      for (let i = 1; i <= visibleRest + 1; i++) {\n        range.unshift(-i);\n        range.push(i);\n      }\n      return range;\n    })(),\n    outputRange: (() => {\n      const range = ['0deg'];\n      for (let x = 1; x <= visibleRest + 1; x++) {\n        const y = rotationFunction(x);\n        range.unshift(`${y}deg`);\n        range.push(`${y}deg`);\n      }\n      return range;\n    })(),\n  });\n\n  return (\n    <Animated.View\n      style={[\n        styles.option,\n        style,\n        { height, opacity, transform: [{ translateY }, { rotateX }] },\n      ]}\n    >\n      <Text style={textStyle} numberOfLines={1}>\n        {option}\n      </Text>\n    </Animated.View>\n  );\n};\n\nexport default React.memo(\n  WheelPickerItem,\n  /**\n   * We enforce that this component will not rerender after the initial render.\n   * Therefore props that change on every render like style objects or functions\n   * do not need to be wrapped into useMemo and useCallback.\n   */\n  () => true\n);\n"]}